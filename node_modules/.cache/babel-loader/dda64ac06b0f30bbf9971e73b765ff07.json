{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thang\\\\Downloads\\\\Code structure\\\\src\\\\modules\\\\auth\\\\pages\\\\employeeManagement\\\\layouts\\\\options\\\\forms\\\\personalInfomation\\\\infoForm\\\\InfoForm1.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, FormControl, Grid, InputBase, MenuItem, Select, Stack, Typography } from '@mui/material';\nimport { fields1 } from '../fileds';\nimport { FormattedMessage } from 'react-intl';\nimport InputDateTime from '../../InputDateTime';\nimport { validateFieldGender, validateFieldName, validGender, validName } from '../../../../../../../utils';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst objectOption = ['Male', 'Female'];\n\nfunction InfoForm1() {\n  _s();\n\n  const [validate, setValidate] = useState();\n  const [validateForm, setValidateForm] = useState({\n    gender: '',\n    ktp: '',\n    name: '',\n    ncId: ''\n  });\n\n  const handleBlur = () => {\n    const validate = validateFieldName(validateForm);\n    setValidate(validate);\n\n    if (!validName(validate)) {\n      return;\n    }\n\n    console.log(validateForm);\n  };\n\n  const handleBlurInputGender = () => {\n    const validateGender = validateFieldGender(validateForm);\n    setValidate(validateGender);\n\n    if (!validGender(validateGender)) {\n      return;\n    }\n\n    console.log(validateForm);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    direction: \"column\",\n    spacing: 2,\n    sx: {\n      flex: '1 1 0%',\n      paddingLeft: '20px',\n      paddingRight: '20px',\n      gap: '10px'\n    },\n    children: fields1.map((item, index) => /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      sx: {\n        '&:first-of-type': {\n          marginLeft: '0',\n          marginTop: 0\n        },\n        marginTop: '0 !important'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 5,\n        xl: 4,\n        sx: {\n          paddingLeft: '0 !important',\n          paddingTop: '0 !important',\n          display: 'flex',\n          alignItems: 'center',\n          marginTop: '0 !important'\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          gutterBottom: true,\n          sx: {\n            fontFamily: 'SVN-Sofia-Regular',\n            display: 'flex',\n            alignItems: 'center',\n            margin: 0,\n            fontSize: '16px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormattedMessage, {\n            id: item.field\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            component: \"span\",\n            sx: {\n              color: 'rgb(229, 72, 77)',\n              margin: 0\n            },\n            children: item.required\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 7,\n        xl: 8,\n        sx: {\n          paddingLeft: '0 !important',\n          paddingTop: '0 !important'\n        },\n        children: [item.field === 'dob' && /*#__PURE__*/_jsxDEV(InputDateTime, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 38\n        }, this), item.field === 'name' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(InputBase, {\n            sx: {\n              backgroundColor: !!(validate === null || validate === void 0 ? void 0 : validate.name) ? 'rgb(255, 239, 239)' : 'rgb(241, 243, 245)',\n              input: {\n                padding: '12px'\n              },\n              borderRadius: '6px',\n              width: '100%',\n              border: !!(validate === null || validate === void 0 ? void 0 : validate.name) ? '1px solid rgb(243, 174, 175)' : 'none'\n            },\n            value: item.field === 'name' && validateForm.name,\n            onChange: e => {\n              setValidateForm({ ...validateForm,\n                name: e.target.value\n              });\n            },\n            type: item.type ? 'text' : 'number',\n            onBlur: handleBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this), !!(validate === null || validate === void 0 ? void 0 : validate.name) && /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-danger\",\n            children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: validate === null || validate === void 0 ? void 0 : validate.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this), item.field === 'ktp' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(InputBase, {\n            sx: {\n              backgroundColor: !!(validate === null || validate === void 0 ? void 0 : validate.ktp) ? 'rgb(255, 239, 239)' : 'rgb(241, 243, 245)',\n              border: !!(validate === null || validate === void 0 ? void 0 : validate.ktp) ? '1px solid rgb(243, 174, 175)' : 'none',\n              input: {\n                padding: '12px'\n              },\n              borderRadius: '6px',\n              width: '100%'\n            },\n            value: item.field === 'ktp' && validateForm.ktp,\n            onChange: e => {\n              setValidateForm({ ...validateForm,\n                ktp: e.target.value\n              });\n            },\n            type: item.type ? 'text' : 'number',\n            onBlur: handleBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this), !!(validate === null || validate === void 0 ? void 0 : validate.ktp) && /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-danger\",\n            children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: validate === null || validate === void 0 ? void 0 : validate.ktp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this), item.field === 'ncId' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(InputBase, {\n            sx: {\n              backgroundColor: !!(validate === null || validate === void 0 ? void 0 : validate.ncId) ? 'rgb(255, 239, 239)' : 'rgb(241, 243, 245)',\n              border: !!(validate === null || validate === void 0 ? void 0 : validate.ncId) ? '1px solid rgb(243, 174, 175)' : 'none',\n              input: {\n                padding: '12px'\n              },\n              borderRadius: '6px',\n              width: '100%'\n            },\n            value: item.field === 'ncId' && validateForm.ncId,\n            onChange: e => {\n              setValidateForm({ ...validateForm,\n                ncId: e.target.value\n              });\n            },\n            type: item.type ? 'text' : 'number',\n            onBlur: handleBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }, this), !!(validate === null || validate === void 0 ? void 0 : validate.ncId) && /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-danger\",\n            children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: validate === null || validate === void 0 ? void 0 : validate.ncId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }, this), item.input === 'input' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(InputBase, {\n            sx: {\n              backgroundColor: 'rgb(241, 243, 245)',\n              input: {\n                padding: '12px'\n              },\n              borderRadius: '6px',\n              width: '100%'\n            },\n            type: item.type ? 'text' : 'number'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 15\n        }, this), item.input === 'selected' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              minWidth: 120\n            },\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                value: validateForm.gender,\n                onChange: e => {\n                  setValidateForm({ ...validateForm,\n                    gender: e.target.value\n                  });\n                },\n                inputProps: {\n                  'aria-label': 'Without label'\n                },\n                sx: {\n                  backgroundColor: !!(validate === null || validate === void 0 ? void 0 : validate.gender) ? 'rgb(255, 239, 239)' : 'rgb(241, 243, 245)',\n                  border: !!(validate === null || validate === void 0 ? void 0 : validate.gender) ? '1px solid rgb(243, 174, 175)' : 'none',\n                  div: {\n                    padding: '12px'\n                  }\n                },\n                displayEmpty: true,\n                className: \"ip\",\n                onBlur: handleBlurInputGender,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  id: \"menu-item-1\",\n                  children: /*#__PURE__*/_jsxDEV(\"em\", {\n                    style: {\n                      fontSize: '16px',\n                      fontFamily: 'SVN-Sofia-Regular',\n                      fontStyle: 'normal',\n                      color: 'rgb(104, 112, 118)'\n                    },\n                    children: \"Choose Gender\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 23\n                }, this), objectOption.map((option, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  className: \"menu-item\",\n                  value: option,\n                  children: option\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 25\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 17\n          }, this), !!(validate === null || validate === void 0 ? void 0 : validate.gender) && /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-danger\",\n            children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: validate === null || validate === void 0 ? void 0 : validate.gender\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(InfoForm1, \"5EbZkm1UDgskB+G0IZR13dbmxZw=\");\n\n_c = InfoForm1;\nexport default InfoForm1;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoForm1\");","map":{"version":3,"sources":["C:/Users/thang/Downloads/Code structure/src/modules/auth/pages/employeeManagement/layouts/options/forms/personalInfomation/infoForm/InfoForm1.tsx"],"names":["Box","FormControl","Grid","InputBase","MenuItem","Select","Stack","Typography","fields1","FormattedMessage","InputDateTime","validateFieldGender","validateFieldName","validGender","validName","useState","objectOption","InfoForm1","validate","setValidate","validateForm","setValidateForm","gender","ktp","name","ncId","handleBlur","console","log","handleBlurInputGender","validateGender","flex","paddingLeft","paddingRight","gap","map","item","index","marginLeft","marginTop","paddingTop","display","alignItems","fontFamily","margin","fontSize","field","color","required","backgroundColor","input","padding","borderRadius","width","border","e","target","value","type","minWidth","div","fontStyle","option"],"mappings":"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","sourcesContent":["import { Box, FormControl, Grid, InputBase, MenuItem, Select, Stack, Typography } from '@mui/material';\r\nimport { fields1 } from '../fileds';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport InputDateTime from '../../InputDateTime';\r\nimport { validateFieldGender, validateFieldName, validGender, validName } from '../../../../../../../utils';\r\nimport { useCallback, useState } from 'react';\r\n\r\nconst objectOption = ['Male', 'Female'];\r\n\r\nfunction InfoForm1() {\r\n  const [validate, setValidate] = useState<any>();\r\n\r\n  const [validateForm, setValidateForm] = useState<any>({\r\n    gender: '',\r\n    ktp: '',\r\n    name: '',\r\n    ncId: '',\r\n  });\r\n\r\n  const handleBlur = () => {\r\n    const validate = validateFieldName(validateForm);\r\n\r\n    setValidate(validate);\r\n    if (!validName(validate)) {\r\n      return;\r\n    }\r\n    console.log(validateForm);\r\n  };\r\n\r\n  const handleBlurInputGender = () => {\r\n    const validateGender = validateFieldGender(validateForm);\r\n    setValidate(validateGender);\r\n    if (!validGender(validateGender)) {\r\n      return;\r\n    }\r\n    console.log(validateForm);\r\n  };\r\n\r\n  return (\r\n    <Stack\r\n      direction=\"column\"\r\n      spacing={2}\r\n      sx={{ flex: '1 1 0%', paddingLeft: '20px', paddingRight: '20px', gap: '10px' }}\r\n    >\r\n      {fields1.map((item: any, index: number) => (\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          key={index}\r\n          sx={{\r\n            '&:first-of-type': { marginLeft: '0', marginTop: 0 },\r\n            marginTop: '0 !important',\r\n          }}\r\n        >\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            md={5}\r\n            xl={4}\r\n            sx={{\r\n              paddingLeft: '0 !important',\r\n              paddingTop: '0 !important',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              marginTop: '0 !important',\r\n            }}\r\n          >\r\n            <Typography\r\n              variant=\"body2\"\r\n              gutterBottom\r\n              sx={{\r\n                fontFamily: 'SVN-Sofia-Regular',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                margin: 0,\r\n                fontSize: '16px',\r\n              }}\r\n            >\r\n              <FormattedMessage id={item.field} />\r\n              <Box component=\"span\" sx={{ color: 'rgb(229, 72, 77)', margin: 0 }}>\r\n                {item.required}\r\n              </Box>\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} md={7} xl={8} sx={{ paddingLeft: '0 !important', paddingTop: '0 !important' }}>\r\n            {item.field === 'dob' && <InputDateTime />}\r\n            {item.field === 'name' && (\r\n              <div>\r\n                <InputBase\r\n                  sx={{\r\n                    backgroundColor: !!validate?.name ? 'rgb(255, 239, 239)' : 'rgb(241, 243, 245)',\r\n                    input: { padding: '12px' },\r\n                    borderRadius: '6px',\r\n                    width: '100%',\r\n                    border: !!validate?.name ? '1px solid rgb(243, 174, 175)' : 'none',\r\n                  }}\r\n                  value={item.field === 'name' && validateForm.name}\r\n                  onChange={(e) => {\r\n                    setValidateForm({ ...validateForm, name: e.target.value });\r\n                  }}\r\n                  type={item.type ? 'text' : 'number'}\r\n                  onBlur={handleBlur}\r\n                />\r\n                {!!validate?.name && (\r\n                  <small className=\"text-danger\">\r\n                    <FormattedMessage id={validate?.name} />\r\n                  </small>\r\n                )}\r\n              </div>\r\n            )}\r\n            {item.field === 'ktp' && (\r\n              <div>\r\n                <InputBase\r\n                  sx={{\r\n                    backgroundColor: !!validate?.ktp ? 'rgb(255, 239, 239)' : 'rgb(241, 243, 245)',\r\n                    border: !!validate?.ktp ? '1px solid rgb(243, 174, 175)' : 'none',\r\n                    input: { padding: '12px' },\r\n                    borderRadius: '6px',\r\n                    width: '100%',\r\n                  }}\r\n                  value={item.field === 'ktp' && validateForm.ktp}\r\n                  onChange={(e) => {\r\n                    setValidateForm({ ...validateForm, ktp: e.target.value });\r\n                  }}\r\n                  type={item.type ? 'text' : 'number'}\r\n                  onBlur={handleBlur}\r\n                />\r\n                {!!validate?.ktp && (\r\n                  <small className=\"text-danger\">\r\n                    <FormattedMessage id={validate?.ktp} />\r\n                  </small>\r\n                )}\r\n              </div>\r\n            )}\r\n            {item.field === 'ncId' && (\r\n              <div>\r\n                <InputBase\r\n                  sx={{\r\n                    backgroundColor: !!validate?.ncId ? 'rgb(255, 239, 239)' : 'rgb(241, 243, 245)',\r\n                    border: !!validate?.ncId ? '1px solid rgb(243, 174, 175)' : 'none',\r\n                    input: { padding: '12px' },\r\n                    borderRadius: '6px',\r\n                    width: '100%',\r\n                  }}\r\n                  value={item.field === 'ncId' && validateForm.ncId}\r\n                  onChange={(e) => {\r\n                    setValidateForm({ ...validateForm, ncId: e.target.value });\r\n                  }}\r\n                  type={item.type ? 'text' : 'number'}\r\n                  onBlur={handleBlur}\r\n                />\r\n                {!!validate?.ncId && (\r\n                  <small className=\"text-danger\">\r\n                    <FormattedMessage id={validate?.ncId} />\r\n                  </small>\r\n                )}\r\n              </div>\r\n            )}\r\n            {item.input === 'input' && (\r\n              <div>\r\n                <InputBase\r\n                  sx={{\r\n                    backgroundColor: 'rgb(241, 243, 245)',\r\n                    input: { padding: '12px' },\r\n                    borderRadius: '6px',\r\n                    width: '100%',\r\n                  }}\r\n                  type={item.type ? 'text' : 'number'}\r\n                />\r\n              </div>\r\n            )}\r\n            {item.input === 'selected' && (\r\n              <div>\r\n                <Box sx={{ minWidth: 120 }}>\r\n                  <FormControl fullWidth>\r\n                    <Select\r\n                      value={validateForm.gender}\r\n                      onChange={(e) => {\r\n                        setValidateForm({ ...validateForm, gender: e.target.value });\r\n                      }}\r\n                      inputProps={{ 'aria-label': 'Without label' }}\r\n                      sx={{\r\n                        backgroundColor: !!validate?.gender ? 'rgb(255, 239, 239)' : 'rgb(241, 243, 245)',\r\n                        border: !!validate?.gender ? '1px solid rgb(243, 174, 175)' : 'none',\r\n                        div: { padding: '12px' },\r\n                      }}\r\n                      displayEmpty\r\n                      className=\"ip\"\r\n                      onBlur={handleBlurInputGender}\r\n                    >\r\n                      <MenuItem value=\"\" id=\"menu-item-1\">\r\n                        <em\r\n                          style={{\r\n                            fontSize: '16px',\r\n                            fontFamily: 'SVN-Sofia-Regular',\r\n                            fontStyle: 'normal',\r\n                            color: 'rgb(104, 112, 118)',\r\n                          }}\r\n                        >\r\n                          Choose Gender\r\n                        </em>\r\n                      </MenuItem>\r\n                      {objectOption.map((option: string, index: number) => (\r\n                        <MenuItem key={index} className=\"menu-item\" value={option}>\r\n                          {option}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Box>\r\n                {!!validate?.gender && (\r\n                  <small className=\"text-danger\">\r\n                    <FormattedMessage id={validate?.gender} />\r\n                  </small>\r\n                )}\r\n              </div>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      ))}\r\n    </Stack>\r\n  );\r\n}\r\n\r\nexport default InfoForm1;\r\n"]},"metadata":{},"sourceType":"module"}