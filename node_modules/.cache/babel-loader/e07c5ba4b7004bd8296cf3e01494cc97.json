{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport clsx from 'clsx';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridExpandedRowCountSelector } from '../../hooks/features/filter/gridFilterSelector';\nimport { gridRowCountSelector, gridRowsLoadingSelector } from '../../hooks/features/rows/gridRowsSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getMinimalContentHeight } from '../../hooks/features/rows/gridRowsUtils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridOverlayWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'OverlayWrapper',\n  overridesResolver: (props, styles) => styles.overlayWrapper\n})({\n  position: 'sticky',\n  // To stay in place while scrolling\n  top: 0,\n  left: 0,\n  width: 0,\n  // To stay above the content instead of shifting it down\n  height: 0,\n  // To stay above the content instead of shifting it down\n  zIndex: 4 // Should be above pinned columns, pinned rows and detail panel\n\n});\nconst GridOverlayWrapperInner = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'OverlayWrapperInner',\n  overridesResolver: (props, styles) => styles.overlayWrapperInner\n})({});\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlayWrapper'],\n    inner: ['overlayWrapperInner']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nfunction GridOverlayWrapper(props) {\n  var _viewportInnerSize$he, _viewportInnerSize$wi;\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const [viewportInnerSize, setViewportInnerSize] = React.useState(() => {\n    var _apiRef$current$getRo, _apiRef$current$getRo2;\n\n    return (_apiRef$current$getRo = (_apiRef$current$getRo2 = apiRef.current.getRootDimensions()) == null ? void 0 : _apiRef$current$getRo2.viewportInnerSize) != null ? _apiRef$current$getRo : null;\n  });\n  const handleViewportSizeChange = React.useCallback(() => {\n    var _apiRef$current$getRo3, _apiRef$current$getRo4;\n\n    setViewportInnerSize((_apiRef$current$getRo3 = (_apiRef$current$getRo4 = apiRef.current.getRootDimensions()) == null ? void 0 : _apiRef$current$getRo4.viewportInnerSize) != null ? _apiRef$current$getRo3 : null);\n  }, [apiRef]);\n  useEnhancedEffect(() => {\n    return apiRef.current.subscribeEvent('viewportInnerSizeChange', handleViewportSizeChange);\n  }, [apiRef, handleViewportSizeChange]);\n  let height = (_viewportInnerSize$he = viewportInnerSize == null ? void 0 : viewportInnerSize.height) != null ? _viewportInnerSize$he : 0;\n\n  if (rootProps.autoHeight && height === 0) {\n    height = getMinimalContentHeight(apiRef, rootProps.rowHeight); // Give room to show the overlay when there no rows.\n  }\n\n  const classes = useUtilityClasses(_extends({}, props, {\n    classes: rootProps.classes\n  }));\n\n  if (!viewportInnerSize) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(GridOverlayWrapperRoot, {\n    className: clsx(classes.root),\n    children: /*#__PURE__*/_jsx(GridOverlayWrapperInner, _extends({\n      className: clsx(classes.inner),\n      style: {\n        height,\n        width: (_viewportInnerSize$wi = viewportInnerSize == null ? void 0 : viewportInnerSize.width) != null ? _viewportInnerSize$wi : 0\n      }\n    }, props))\n  });\n}\n\nexport function GridOverlays() {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const visibleRowCount = useGridSelector(apiRef, gridExpandedRowCountSelector);\n  const loading = useGridSelector(apiRef, gridRowsLoadingSelector);\n  const showNoRowsOverlay = !loading && totalRowCount === 0;\n  const showNoResultsOverlay = !loading && totalRowCount > 0 && visibleRowCount === 0;\n  let overlay = null;\n\n  if (showNoRowsOverlay) {\n    var _rootProps$slotProps;\n\n    overlay = /*#__PURE__*/_jsx(rootProps.slots.noRowsOverlay, _extends({}, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.noRowsOverlay));\n  }\n\n  if (showNoResultsOverlay) {\n    var _rootProps$slotProps2;\n\n    overlay = /*#__PURE__*/_jsx(rootProps.slots.noResultsOverlay, _extends({}, (_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.noResultsOverlay));\n  }\n\n  if (loading) {\n    var _rootProps$slotProps3;\n\n    overlay = /*#__PURE__*/_jsx(rootProps.slots.loadingOverlay, _extends({}, (_rootProps$slotProps3 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps3.loadingOverlay));\n  }\n\n  if (overlay === null) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(GridOverlayWrapper, {\n    children: overlay\n  });\n}","map":{"version":3,"sources":["C:/Users/thang/Downloads/Code structure/node_modules/@mui/x-data-grid/components/base/GridOverlays.js"],"names":["_extends","React","styled","unstable_composeClasses","composeClasses","unstable_useEnhancedEffect","useEnhancedEffect","clsx","useGridSelector","gridExpandedRowCountSelector","gridRowCountSelector","gridRowsLoadingSelector","useGridApiContext","useGridRootProps","getMinimalContentHeight","getDataGridUtilityClass","jsx","_jsx","GridOverlayWrapperRoot","name","slot","overridesResolver","props","styles","overlayWrapper","position","top","left","width","height","zIndex","GridOverlayWrapperInner","overlayWrapperInner","useUtilityClasses","ownerState","classes","slots","root","inner","GridOverlayWrapper","_viewportInnerSize$he","_viewportInnerSize$wi","apiRef","rootProps","viewportInnerSize","setViewportInnerSize","useState","_apiRef$current$getRo","_apiRef$current$getRo2","current","getRootDimensions","handleViewportSizeChange","useCallback","_apiRef$current$getRo3","_apiRef$current$getRo4","subscribeEvent","autoHeight","rowHeight","className","children","style","GridOverlays","totalRowCount","visibleRowCount","loading","showNoRowsOverlay","showNoResultsOverlay","overlay","_rootProps$slotProps","noRowsOverlay","slotProps","_rootProps$slotProps2","noResultsOverlay","_rootProps$slotProps3","loadingOverlay"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport clsx from 'clsx';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridExpandedRowCountSelector } from '../../hooks/features/filter/gridFilterSelector';\nimport { gridRowCountSelector, gridRowsLoadingSelector } from '../../hooks/features/rows/gridRowsSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getMinimalContentHeight } from '../../hooks/features/rows/gridRowsUtils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridOverlayWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'OverlayWrapper',\n  overridesResolver: (props, styles) => styles.overlayWrapper\n})({\n  position: 'sticky',\n  // To stay in place while scrolling\n  top: 0,\n  left: 0,\n  width: 0,\n  // To stay above the content instead of shifting it down\n  height: 0,\n  // To stay above the content instead of shifting it down\n  zIndex: 4 // Should be above pinned columns, pinned rows and detail panel\n});\n\nconst GridOverlayWrapperInner = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'OverlayWrapperInner',\n  overridesResolver: (props, styles) => styles.overlayWrapperInner\n})({});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlayWrapper'],\n    inner: ['overlayWrapperInner']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridOverlayWrapper(props) {\n  var _viewportInnerSize$he, _viewportInnerSize$wi;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const [viewportInnerSize, setViewportInnerSize] = React.useState(() => {\n    var _apiRef$current$getRo, _apiRef$current$getRo2;\n    return (_apiRef$current$getRo = (_apiRef$current$getRo2 = apiRef.current.getRootDimensions()) == null ? void 0 : _apiRef$current$getRo2.viewportInnerSize) != null ? _apiRef$current$getRo : null;\n  });\n  const handleViewportSizeChange = React.useCallback(() => {\n    var _apiRef$current$getRo3, _apiRef$current$getRo4;\n    setViewportInnerSize((_apiRef$current$getRo3 = (_apiRef$current$getRo4 = apiRef.current.getRootDimensions()) == null ? void 0 : _apiRef$current$getRo4.viewportInnerSize) != null ? _apiRef$current$getRo3 : null);\n  }, [apiRef]);\n  useEnhancedEffect(() => {\n    return apiRef.current.subscribeEvent('viewportInnerSizeChange', handleViewportSizeChange);\n  }, [apiRef, handleViewportSizeChange]);\n  let height = (_viewportInnerSize$he = viewportInnerSize == null ? void 0 : viewportInnerSize.height) != null ? _viewportInnerSize$he : 0;\n  if (rootProps.autoHeight && height === 0) {\n    height = getMinimalContentHeight(apiRef, rootProps.rowHeight); // Give room to show the overlay when there no rows.\n  }\n\n  const classes = useUtilityClasses(_extends({}, props, {\n    classes: rootProps.classes\n  }));\n  if (!viewportInnerSize) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridOverlayWrapperRoot, {\n    className: clsx(classes.root),\n    children: /*#__PURE__*/_jsx(GridOverlayWrapperInner, _extends({\n      className: clsx(classes.inner),\n      style: {\n        height,\n        width: (_viewportInnerSize$wi = viewportInnerSize == null ? void 0 : viewportInnerSize.width) != null ? _viewportInnerSize$wi : 0\n      }\n    }, props))\n  });\n}\nexport function GridOverlays() {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const visibleRowCount = useGridSelector(apiRef, gridExpandedRowCountSelector);\n  const loading = useGridSelector(apiRef, gridRowsLoadingSelector);\n  const showNoRowsOverlay = !loading && totalRowCount === 0;\n  const showNoResultsOverlay = !loading && totalRowCount > 0 && visibleRowCount === 0;\n  let overlay = null;\n  if (showNoRowsOverlay) {\n    var _rootProps$slotProps;\n    overlay = /*#__PURE__*/_jsx(rootProps.slots.noRowsOverlay, _extends({}, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.noRowsOverlay));\n  }\n  if (showNoResultsOverlay) {\n    var _rootProps$slotProps2;\n    overlay = /*#__PURE__*/_jsx(rootProps.slots.noResultsOverlay, _extends({}, (_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.noResultsOverlay));\n  }\n  if (loading) {\n    var _rootProps$slotProps3;\n    overlay = /*#__PURE__*/_jsx(rootProps.slots.loadingOverlay, _extends({}, (_rootProps$slotProps3 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps3.loadingOverlay));\n  }\n  if (overlay === null) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridOverlayWrapper, {\n    children: overlay\n  });\n}"]},"metadata":{},"sourceType":"module"}