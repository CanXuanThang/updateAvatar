{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thang\\\\Downloads\\\\Code structure\\\\src\\\\modules\\\\auth\\\\pages\\\\UserPage.tsx\",\n    _s = $RefreshSig$();\n\nimport { useDispatch } from 'react-redux';\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { fetchThunk } from '../../common/redux/thunk';\nimport { API_PATHS } from '../../../configs/api';\nimport { RESPONSE_STATUS_SUCCESS } from '../../../utils/httpResponseCode';\nimport { ACCESS_TOKEN_KEY, APIUrl } from '../../../utils/constants';\nimport './UserPage.scss';\nimport { logout, setUserInfo } from '../redux/authReducer';\nimport { ROUTES } from '../../../configs/routes';\nimport { replace } from 'connected-react-router';\nimport { Modal, Button } from 'react-bootstrap';\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport { generateAvatarUpload } from '../../../utils/upload';\nimport Cookies from 'js-cookie';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserPage() {\n  _s();\n\n  var _completedCrop$width, _completedCrop$height;\n\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false);\n  const avatarInputRef = useRef(null);\n  const [data, setData] = useState();\n  const [image, setImage] = useState(data === null || data === void 0 ? void 0 : data.avatar);\n  const [openModal, setOpenModal] = useState(false);\n  const [crop, setCrop] = useState({\n    unit: '%',\n    width: 30,\n    aspect: 1\n  });\n  const imgRef = useRef(null);\n  const [completedCrop, setCompletedCrop] = useState(null);\n  const previewCanvasRef = useRef(null);\n  const getUser = useCallback(async () => {\n    setLoading(true);\n    const json = await dispatch(fetchThunk(API_PATHS.userProfile, 'get'));\n    setLoading(false);\n\n    if ((json === null || json === void 0 ? void 0 : json.code) === RESPONSE_STATUS_SUCCESS) {\n      setData(json.data);\n    }\n  }, [dispatch]);\n  useEffect(() => {\n    getUser();\n  }, [getUser]);\n\n  const onLogOut = () => {\n    dispatch(logout());\n    dispatch(replace(ROUTES.loginV2));\n  };\n\n  const changeAvatar = () => {\n    console.log('asddsa');\n    if (avatarInputRef.current !== null) avatarInputRef.current.click();\n  };\n\n  const onChooseAvatar = e => {\n    e.preventDefault();\n    const files = e.target.files;\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      setImage(reader.result);\n    };\n\n    if (files !== null && files.length) reader.readAsDataURL(files[0]);\n    setOpenModal(true);\n  };\n\n  const onLoad = useCallback(img => {\n    imgRef.current = img;\n  }, []);\n  useEffect(() => {\n    if (!completedCrop || !previewCanvasRef.current || !imgRef.current) {\n      return;\n    }\n\n    const image = imgRef.current;\n    const canvas = previewCanvasRef.current;\n    const crop = completedCrop;\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    const ctx = canvas.getContext('2d');\n    const pixelRatio = window.devicePixelRatio;\n    canvas.width = crop.width * pixelRatio * scaleX;\n    canvas.height = crop.height * pixelRatio * scaleY;\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    ctx.imageSmoothingQuality = 'high';\n    ctx.drawImage(image, crop.x * scaleX, crop.y * scaleY, crop.width * scaleX, crop.height * scaleY, 0, 0, crop.width * scaleX, crop.height * scaleY);\n  }, [completedCrop]);\n\n  const uploadAvatar = async () => {\n    const file = await generateAvatarUpload(previewCanvasRef.current, completedCrop);\n\n    if (file) {\n      const formData = new FormData();\n      formData.append('file', file, file.name);\n      const config = {\n        headers: {\n          'content-type': 'multipart/form-data',\n          Authorization: Cookies.get(ACCESS_TOKEN_KEY) || ''\n        }\n      };\n      const json = await axios.put(API_PATHS.userProfile, formData, config);\n\n      if (json.data && json.data.code === RESPONSE_STATUS_SUCCESS) {\n        dispatch(setUserInfo(json.data.data));\n      }\n    }\n  };\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Loading....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      style: {\n        margin: 'auto',\n        width: '100%',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profilepic\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `${APIUrl}/${data === null || data === void 0 ? void 0 : data.avatar}`,\n          className: \"card-img-top profilepic__image\",\n          alt: \"avatar_url\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profilepic__content\",\n          onClick: changeAvatar,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ref: avatarInputRef,\n            hidden: true,\n            type: \"file\",\n            onChange: onChooseAvatar,\n            accept: \"image/*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"profilepic__text\",\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: data === null || data === void 0 ? void 0 : data.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title\",\n          children: \"data Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: data === null || data === void 0 ? void 0 : data.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: data === null || data === void 0 ? void 0 : data.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title\",\n          children: \"State\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: data === null || data === void 0 ? void 0 : data.state\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title\",\n          children: \"Region\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: data === null || data === void 0 ? void 0 : data.region\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: onLogOut,\n          children: \"Log Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: openModal,\n      onHide: () => {\n        setOpenModal(false);\n      },\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(ReactCrop, {\n          src: image ? image : '',\n          crop: crop,\n          onChange: newCrop => {\n            setCrop(newCrop);\n          },\n          onImageLoaded: onLoad,\n          onComplete: c => setCompletedCrop(c)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: previewCanvasRef,\n            style: {\n              width: Math.round((_completedCrop$width = completedCrop === null || completedCrop === void 0 ? void 0 : completedCrop.width) !== null && _completedCrop$width !== void 0 ? _completedCrop$width : 0),\n              height: Math.round((_completedCrop$height = completedCrop === null || completedCrop === void 0 ? void 0 : completedCrop.height) !== null && _completedCrop$height !== void 0 ? _completedCrop$height : 0)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => {\n            setOpenModal(false);\n          },\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: () => {\n            setOpenModal(false);\n            uploadAvatar();\n          },\n          children: \"Save Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserPage, \"Hm6WtB0+/MwPUwbMXpPk2sSpEmU=\", false, function () {\n  return [useDispatch];\n});\n\n_c = UserPage;\nexport default UserPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserPage\");","map":{"version":3,"sources":["C:/Users/thang/Downloads/Code structure/src/modules/auth/pages/UserPage.tsx"],"names":["useDispatch","useCallback","useEffect","useRef","useState","fetchThunk","API_PATHS","RESPONSE_STATUS_SUCCESS","ACCESS_TOKEN_KEY","APIUrl","logout","setUserInfo","ROUTES","replace","Modal","Button","ReactCrop","generateAvatarUpload","Cookies","axios","UserPage","dispatch","loading","setLoading","avatarInputRef","data","setData","image","setImage","avatar","openModal","setOpenModal","crop","setCrop","unit","width","aspect","imgRef","completedCrop","setCompletedCrop","previewCanvasRef","getUser","json","userProfile","code","onLogOut","loginV2","changeAvatar","console","log","current","click","onChooseAvatar","e","preventDefault","files","target","reader","FileReader","onload","result","length","readAsDataURL","onLoad","img","canvas","scaleX","naturalWidth","scaleY","naturalHeight","height","ctx","getContext","pixelRatio","window","devicePixelRatio","setTransform","imageSmoothingQuality","drawImage","x","y","uploadAvatar","file","formData","FormData","append","name","config","headers","Authorization","get","put","margin","alignItems","email","description","state","region","newCrop","c","Math","round"],"mappings":"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","sourcesContent":["import { useDispatch } from 'react-redux';\r\nimport { ThunkDispatch } from 'redux-thunk';\r\nimport { AppState } from '../../../redux/reducer';\r\nimport { Action } from 'typesafe-actions';\r\nimport { ChangeEvent, useCallback, useEffect, useRef, useState } from 'react';\r\nimport { fetchThunk } from '../../common/redux/thunk';\r\nimport { API_PATHS } from '../../../configs/api';\r\nimport { RESPONSE_STATUS_SUCCESS } from '../../../utils/httpResponseCode';\r\nimport { IUser } from '../../../models/user';\r\nimport { ACCESS_TOKEN_KEY, APIUrl } from '../../../utils/constants';\r\nimport './UserPage.scss';\r\nimport { logout, setUserInfo } from '../redux/authReducer';\r\nimport { ROUTES } from '../../../configs/routes';\r\nimport { replace } from 'connected-react-router';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport ReactCrop from 'react-image-crop';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport { generateAvatarUpload } from '../../../utils/upload';\r\nimport Cookies from 'js-cookie';\r\nimport axios from 'axios';\r\n\r\nfunction UserPage() {\r\n  const dispatch = useDispatch<ThunkDispatch<AppState, null, Action<string>>>();\r\n  const [loading, setLoading] = useState(false);\r\n  const avatarInputRef = useRef<HTMLInputElement>(null);\r\n  const [data, setData] = useState<IUser>();\r\n  const [image, setImage] = useState(data?.avatar);\r\n  const [openModal, setOpenModal] = useState<boolean>(false);\r\n  const [crop, setCrop] = useState<any>({ unit: '%', width: 30, aspect: 1 });\r\n  const imgRef = useRef<any>(null);\r\n  const [completedCrop, setCompletedCrop] = useState<any>(null);\r\n  const previewCanvasRef = useRef<any>(null);\r\n\r\n  const getUser = useCallback(async () => {\r\n    setLoading(true);\r\n    const json = await dispatch(fetchThunk(API_PATHS.userProfile, 'get'));\r\n    setLoading(false);\r\n\r\n    if (json?.code === RESPONSE_STATUS_SUCCESS) {\r\n      setData(json.data);\r\n    }\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n  }, [getUser]);\r\n\r\n  const onLogOut = () => {\r\n    dispatch(logout());\r\n    dispatch(replace(ROUTES.loginV2));\r\n  };\r\n\r\n  const changeAvatar = () => {\r\n    console.log('asddsa');\r\n\r\n    if (avatarInputRef.current !== null) avatarInputRef.current.click();\r\n  };\r\n\r\n  const onChooseAvatar = (e: ChangeEvent<HTMLInputElement>) => {\r\n    e.preventDefault();\r\n    const files = e.target.files;\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      setImage(reader.result as any);\r\n    };\r\n    if (files !== null && files.length) reader.readAsDataURL(files[0]);\r\n    setOpenModal(true);\r\n  };\r\n\r\n  const onLoad = useCallback((img: any) => {\r\n    imgRef.current = img;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!completedCrop || !previewCanvasRef.current || !imgRef.current) {\r\n      return;\r\n    }\r\n\r\n    const image = imgRef.current;\r\n    const canvas = previewCanvasRef.current;\r\n    const crop = completedCrop;\r\n\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    const ctx = canvas.getContext('2d');\r\n    const pixelRatio = window.devicePixelRatio;\r\n\r\n    canvas.width = crop.width * pixelRatio * scaleX;\r\n    canvas.height = crop.height * pixelRatio * scaleY;\r\n\r\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n    ctx.imageSmoothingQuality = 'high';\r\n\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n    );\r\n  }, [completedCrop]);\r\n\r\n  const uploadAvatar = async () => {\r\n    const file = await generateAvatarUpload(previewCanvasRef.current, completedCrop);\r\n    if (file) {\r\n      const formData = new FormData();\r\n      formData.append('file', file, file.name);\r\n      const config = {\r\n        headers: {\r\n          'content-type': 'multipart/form-data',\r\n          Authorization: Cookies.get(ACCESS_TOKEN_KEY) || '',\r\n        },\r\n      };\r\n      const json = await axios.put(API_PATHS.userProfile, formData, config);\r\n      if (json.data && json.data.code === RESPONSE_STATUS_SUCCESS) {\r\n        dispatch(setUserInfo(json.data.data));\r\n      }\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <h3>Loading....</h3>;\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"card\" style={{ margin: 'auto', width: '100%', alignItems: 'center' }}>\r\n        <div className=\"profilepic\">\r\n          <img src={`${APIUrl}/${data?.avatar}`} className=\"card-img-top profilepic__image\" alt=\"avatar_url\" />\r\n          <div className=\"profilepic__content\" onClick={changeAvatar}>\r\n            <input ref={avatarInputRef} hidden type=\"file\" onChange={onChooseAvatar} accept=\"image/*\" />\r\n            <span className=\"profilepic__text\">Upload</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">Email</h5>\r\n          <p className=\"card-text\">{data?.email}</p>\r\n          <h5 className=\"card-title\">data Name</h5>\r\n          <p className=\"card-text\">{data?.name}</p>\r\n          <h5 className=\"card-title\">Description</h5>\r\n          <p className=\"card-text\">{data?.description}</p>\r\n          <h5 className=\"card-title\">State</h5>\r\n          <p className=\"card-text\">{data?.state}</p>\r\n          <h5 className=\"card-title\">Region</h5>\r\n          <p className=\"card-text\">{data?.region}</p>\r\n          <button className=\"btn btn-primary\" onClick={onLogOut}>\r\n            Log Out\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <Modal\r\n        show={openModal}\r\n        onHide={() => {\r\n          setOpenModal(false);\r\n        }}\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title>Upload</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <ReactCrop\r\n            src={image ? image : ''}\r\n            crop={crop}\r\n            onChange={(newCrop: any) => {\r\n              setCrop(newCrop);\r\n            }}\r\n            onImageLoaded={onLoad}\r\n            onComplete={(c) => setCompletedCrop(c)}\r\n          />\r\n          <div>\r\n            <canvas\r\n              ref={previewCanvasRef}\r\n              style={{ width: Math.round(completedCrop?.width ?? 0), height: Math.round(completedCrop?.height ?? 0) }}\r\n            />\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            variant=\"secondary\"\r\n            onClick={() => {\r\n              setOpenModal(false);\r\n            }}\r\n          >\r\n            Close\r\n          </Button>\r\n          <Button\r\n            variant=\"primary\"\r\n            onClick={() => {\r\n              setOpenModal(false);\r\n              uploadAvatar();\r\n            }}\r\n          >\r\n            Save Image\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserPage;\r\n"]},"metadata":{},"sourceType":"module"}