{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_useEnhancedEffect as useEnhancedEffect, unstable_capitalize as capitalize, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { GridRootStyles } from './GridRootStyles';\nimport { gridVisibleColumnDefinitionsSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridPrivateApiContext } from '../../hooks/utils/useGridPrivateApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { gridDensityValueSelector } from '../../hooks/features/density/densitySelector';\nimport { gridColumnGroupsHeaderMaxDepthSelector } from '../../hooks/features/columnGrouping/gridColumnGroupsSelector';\nimport { gridPinnedRowsCountSelector, gridRowCountSelector } from '../../hooks/features/rows/gridRowsSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    autoHeight,\n    density,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', autoHeight && 'autoHeight', `root--density${capitalize(density)}`, 'withBorderColor']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridRoot = /*#__PURE__*/React.forwardRef(function GridRoot(props, ref) {\n  const rootProps = useGridRootProps();\n\n  const {\n    children,\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridPrivateApiContext();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const densityValue = useGridSelector(apiRef, gridDensityValueSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const rootContainerRef = React.useRef(null);\n  const handleRef = useForkRef(rootContainerRef, ref);\n  const pinnedRowsCount = useGridSelector(apiRef, gridPinnedRowsCountSelector);\n\n  const ownerState = _extends({}, rootProps, {\n    density: densityValue\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  apiRef.current.register('public', {\n    rootElementRef: rootContainerRef\n  }); // Our implementation of <NoSsr />\n\n  const [mountedState, setMountedState] = React.useState(false);\n  useEnhancedEffect(() => {\n    setMountedState(true);\n  }, []);\n\n  if (!mountedState) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(GridRootStyles, _extends({\n    ref: handleRef,\n    className: clsx(className, classes.root),\n    ownerState: ownerState,\n    role: \"grid\",\n    \"aria-colcount\": visibleColumns.length,\n    \"aria-rowcount\": headerGroupingMaxDepth + 1 + pinnedRowsCount + totalRowCount,\n    \"aria-multiselectable\": !rootProps.disableMultipleRowSelection,\n    \"aria-label\": rootProps['aria-label'],\n    \"aria-labelledby\": rootProps['aria-labelledby']\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRoot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridRoot };","map":{"version":3,"sources":["C:/Users/thang/Downloads/Code structure/node_modules/@mui/x-data-grid/components/containers/GridRoot.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","clsx","unstable_useForkRef","useForkRef","unstable_useEnhancedEffect","useEnhancedEffect","unstable_capitalize","capitalize","unstable_composeClasses","composeClasses","GridRootStyles","gridVisibleColumnDefinitionsSelector","useGridSelector","useGridPrivateApiContext","useGridRootProps","getDataGridUtilityClass","gridDensityValueSelector","gridColumnGroupsHeaderMaxDepthSelector","gridPinnedRowsCountSelector","gridRowCountSelector","jsx","_jsx","useUtilityClasses","ownerState","autoHeight","density","classes","slots","root","GridRoot","forwardRef","props","ref","rootProps","children","className","other","apiRef","visibleColumns","totalRowCount","densityValue","headerGroupingMaxDepth","rootContainerRef","useRef","handleRef","pinnedRowsCount","current","register","rootElementRef","mountedState","setMountedState","useState","role","length","disableMultipleRowSelection","process","env","NODE_ENV","propTypes","sx","oneOfType","arrayOf","func","object","bool"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_useEnhancedEffect as useEnhancedEffect, unstable_capitalize as capitalize, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { GridRootStyles } from './GridRootStyles';\nimport { gridVisibleColumnDefinitionsSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridPrivateApiContext } from '../../hooks/utils/useGridPrivateApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { gridDensityValueSelector } from '../../hooks/features/density/densitySelector';\nimport { gridColumnGroupsHeaderMaxDepthSelector } from '../../hooks/features/columnGrouping/gridColumnGroupsSelector';\nimport { gridPinnedRowsCountSelector, gridRowCountSelector } from '../../hooks/features/rows/gridRowsSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    autoHeight,\n    density,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', autoHeight && 'autoHeight', `root--density${capitalize(density)}`, 'withBorderColor']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridRoot = /*#__PURE__*/React.forwardRef(function GridRoot(props, ref) {\n  const rootProps = useGridRootProps();\n  const {\n      children,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const densityValue = useGridSelector(apiRef, gridDensityValueSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const rootContainerRef = React.useRef(null);\n  const handleRef = useForkRef(rootContainerRef, ref);\n  const pinnedRowsCount = useGridSelector(apiRef, gridPinnedRowsCountSelector);\n  const ownerState = _extends({}, rootProps, {\n    density: densityValue\n  });\n  const classes = useUtilityClasses(ownerState);\n  apiRef.current.register('public', {\n    rootElementRef: rootContainerRef\n  });\n\n  // Our implementation of <NoSsr />\n  const [mountedState, setMountedState] = React.useState(false);\n  useEnhancedEffect(() => {\n    setMountedState(true);\n  }, []);\n  if (!mountedState) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridRootStyles, _extends({\n    ref: handleRef,\n    className: clsx(className, classes.root),\n    ownerState: ownerState,\n    role: \"grid\",\n    \"aria-colcount\": visibleColumns.length,\n    \"aria-rowcount\": headerGroupingMaxDepth + 1 + pinnedRowsCount + totalRowCount,\n    \"aria-multiselectable\": !rootProps.disableMultipleRowSelection,\n    \"aria-label\": rootProps['aria-label'],\n    \"aria-labelledby\": rootProps['aria-labelledby']\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRoot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridRoot };"]},"metadata":{},"sourceType":"module"}