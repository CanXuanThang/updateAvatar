{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useGridPrivateApiContext } from '../../hooks/utils/useGridPrivateApiContext';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { GridMainContainer } from '../containers/GridMainContainer';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridColumnPositionsSelector, gridColumnVisibilityModelSelector, gridVisibleColumnDefinitionsSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { gridFilterActiveItemsLookupSelector } from '../../hooks/features/filter/gridFilterSelector';\nimport { gridSortColumnLookupSelector } from '../../hooks/features/sorting/gridSortingSelector';\nimport { gridTabIndexColumnHeaderSelector, gridTabIndexCellSelector, gridFocusColumnHeaderSelector, unstable_gridTabIndexColumnGroupHeaderSelector, unstable_gridFocusColumnGroupHeaderSelector } from '../../hooks/features/focus/gridFocusStateSelector';\nimport { gridDensityFactorSelector } from '../../hooks/features/density/densitySelector';\nimport { gridColumnGroupsHeaderMaxDepthSelector, gridColumnGroupsHeaderStructureSelector } from '../../hooks/features/columnGrouping/gridColumnGroupsSelector';\nimport { gridColumnMenuSelector } from '../../hooks/features/columnMenu/columnMenuSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction GridBody(props) {\n  const {\n    VirtualScrollerComponent,\n    ColumnHeadersProps,\n    children\n  } = props;\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const rootRef = React.useRef(null);\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const filterColumnLookup = useGridSelector(apiRef, gridFilterActiveItemsLookupSelector);\n  const sortColumnLookup = useGridSelector(apiRef, gridSortColumnLookupSelector);\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const columnHeaderTabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const cellTabIndexState = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const columnGroupHeaderTabIndexState = useGridSelector(apiRef, unstable_gridTabIndexColumnGroupHeaderSelector);\n  const columnHeaderFocus = useGridSelector(apiRef, gridFocusColumnHeaderSelector);\n  const columnGroupHeaderFocus = useGridSelector(apiRef, unstable_gridFocusColumnGroupHeaderSelector);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const columnMenuState = useGridSelector(apiRef, gridColumnMenuSelector);\n  const columnVisibility = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const columnGroupsHeaderStructure = useGridSelector(apiRef, gridColumnGroupsHeaderStructureSelector);\n  const hasOtherElementInTabSequence = !(columnGroupHeaderTabIndexState === null && columnHeaderTabIndexState === null && cellTabIndexState === null);\n  const [isVirtualizationDisabled, setIsVirtualizationDisabled] = React.useState(rootProps.disableVirtualization);\n  useEnhancedEffect(() => {\n    apiRef.current.computeSizeAndPublishResizeEvent();\n    const elementToObserve = rootRef.current;\n\n    if (typeof ResizeObserver === 'undefined') {\n      return () => {};\n    }\n\n    let animationFrame;\n    const observer = new ResizeObserver(() => {\n      // See https://github.com/mui/mui-x/issues/8733\n      animationFrame = window.requestAnimationFrame(() => {\n        apiRef.current.computeSizeAndPublishResizeEvent();\n      });\n    });\n\n    if (elementToObserve) {\n      observer.observe(elementToObserve);\n    }\n\n    return () => {\n      if (animationFrame) {\n        window.cancelAnimationFrame(animationFrame);\n      }\n\n      if (elementToObserve) {\n        observer.unobserve(elementToObserve);\n      }\n    };\n  }, [apiRef]);\n  const disableVirtualization = React.useCallback(() => {\n    setIsVirtualizationDisabled(true);\n  }, []);\n  const enableVirtualization = React.useCallback(() => {\n    setIsVirtualizationDisabled(false);\n  }, []);\n  React.useEffect(() => {\n    setIsVirtualizationDisabled(rootProps.disableVirtualization);\n  }, [rootProps.disableVirtualization]); // The `useGridApiMethod` hook can't be used here, because it only installs the\n  // method if it doesn't exist yet. Once installed, it's never updated again.\n  // This break the methods above, since their closure comes from the first time\n  // they were installed. Which means that calling `setIsVirtualizationDisabled`\n  // will trigger a re-render, but it won't update the state. That can be solved\n  // by migrating the virtualization status to the global state.\n\n  apiRef.current.unstable_disableVirtualization = disableVirtualization;\n  apiRef.current.unstable_enableVirtualization = enableVirtualization;\n  const columnHeadersRef = React.useRef(null);\n  const columnsContainerRef = React.useRef(null);\n  const virtualScrollerRef = React.useRef(null);\n  apiRef.current.register('private', {\n    columnHeadersContainerElementRef: columnsContainerRef,\n    columnHeadersElementRef: columnHeadersRef,\n    virtualScrollerRef\n  });\n  const hasDimensions = !!apiRef.current.getRootDimensions();\n  return /*#__PURE__*/_jsxs(GridMainContainer, {\n    ref: rootRef,\n    children: [/*#__PURE__*/_jsx(rootProps.slots.columnHeaders, _extends({\n      ref: columnsContainerRef,\n      innerRef: columnHeadersRef,\n      visibleColumns: visibleColumns,\n      filterColumnLookup: filterColumnLookup,\n      sortColumnLookup: sortColumnLookup,\n      columnPositions: columnPositions,\n      columnHeaderTabIndexState: columnHeaderTabIndexState,\n      columnGroupHeaderTabIndexState: columnGroupHeaderTabIndexState,\n      columnHeaderFocus: columnHeaderFocus,\n      columnGroupHeaderFocus: columnGroupHeaderFocus,\n      densityFactor: densityFactor,\n      headerGroupingMaxDepth: headerGroupingMaxDepth,\n      columnMenuState: columnMenuState,\n      columnVisibility: columnVisibility,\n      columnGroupsHeaderStructure: columnGroupsHeaderStructure,\n      hasOtherElementInTabSequence: hasOtherElementInTabSequence\n    }, ColumnHeadersProps)), hasDimensions && /*#__PURE__*/_jsx(VirtualScrollerComponent // The content is only rendered after dimensions are computed because\n    // the lazy-loading hook is listening to `renderedRowsIntervalChange`,\n    // but only does something if the dimensions are also available.\n    // If this event is published while dimensions haven't been computed,\n    // the `onFetchRows` prop won't be called during mount.\n    , {\n      ref: virtualScrollerRef,\n      disableVirtualization: isVirtualizationDisabled\n    }), children]\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridBody.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node,\n  ColumnHeadersProps: PropTypes.object,\n  VirtualScrollerComponent: PropTypes.elementType.isRequired\n} : void 0;\nexport { GridBody };","map":{"version":3,"sources":["C:/Users/thang/Downloads/Code structure/node_modules/@mui/x-data-grid/components/base/GridBody.js"],"names":["_extends","React","PropTypes","unstable_useEnhancedEffect","useEnhancedEffect","useGridPrivateApiContext","useGridSelector","GridMainContainer","useGridRootProps","gridColumnPositionsSelector","gridColumnVisibilityModelSelector","gridVisibleColumnDefinitionsSelector","gridFilterActiveItemsLookupSelector","gridSortColumnLookupSelector","gridTabIndexColumnHeaderSelector","gridTabIndexCellSelector","gridFocusColumnHeaderSelector","unstable_gridTabIndexColumnGroupHeaderSelector","unstable_gridFocusColumnGroupHeaderSelector","gridDensityFactorSelector","gridColumnGroupsHeaderMaxDepthSelector","gridColumnGroupsHeaderStructureSelector","gridColumnMenuSelector","jsx","_jsx","jsxs","_jsxs","GridBody","props","VirtualScrollerComponent","ColumnHeadersProps","children","apiRef","rootProps","rootRef","useRef","visibleColumns","filterColumnLookup","sortColumnLookup","columnPositions","columnHeaderTabIndexState","cellTabIndexState","columnGroupHeaderTabIndexState","columnHeaderFocus","columnGroupHeaderFocus","densityFactor","headerGroupingMaxDepth","columnMenuState","columnVisibility","columnGroupsHeaderStructure","hasOtherElementInTabSequence","isVirtualizationDisabled","setIsVirtualizationDisabled","useState","disableVirtualization","current","computeSizeAndPublishResizeEvent","elementToObserve","ResizeObserver","animationFrame","observer","window","requestAnimationFrame","observe","cancelAnimationFrame","unobserve","useCallback","enableVirtualization","useEffect","unstable_disableVirtualization","unstable_enableVirtualization","columnHeadersRef","columnsContainerRef","virtualScrollerRef","register","columnHeadersContainerElementRef","columnHeadersElementRef","hasDimensions","getRootDimensions","ref","slots","columnHeaders","innerRef","process","env","NODE_ENV","propTypes","node","object","elementType","isRequired"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useGridPrivateApiContext } from '../../hooks/utils/useGridPrivateApiContext';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { GridMainContainer } from '../containers/GridMainContainer';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridColumnPositionsSelector, gridColumnVisibilityModelSelector, gridVisibleColumnDefinitionsSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { gridFilterActiveItemsLookupSelector } from '../../hooks/features/filter/gridFilterSelector';\nimport { gridSortColumnLookupSelector } from '../../hooks/features/sorting/gridSortingSelector';\nimport { gridTabIndexColumnHeaderSelector, gridTabIndexCellSelector, gridFocusColumnHeaderSelector, unstable_gridTabIndexColumnGroupHeaderSelector, unstable_gridFocusColumnGroupHeaderSelector } from '../../hooks/features/focus/gridFocusStateSelector';\nimport { gridDensityFactorSelector } from '../../hooks/features/density/densitySelector';\nimport { gridColumnGroupsHeaderMaxDepthSelector, gridColumnGroupsHeaderStructureSelector } from '../../hooks/features/columnGrouping/gridColumnGroupsSelector';\nimport { gridColumnMenuSelector } from '../../hooks/features/columnMenu/columnMenuSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridBody(props) {\n  const {\n    VirtualScrollerComponent,\n    ColumnHeadersProps,\n    children\n  } = props;\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const rootRef = React.useRef(null);\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const filterColumnLookup = useGridSelector(apiRef, gridFilterActiveItemsLookupSelector);\n  const sortColumnLookup = useGridSelector(apiRef, gridSortColumnLookupSelector);\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const columnHeaderTabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const cellTabIndexState = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const columnGroupHeaderTabIndexState = useGridSelector(apiRef, unstable_gridTabIndexColumnGroupHeaderSelector);\n  const columnHeaderFocus = useGridSelector(apiRef, gridFocusColumnHeaderSelector);\n  const columnGroupHeaderFocus = useGridSelector(apiRef, unstable_gridFocusColumnGroupHeaderSelector);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const columnMenuState = useGridSelector(apiRef, gridColumnMenuSelector);\n  const columnVisibility = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const columnGroupsHeaderStructure = useGridSelector(apiRef, gridColumnGroupsHeaderStructureSelector);\n  const hasOtherElementInTabSequence = !(columnGroupHeaderTabIndexState === null && columnHeaderTabIndexState === null && cellTabIndexState === null);\n  const [isVirtualizationDisabled, setIsVirtualizationDisabled] = React.useState(rootProps.disableVirtualization);\n  useEnhancedEffect(() => {\n    apiRef.current.computeSizeAndPublishResizeEvent();\n    const elementToObserve = rootRef.current;\n    if (typeof ResizeObserver === 'undefined') {\n      return () => {};\n    }\n    let animationFrame;\n    const observer = new ResizeObserver(() => {\n      // See https://github.com/mui/mui-x/issues/8733\n      animationFrame = window.requestAnimationFrame(() => {\n        apiRef.current.computeSizeAndPublishResizeEvent();\n      });\n    });\n    if (elementToObserve) {\n      observer.observe(elementToObserve);\n    }\n    return () => {\n      if (animationFrame) {\n        window.cancelAnimationFrame(animationFrame);\n      }\n      if (elementToObserve) {\n        observer.unobserve(elementToObserve);\n      }\n    };\n  }, [apiRef]);\n  const disableVirtualization = React.useCallback(() => {\n    setIsVirtualizationDisabled(true);\n  }, []);\n  const enableVirtualization = React.useCallback(() => {\n    setIsVirtualizationDisabled(false);\n  }, []);\n  React.useEffect(() => {\n    setIsVirtualizationDisabled(rootProps.disableVirtualization);\n  }, [rootProps.disableVirtualization]);\n\n  // The `useGridApiMethod` hook can't be used here, because it only installs the\n  // method if it doesn't exist yet. Once installed, it's never updated again.\n  // This break the methods above, since their closure comes from the first time\n  // they were installed. Which means that calling `setIsVirtualizationDisabled`\n  // will trigger a re-render, but it won't update the state. That can be solved\n  // by migrating the virtualization status to the global state.\n  apiRef.current.unstable_disableVirtualization = disableVirtualization;\n  apiRef.current.unstable_enableVirtualization = enableVirtualization;\n  const columnHeadersRef = React.useRef(null);\n  const columnsContainerRef = React.useRef(null);\n  const virtualScrollerRef = React.useRef(null);\n  apiRef.current.register('private', {\n    columnHeadersContainerElementRef: columnsContainerRef,\n    columnHeadersElementRef: columnHeadersRef,\n    virtualScrollerRef\n  });\n  const hasDimensions = !!apiRef.current.getRootDimensions();\n  return /*#__PURE__*/_jsxs(GridMainContainer, {\n    ref: rootRef,\n    children: [/*#__PURE__*/_jsx(rootProps.slots.columnHeaders, _extends({\n      ref: columnsContainerRef,\n      innerRef: columnHeadersRef,\n      visibleColumns: visibleColumns,\n      filterColumnLookup: filterColumnLookup,\n      sortColumnLookup: sortColumnLookup,\n      columnPositions: columnPositions,\n      columnHeaderTabIndexState: columnHeaderTabIndexState,\n      columnGroupHeaderTabIndexState: columnGroupHeaderTabIndexState,\n      columnHeaderFocus: columnHeaderFocus,\n      columnGroupHeaderFocus: columnGroupHeaderFocus,\n      densityFactor: densityFactor,\n      headerGroupingMaxDepth: headerGroupingMaxDepth,\n      columnMenuState: columnMenuState,\n      columnVisibility: columnVisibility,\n      columnGroupsHeaderStructure: columnGroupsHeaderStructure,\n      hasOtherElementInTabSequence: hasOtherElementInTabSequence\n    }, ColumnHeadersProps)), hasDimensions && /*#__PURE__*/_jsx(VirtualScrollerComponent\n    // The content is only rendered after dimensions are computed because\n    // the lazy-loading hook is listening to `renderedRowsIntervalChange`,\n    // but only does something if the dimensions are also available.\n    // If this event is published while dimensions haven't been computed,\n    // the `onFetchRows` prop won't be called during mount.\n    , {\n      ref: virtualScrollerRef,\n      disableVirtualization: isVirtualizationDisabled\n    }), children]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridBody.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node,\n  ColumnHeadersProps: PropTypes.object,\n  VirtualScrollerComponent: PropTypes.elementType.isRequired\n} : void 0;\nexport { GridBody };"]},"metadata":{},"sourceType":"module"}