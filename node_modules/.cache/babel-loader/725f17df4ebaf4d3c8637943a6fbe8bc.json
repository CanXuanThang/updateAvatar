{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thang\\\\Downloads\\\\Code structure\\\\src\\\\modules\\\\auth\\\\pages\\\\employeeManagement\\\\layouts\\\\options\\\\forms\\\\InputDateTime.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction range(start, end, step = 1) {\n  const len = Math.floor((end - start) / step) + 1;\n  return Array(len).fill(0).map((_, idx) => start + idx * step);\n}\n\nconst InputDateTime = () => {\n  _s();\n\n  const [startDate, setStartDate] = useState(new Date());\n  const years = range(1923, new Date().getFullYear() + 1, 1);\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  return /*#__PURE__*/_jsxDEV(DatePicker, {\n    renderCustomHeader: ({\n      date,\n      changeYear,\n      changeMonth,\n      decreaseMonth,\n      increaseMonth,\n      prevMonthButtonDisabled,\n      nextMonthButtonDisabled,\n      monthDate\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: 10,\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        \"aria-label\": \"Previous Month\",\n        className: 'react-datepicker__navigation react-datepicker__navigation--previous' // style={customHeaderCount === 1 ? { visibility: \"hidden\" } : null}\n        ,\n        onClick: decreaseMonth,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: 'react-datepicker__navigation-icon react-datepicker__navigation-icon--previous',\n          children: '<'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        hidden: true,\n        value: date.getFullYear(),\n        onChange: ({\n          target: {\n            value\n          }\n        }) => changeYear(Number(value)),\n        children: years.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option,\n          children: option\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"react-datepicker__current-month\",\n        children: monthDate.toLocaleString('en-US', {\n          month: 'long',\n          year: 'numeric'\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: increaseMonth,\n        disabled: nextMonthButtonDisabled,\n        children: '>'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this),\n    selected: startDate,\n    onChange: date => setStartDate(date)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InputDateTime, \"7VgZ1AaRN4UkTWnNfs7/CGxziHc=\");\n\n_c = InputDateTime;\nexport default InputDateTime;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputDateTime\");","map":{"version":3,"sources":["C:/Users/thang/Downloads/Code structure/src/modules/auth/pages/employeeManagement/layouts/options/forms/InputDateTime.tsx"],"names":["useState","DatePicker","range","start","end","step","len","Math","floor","Array","fill","map","_","idx","InputDateTime","startDate","setStartDate","Date","years","getFullYear","months","date","changeYear","changeMonth","decreaseMonth","increaseMonth","prevMonthButtonDisabled","nextMonthButtonDisabled","monthDate","margin","display","justifyContent","target","value","Number","option","toLocaleString","month","year"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\n\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\nfunction range(start: number, end: number, step: number = 1): number[] {\r\n  const len = Math.floor((end - start) / step) + 1;\r\n  return Array(len)\r\n    .fill(0)\r\n    .map((_, idx) => start + idx * step);\r\n}\r\n\r\nconst InputDateTime = () => {\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const years = range(1923, new Date().getFullYear() + 1, 1);\r\n  const months = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n  ];\r\n  return (\r\n    <DatePicker\r\n      renderCustomHeader={({\r\n        date,\r\n        changeYear,\r\n        changeMonth,\r\n        decreaseMonth,\r\n        increaseMonth,\r\n        prevMonthButtonDisabled,\r\n        nextMonthButtonDisabled,\r\n        monthDate,\r\n      }) => (\r\n        <div style={{ margin: 10, display: 'flex', justifyContent: 'center' }}>\r\n          <button\r\n            aria-label=\"Previous Month\"\r\n            className={'react-datepicker__navigation react-datepicker__navigation--previous'}\r\n            // style={customHeaderCount === 1 ? { visibility: \"hidden\" } : null}\r\n            onClick={decreaseMonth}\r\n          >\r\n            <span className={'react-datepicker__navigation-icon react-datepicker__navigation-icon--previous'}>\r\n              {'<'}\r\n            </span>\r\n          </button>\r\n          <select hidden value={date.getFullYear()} onChange={({ target: { value } }) => changeYear(Number(value))}>\r\n            {years.map((option) => (\r\n              <option key={option} value={option}>\r\n                {option}\r\n              </option>\r\n            ))}\r\n          </select>\r\n\r\n          <span className=\"react-datepicker__current-month\">\r\n            {monthDate.toLocaleString('en-US', {\r\n              month: 'long',\r\n              year: 'numeric',\r\n            })}\r\n          </span>\r\n\r\n          <button onClick={increaseMonth} disabled={nextMonthButtonDisabled}>\r\n            {'>'}\r\n          </button>\r\n        </div>\r\n      )}\r\n      selected={startDate}\r\n      onChange={(date: any) => setStartDate(date)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default InputDateTime;\r\n"]},"metadata":{},"sourceType":"module"}