{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thang\\\\Downloads\\\\Code structure\\\\src\\\\modules\\\\auth\\\\components\\\\forgotPassword\\\\ForgotPasswordForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { Controller, useForm } from 'react-hook-form';\nimport { FormattedMessage } from 'react-intl';\nimport './ForgotPasswordForm.scss';\nimport { useDispatch } from 'react-redux';\nimport { replace } from 'connected-react-router';\nimport { ROUTES } from '../../../../configs/routes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ForgotPasswordForm(props) {\n  _s();\n\n  var _errors$email, _errors$email2;\n\n  const {\n    control,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues: {\n      email: ''\n    }\n  });\n  const {\n    onLogin,\n    loading,\n    errorMessage\n  } = props;\n  const dispatch = useDispatch();\n\n  const handlePage = () => {\n    dispatch(replace(ROUTES.login));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(data => console.log(data)),\n    className: \"row g-3 needs-validation\",\n    style: {\n      maxWidth: '560px',\n      width: '100%',\n      display: 'flex',\n      justifyContent: 'center',\n      marginTop: '80px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"title\",\n      children: \"Forgot password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forgot\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"inputEmail\",\n          className: \"form-label\",\n          children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n            id: \"emailForgot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          name: \"email\",\n          control: control,\n          rules: {\n            required: true,\n            pattern: /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/\n          },\n          render: ({\n            field\n          }) => /*#__PURE__*/_jsxDEV(\"input\", { ...field,\n            type: \"text\",\n            id: \"email\",\n            className: \"form-control\",\n            style: {\n              background: '#F1F3F5',\n              border: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-danger mt-2 d-block \",\n          style: {\n            fontSize: '14px'\n          },\n          children: [((_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.type) === 'required' && /*#__PURE__*/_jsxDEV(FormattedMessage, {\n            id: \"emailRequire\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 51\n          }, this), ((_errors$email2 = errors.email) === null || _errors$email2 === void 0 ? void 0 : _errors$email2.type) === 'pattern' && /*#__PURE__*/_jsxDEV(FormattedMessage, {\n            id: \"emailInvalid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 50\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-md-center\",\n        style: {\n          margin: '12px 0 12px 0'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-auto\",\n          style: {\n            width: '100%',\n            padding: 0\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-lg\",\n            type: \"submit\",\n            style: {\n              width: '100%',\n              fontSize: 16,\n              padding: 12,\n              background: '#0091ff',\n              color: '#fff'\n            },\n            disabled: loading,\n            children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"spinner-border spinner-border-sm text-light mr-2\",\n              role: \"status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: handlePage,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"d-flex justify-content-center sign-in\",\n          style: {\n            cursor: 'pointer',\n            color: '#0091FF',\n            fontSize: 14\n          },\n          children: \"Back to Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ForgotPasswordForm, \"iXyCWr1OxkwFxqTSnkhKfhMR7a8=\", false, function () {\n  return [useForm, useDispatch];\n});\n\n_c = ForgotPasswordForm;\nexport default ForgotPasswordForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPasswordForm\");","map":{"version":3,"sources":["C:/Users/thang/Downloads/Code structure/src/modules/auth/components/forgotPassword/ForgotPasswordForm.tsx"],"names":["Controller","useForm","FormattedMessage","useDispatch","replace","ROUTES","ForgotPasswordForm","props","control","handleSubmit","formState","errors","defaultValues","email","onLogin","loading","errorMessage","dispatch","handlePage","login","data","console","log","maxWidth","width","display","justifyContent","marginTop","required","pattern","field","background","border","fontSize","type","margin","padding","color","cursor"],"mappings":"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","sourcesContent":["import { Controller, useForm } from 'react-hook-form';\r\nimport { ILoginParams } from '../../../../models/auth';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport './ForgotPasswordForm.scss';\r\nimport { useDispatch } from 'react-redux';\r\nimport { ThunkDispatch } from 'redux-thunk';\r\nimport { AppState } from '../../../../redux/reducer';\r\nimport { Action } from 'typesafe-actions';\r\nimport { replace } from 'connected-react-router';\r\nimport { ROUTES } from '../../../../configs/routes';\r\n\r\ninterface Props {\r\n  onLogin(values: ILoginParams): void;\r\n  loading: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nfunction ForgotPasswordForm(props: Props) {\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    defaultValues: {\r\n      email: '',\r\n    },\r\n  });\r\n  const { onLogin, loading, errorMessage } = props;\r\n\r\n  const dispatch = useDispatch<ThunkDispatch<AppState, null, Action<string>>>();\r\n  const handlePage = () => {\r\n    dispatch(replace(ROUTES.login));\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit((data) => console.log(data))}\r\n      className=\"row g-3 needs-validation\"\r\n      style={{ maxWidth: '560px', width: '100%', display: 'flex', justifyContent: 'center', marginTop: '80px' }}\r\n    >\r\n      <h3 className=\"title\">Forgot password</h3>\r\n      <div className=\"forgot\">\r\n        <div className=\"d-flex flex-column\">\r\n          <label htmlFor=\"inputEmail\" className=\"form-label\">\r\n            <FormattedMessage id=\"emailForgot\" />\r\n          </label>\r\n          <Controller\r\n            name=\"email\"\r\n            control={control}\r\n            rules={{\r\n              required: true,\r\n              pattern: /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/,\r\n            }}\r\n            render={({ field }) => (\r\n              <input\r\n                {...field}\r\n                type=\"text\"\r\n                id=\"email\"\r\n                className=\"form-control\"\r\n                style={{ background: '#F1F3F5', border: 'none' }}\r\n              />\r\n            )}\r\n          />\r\n          <span className=\"text-danger mt-2 d-block \" style={{ fontSize: '14px' }}>\r\n            {errors.email?.type === 'required' && <FormattedMessage id=\"emailRequire\" />}\r\n            {errors.email?.type === 'pattern' && <FormattedMessage id=\"emailInvalid\" />}\r\n          </span>\r\n        </div>\r\n        <div className=\"row justify-content-md-center\" style={{ margin: '12px 0 12px 0' }}>\r\n          <div className=\"col-md-auto\" style={{ width: '100%', padding: 0 }}>\r\n            <button\r\n              className=\"btn btn-lg\"\r\n              type=\"submit\"\r\n              style={{\r\n                width: '100%',\r\n                fontSize: 16,\r\n                padding: 12,\r\n                background: '#0091ff',\r\n                color: '#fff',\r\n              }}\r\n              disabled={loading}\r\n            >\r\n              {loading && <div className=\"spinner-border spinner-border-sm text-light mr-2\" role=\"status\" />}\r\n              <FormattedMessage id=\"register\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div onClick={handlePage}>\r\n          <span\r\n            className=\"d-flex justify-content-center sign-in\"\r\n            style={{ cursor: 'pointer', color: '#0091FF', fontSize: 14 }}\r\n          >\r\n            Back to Sign In\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ForgotPasswordForm;\r\n"]},"metadata":{},"sourceType":"module"}