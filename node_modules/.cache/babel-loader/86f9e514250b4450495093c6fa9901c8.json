{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thang\\\\Downloads\\\\Code structure\\\\src\\\\modules\\\\auth\\\\pages\\\\employeeManagement\\\\layouts\\\\options\\\\forms\\\\others\\\\MultipleSelectChip.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport Chip from '@mui/material/Chip';\nimport axios from 'axios';\nimport { API_PATHS } from '../../../../../../../../configs/api';\nimport { RESPONSE_STATUS_SUCCESS } from '../../../../../../../../utils/httpResponseCode';\nimport Cookies from 'js-cookie';\nimport { ACCESS_TOKEN_KEY } from '../../../../../../../../utils/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\nexport default function MultipleSelectChip({\n  listBenefit,\n  setListBenefit,\n  data\n}) {\n  _s();\n\n  const [benefits, setBenefit] = React.useState([]);\n  const [value, setValue] = React.useState([]);\n  const getBenefit = React.useCallback(async () => {\n    const json = await axios.get(API_PATHS.getBenefit, {\n      headers: {\n        Authorization: 'Bearer ' + Cookies.get(ACCESS_TOKEN_KEY)\n      }\n    });\n\n    if (json.status === RESPONSE_STATUS_SUCCESS) {\n      setBenefit(json.data.data);\n    }\n  }, []);\n  React.useEffect(() => {\n    getBenefit();\n  }, [getBenefit]);\n  React.useEffect(() => {\n    const benefitIds = value.map(item => item.id);\n    setListBenefit({ ...listBenefit,\n      benefits: benefitIds\n    });\n  }, [value]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      sx: {\n        background: '#f1f3f5',\n        ':first-of-type': {\n          maxHeight: '150px',\n          overflowY: 'auto'\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        multiple: true,\n        value: value,\n        onChange: e => {\n          setValue(e.target.value);\n        },\n        sx: {\n          div: {\n            padding: '5px'\n          },\n          minHeight: '47px'\n        },\n        renderValue: selected => /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            gap: 0.5\n          },\n          children: selected.map(value => /*#__PURE__*/_jsxDEV(Chip, {\n            label: value.name,\n            sx: {\n              color: 'rgb(0, 145, 255)',\n              backgroundColor: 'white',\n              borderRadius: '6px'\n            }\n          }, value.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this),\n        MenuProps: MenuProps,\n        children: benefits && benefits.map(benefit => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: benefit,\n          \"data-name\": benefit && benefit.name,\n          children: benefit && benefit.name\n        }, benefit.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MultipleSelectChip, \"cjRltue6GIdtgbRnkrCbXP477d0=\");\n\n_c = MultipleSelectChip;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultipleSelectChip\");","map":{"version":3,"sources":["C:/Users/thang/Downloads/Code structure/src/modules/auth/pages/employeeManagement/layouts/options/forms/others/MultipleSelectChip.tsx"],"names":["React","Box","MenuItem","FormControl","Select","Chip","axios","API_PATHS","RESPONSE_STATUS_SUCCESS","Cookies","ACCESS_TOKEN_KEY","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","MultipleSelectChip","listBenefit","setListBenefit","data","benefits","setBenefit","useState","value","setValue","getBenefit","useCallback","json","get","headers","Authorization","status","useEffect","benefitIds","map","item","id","background","overflowY","e","target","div","padding","minHeight","selected","display","flexWrap","gap","name","color","backgroundColor","borderRadius","benefit"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,qCAA1B;AACA,SAASC,uBAAT,QAAwC,gDAAxC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,gBAAT,QAAiC,yCAAjC;;AAEA,MAAMC,WAAW,GAAG,EAApB;AACA,MAAMC,gBAAgB,GAAG,CAAzB;AACA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,UAAU,EAAE;AACVC,IAAAA,KAAK,EAAE;AACLC,MAAAA,SAAS,EAAEL,WAAW,GAAG,GAAd,GAAoBC,gBAD1B;AAELK,MAAAA,KAAK,EAAE;AAFF;AADG;AADI,CAAlB;AAeA,eAAe,SAASC,kBAAT,CAA4B;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,cAAf;AAA+BC,EAAAA;AAA/B,CAA5B,EAA0E;AAAA;;AACvF,QAAM,CAACC,QAAD,EAAWC,UAAX,IAAyBvB,KAAK,CAACwB,QAAN,CAAe,EAAf,CAA/B;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoB1B,KAAK,CAACwB,QAAN,CAAoB,EAApB,CAA1B;AAEA,QAAMG,UAAU,GAAG3B,KAAK,CAAC4B,WAAN,CAAkB,YAAY;AAC/C,UAAMC,IAAI,GAAG,MAAMvB,KAAK,CAACwB,GAAN,CAAUvB,SAAS,CAACoB,UAApB,EAAgC;AACjDI,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAE,YAAYvB,OAAO,CAACqB,GAAR,CAAYpB,gBAAZ;AADpB;AADwC,KAAhC,CAAnB;;AAMA,QAAImB,IAAI,CAACI,MAAL,KAAgBzB,uBAApB,EAA6C;AAC3Ce,MAAAA,UAAU,CAACM,IAAI,CAACR,IAAL,CAAUA,IAAX,CAAV;AACD;AACF,GAVkB,EAUhB,EAVgB,CAAnB;AAYArB,EAAAA,KAAK,CAACkC,SAAN,CAAgB,MAAM;AACpBP,IAAAA,UAAU;AACX,GAFD,EAEG,CAACA,UAAD,CAFH;AAIA3B,EAAAA,KAAK,CAACkC,SAAN,CAAgB,MAAM;AACpB,UAAMC,UAAU,GAAGV,KAAK,CAACW,GAAN,CAAWC,IAAD,IAAeA,IAAI,CAACC,EAA9B,CAAnB;AACAlB,IAAAA,cAAc,CAAC,EAAE,GAAGD,WAAL;AAAkBG,MAAAA,QAAQ,EAAEa;AAA5B,KAAD,CAAd;AACD,GAHD,EAGG,CAACV,KAAD,CAHH;AAKA,sBACE,QAAC,GAAD;AAAA,2BACE,QAAC,WAAD;AACE,MAAA,SAAS,MADX;AAEE,MAAA,EAAE,EAAE;AAAEc,QAAAA,UAAU,EAAE,SAAd;AAAyB,0BAAkB;AAAEvB,UAAAA,SAAS,EAAE,OAAb;AAAsBwB,UAAAA,SAAS,EAAE;AAAjC;AAA3C,OAFN;AAAA,6BAIE,QAAC,MAAD;AACE,QAAA,QAAQ,MADV;AAEE,QAAA,KAAK,EAAEf,KAFT;AAGE,QAAA,QAAQ,EAAGgB,CAAD,IAAO;AACff,UAAAA,QAAQ,CAACe,CAAC,CAACC,MAAF,CAASjB,KAAV,CAAR;AACD,SALH;AAME,QAAA,EAAE,EAAE;AACFkB,UAAAA,GAAG,EAAE;AAAEC,YAAAA,OAAO,EAAE;AAAX,WADH;AAEFC,UAAAA,SAAS,EAAE;AAFT,SANN;AAUE,QAAA,WAAW,EAAGC,QAAD,iBACX,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE;AAAEC,YAAAA,OAAO,EAAE,MAAX;AAAmBC,YAAAA,QAAQ,EAAE,MAA7B;AAAqCC,YAAAA,GAAG,EAAE;AAA1C,WAAT;AAAA,oBACGH,QAAQ,CAACV,GAAT,CAAcX,KAAD,iBACZ,QAAC,IAAD;AAEE,YAAA,KAAK,EAAEA,KAAK,CAACyB,IAFf;AAGE,YAAA,EAAE,EAAE;AAAEC,cAAAA,KAAK,EAAE,kBAAT;AAA6BC,cAAAA,eAAe,EAAE,OAA9C;AAAuDC,cAAAA,YAAY,EAAE;AAArE;AAHN,aACO5B,KAAK,CAACa,EADb;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAqBE,QAAA,SAAS,EAAEzB,SArBb;AAAA,kBAuBGS,QAAQ,IACPA,QAAQ,CAACc,GAAT,CAAckB,OAAD,iBACX,QAAC,QAAD;AAA2B,UAAA,KAAK,EAAEA,OAAlC;AAA2C,uBAAWA,OAAO,IAAIA,OAAO,CAACJ,IAAzE;AAAA,oBACGI,OAAO,IAAIA,OAAO,CAACJ;AADtB,WAAeI,OAAO,CAAChB,EAAvB;AAAA;AAAA;AAAA;AAAA,gBADF;AAxBJ;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD;;GAhEuBpB,kB;;KAAAA,kB","sourcesContent":["import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport Chip from '@mui/material/Chip';\r\nimport axios from 'axios';\r\nimport { API_PATHS } from '../../../../../../../../configs/api';\r\nimport { RESPONSE_STATUS_SUCCESS } from '../../../../../../../../utils/httpResponseCode';\r\nimport Cookies from 'js-cookie';\r\nimport { ACCESS_TOKEN_KEY } from '../../../../../../../../utils/constants';\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\ninterface Props {\r\n  listBenefit: any;\r\n  setListBenefit: any;\r\n  data: any;\r\n}\r\n\r\nexport default function MultipleSelectChip({ listBenefit, setListBenefit, data }: Props) {\r\n  const [benefits, setBenefit] = React.useState([]);\r\n  const [value, setValue] = React.useState<any>([]);\r\n\r\n  const getBenefit = React.useCallback(async () => {\r\n    const json = await axios.get(API_PATHS.getBenefit, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + Cookies.get(ACCESS_TOKEN_KEY),\r\n      },\r\n    });\r\n\r\n    if (json.status === RESPONSE_STATUS_SUCCESS) {\r\n      setBenefit(json.data.data);\r\n    }\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    getBenefit();\r\n  }, [getBenefit]);\r\n\r\n  React.useEffect(() => {\r\n    const benefitIds = value.map((item: any) => item.id);\r\n    setListBenefit({ ...listBenefit, benefits: benefitIds });\r\n  }, [value]);\r\n\r\n  return (\r\n    <Box>\r\n      <FormControl\r\n        fullWidth\r\n        sx={{ background: '#f1f3f5', ':first-of-type': { maxHeight: '150px', overflowY: 'auto' } }}\r\n      >\r\n        <Select\r\n          multiple\r\n          value={value}\r\n          onChange={(e) => {\r\n            setValue(e.target.value);\r\n          }}\r\n          sx={{\r\n            div: { padding: '5px' },\r\n            minHeight: '47px',\r\n          }}\r\n          renderValue={(selected) => (\r\n            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n              {selected.map((value: any) => (\r\n                <Chip\r\n                  key={value.id}\r\n                  label={value.name}\r\n                  sx={{ color: 'rgb(0, 145, 255)', backgroundColor: 'white', borderRadius: '6px' }}\r\n                />\r\n              ))}\r\n            </Box>\r\n          )}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {benefits &&\r\n            benefits.map((benefit: any) => (\r\n              <MenuItem key={benefit.id} value={benefit} data-name={benefit && benefit.name}>\r\n                {benefit && benefit.name}\r\n              </MenuItem>\r\n            ))}\r\n        </Select>\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}