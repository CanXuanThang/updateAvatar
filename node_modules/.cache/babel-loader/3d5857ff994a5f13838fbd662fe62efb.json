{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thang\\\\Downloads\\\\Code structure\\\\src\\\\modules\\\\auth\\\\pages\\\\employeeManagement\\\\layouts\\\\options\\\\forms\\\\personalInfomation\\\\PersonalInformationForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Grid, InputBase, Stack, Typography } from '@mui/material';\nimport { memo, useEffect, useState } from 'react';\nimport { validAddEmployee, validateAddEmployee } from '../../../../../../utils';\nimport InfoForm1 from './infoForm/InfoForm1';\nimport Selected from '../../../selected/Selected';\nimport { fields2 } from './fileds';\nimport { FormattedMessage } from 'react-intl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PersonalInformationForm() {\n  _s();\n\n  const [isInputFocused, setInputFocused] = useState(false);\n  const [value, setValue] = useState('');\n  const [validate, setValidate] = useState();\n  const [validateForm, setValidateForm] = useState({\n    gender: '',\n    ktp: '',\n    name: '',\n    ncId: ''\n  });\n\n  const hanldeSunmit = e => {\n    e.preventDefault();\n  };\n\n  const handleInputFocus = () => {\n    setInputFocused(true);\n  };\n\n  const handleInputBlur = () => {\n    setInputFocused(false);\n  };\n\n  useEffect(() => {\n    if (!isInputFocused && value.trim() === '') {\n      const validate = validateAddEmployee(validateForm);\n      console.log(validate);\n      setValidate(validate);\n\n      if (!validAddEmployee(validate)) {\n        return;\n      }\n    }\n  }, [isInputFocused, value, validateForm]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"form\",\n    onSubmit: hanldeSunmit,\n    sx: {\n      gap: '40px',\n      display: 'flex',\n      flexWrap: 'wrap',\n      marginBottom: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(InfoForm1, {\n      validate: validate,\n      value: validateForm,\n      setValue: setValidateForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"column\",\n      spacing: 2,\n      sx: {\n        flex: '1 1 0%',\n        paddingLeft: '20px',\n        paddingRight: '20px',\n        gap: '10px'\n      },\n      children: fields2.map((item, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        sx: {\n          '&:first-of-type': {\n            marginLeft: '0',\n            marginTop: 0\n          },\n          marginTop: '0 !important',\n          marginLeft: '-16px !important'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 5,\n          xl: 4,\n          sx: {\n            paddingLeft: '0 !important',\n            paddingTop: '0 !important',\n            display: 'flex',\n            alignItems: 'center',\n            marginTop: '0 !important'\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            gutterBottom: true,\n            sx: {\n              fontFamily: 'SVN-Sofia-Regular',\n              display: 'flex',\n              alignItems: 'center',\n              margin: 0,\n              fontSize: '16px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: item.field\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              component: \"span\",\n              sx: {\n                color: 'rgb(229, 72, 77)',\n                margin: 0\n              },\n              children: item.required\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 7,\n          xl: 8,\n          sx: {\n            paddingLeft: '0 !important',\n            paddingTop: '0 !important'\n          },\n          children: [item.input === 'input' && /*#__PURE__*/_jsxDEV(InputBase, {\n            sx: {\n              backgroundColor: 'rgb(241, 243, 245)',\n              input: {\n                padding: '12px'\n              },\n              borderRadius: '6px',\n              width: '100%'\n            },\n            type: item.type ? 'text' : 'number',\n            onFocus: handleInputFocus,\n            onBlur: handleInputBlur,\n            onChange: e => setValue(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this), item.input === 'selected' && /*#__PURE__*/_jsxDEV(Selected, {\n            defaultOption: \"Choose Marriage Status\",\n            objectOption: ['N/A', 'Married with 1 kid', 'Single', 'Married']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PersonalInformationForm, \"OM3SBcm5N7JsVwuwYqukuruut7Q=\");\n\n_c = PersonalInformationForm;\nexport default _c2 = /*#__PURE__*/memo(PersonalInformationForm);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PersonalInformationForm\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/thang/Downloads/Code structure/src/modules/auth/pages/employeeManagement/layouts/options/forms/personalInfomation/PersonalInformationForm.tsx"],"names":["Box","Grid","InputBase","Stack","Typography","memo","useEffect","useState","validAddEmployee","validateAddEmployee","InfoForm1","Selected","fields2","FormattedMessage","PersonalInformationForm","isInputFocused","setInputFocused","value","setValue","validate","setValidate","validateForm","setValidateForm","gender","ktp","name","ncId","hanldeSunmit","e","preventDefault","handleInputFocus","handleInputBlur","trim","console","log","gap","display","flexWrap","marginBottom","flex","paddingLeft","paddingRight","map","item","index","marginLeft","marginTop","paddingTop","alignItems","fontFamily","margin","fontSize","field","color","required","input","backgroundColor","padding","borderRadius","width","type","target"],"mappings":"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","sourcesContent":["import { Box, Grid, InputBase, Stack, Typography } from '@mui/material';\r\nimport { FormEvent, memo, useEffect, useState } from 'react';\r\nimport { EmployeeParams, EmployeeValidate } from '../../../../../../../../models/employee';\r\nimport { validAddEmployee, validateAddEmployee } from '../../../../../../utils';\r\nimport InfoForm1 from './infoForm/InfoForm1';\r\nimport InfoForm2 from './infoForm/InfoForm2';\r\nimport Selected from '../../../selected/Selected';\r\nimport { fields2 } from './fileds';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nfunction PersonalInformationForm() {\r\n  const [isInputFocused, setInputFocused] = useState(false);\r\n  const [value, setValue] = useState('');\r\n  const [validate, setValidate] = useState<EmployeeValidate>();\r\n  const [validateForm, setValidateForm] = useState<EmployeeParams>({\r\n    gender: '',\r\n    ktp: '',\r\n    name: '',\r\n    ncId: '',\r\n  });\r\n  const hanldeSunmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleInputFocus = () => {\r\n    setInputFocused(true);\r\n  };\r\n\r\n  const handleInputBlur = () => {\r\n    setInputFocused(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isInputFocused && value.trim() === '') {\r\n      const validate = validateAddEmployee(validateForm);\r\n      console.log(validate);\r\n      setValidate(validate);\r\n\r\n      if (!validAddEmployee(validate)) {\r\n        return;\r\n      }\r\n    }\r\n  }, [isInputFocused, value, validateForm]);\r\n\r\n  return (\r\n    <Box\r\n      component=\"form\"\r\n      onSubmit={hanldeSunmit}\r\n      sx={{ gap: '40px', display: 'flex', flexWrap: 'wrap', marginBottom: '20px' }}\r\n    >\r\n      <InfoForm1 validate={validate} value={validateForm} setValue={setValidateForm} />\r\n      <Stack\r\n        direction=\"column\"\r\n        spacing={2}\r\n        sx={{ flex: '1 1 0%', paddingLeft: '20px', paddingRight: '20px', gap: '10px' }}\r\n      >\r\n        {fields2.map((item: any, index: number) => (\r\n          <Grid\r\n            container\r\n            spacing={2}\r\n            key={index}\r\n            sx={{\r\n              '&:first-of-type': { marginLeft: '0', marginTop: 0 },\r\n              marginTop: '0 !important',\r\n              marginLeft: '-16px !important',\r\n            }}\r\n          >\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={5}\r\n              xl={4}\r\n              sx={{\r\n                paddingLeft: '0 !important',\r\n                paddingTop: '0 !important',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                marginTop: '0 !important',\r\n              }}\r\n            >\r\n              <Typography\r\n                variant=\"body2\"\r\n                gutterBottom\r\n                sx={{\r\n                  fontFamily: 'SVN-Sofia-Regular',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  margin: 0,\r\n                  fontSize: '16px',\r\n                }}\r\n              >\r\n                <FormattedMessage id={item.field} />\r\n                <Box component=\"span\" sx={{ color: 'rgb(229, 72, 77)', margin: 0 }}>\r\n                  {item.required}\r\n                </Box>\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} md={7} xl={8} sx={{ paddingLeft: '0 !important', paddingTop: '0 !important' }}>\r\n              {item.input === 'input' && (\r\n                <InputBase\r\n                  sx={{\r\n                    backgroundColor: 'rgb(241, 243, 245)',\r\n                    input: { padding: '12px' },\r\n                    borderRadius: '6px',\r\n                    width: '100%',\r\n                  }}\r\n                  type={item.type ? 'text' : 'number'}\r\n                  onFocus={handleInputFocus}\r\n                  onBlur={handleInputBlur}\r\n                  onChange={(e) => setValue(e.target.value)}\r\n                />\r\n              )}\r\n              {item.input === 'selected' && (\r\n                <Selected\r\n                  defaultOption=\"Choose Marriage Status\"\r\n                  objectOption={['N/A', 'Married with 1 kid', 'Single', 'Married']}\r\n                />\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        ))}\r\n      </Stack>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default memo(PersonalInformationForm);\r\n"]},"metadata":{},"sourceType":"module"}