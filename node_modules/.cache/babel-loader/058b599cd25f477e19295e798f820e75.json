{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thang\\\\Downloads\\\\Code structure\\\\src\\\\modules\\\\auth\\\\pages\\\\employeeManagement\\\\layouts\\\\options\\\\forms\\\\InputDateTime.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Button } from '@mui/material';\nimport { memo, useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction range(start, end, step = 1) {\n  const len = Math.floor((end - start) / step) + 1;\n  return Array(len).fill(0).map((_, idx) => start + idx * step);\n}\n\nconst InputDateTime = () => {\n  _s();\n\n  const [startDate, setStartDate] = useState(new Date());\n  const years = range(1923, new Date().getFullYear() + 1, 1);\n  return /*#__PURE__*/_jsxDEV(DatePicker, {\n    renderCustomHeader: ({\n      date,\n      changeYear,\n      decreaseMonth,\n      increaseMonth,\n      monthDate\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: 10,\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        \"aria-label\": \"Previous Month\",\n        className: 'react-datepicker__navigation react-datepicker__navigation--previous',\n        onClick: decreaseMonth,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: 'react-datepicker__navigation-icon react-datepicker__navigation-icon--previous',\n          children: '<'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"react-datepicker__current-month\",\n          children: monthDate.toLocaleString('en-US', {\n            month: 'long',\n            year: 'numeric'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          children: /*#__PURE__*/_jsxDEV(KeyboardArrowDownIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        \"aria-label\": \"Next Month\",\n        className: 'react-datepicker__navigation react-datepicker__navigation--next',\n        onClick: increaseMonth,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: 'react-datepicker__navigation-icon react-datepicker__navigation-icon--next',\n          children: '>'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this),\n    selected: startDate,\n    onChange: date => setStartDate(date)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InputDateTime, \"7VgZ1AaRN4UkTWnNfs7/CGxziHc=\");\n\n_c = InputDateTime;\nexport default _c2 = /*#__PURE__*/memo(InputDateTime);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"InputDateTime\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/thang/Downloads/Code structure/src/modules/auth/pages/employeeManagement/layouts/options/forms/InputDateTime.tsx"],"names":["Box","Button","memo","useState","DatePicker","KeyboardArrowDownIcon","range","start","end","step","len","Math","floor","Array","fill","map","_","idx","InputDateTime","startDate","setStartDate","Date","years","getFullYear","date","changeYear","decreaseMonth","increaseMonth","monthDate","margin","display","justifyContent","toLocaleString","month","year"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,MAAd,QAA2D,eAA3D;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,OAA/B;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,qBAAP,MAAkC,uCAAlC;AAEA,OAAO,4CAAP;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAA8BC,GAA9B,EAA2CC,IAAY,GAAG,CAA1D,EAAuE;AACrE,QAAMC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACJ,GAAG,GAAGD,KAAP,IAAgBE,IAA3B,IAAmC,CAA/C;AACA,SAAOI,KAAK,CAACH,GAAD,CAAL,CACJI,IADI,CACC,CADD,EAEJC,GAFI,CAEA,CAACC,CAAD,EAAIC,GAAJ,KAAYV,KAAK,GAAGU,GAAG,GAAGR,IAF1B,CAAP;AAGD;;AAED,MAAMS,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,IAAIkB,IAAJ,EAAD,CAA1C;AACA,QAAMC,KAAK,GAAGhB,KAAK,CAAC,IAAD,EAAO,IAAIe,IAAJ,GAAWE,WAAX,KAA2B,CAAlC,EAAqC,CAArC,CAAnB;AACA,sBACE,QAAC,UAAD;AACE,IAAA,kBAAkB,EAAE,CAAC;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,UAAR;AAAoBC,MAAAA,aAApB;AAAmCC,MAAAA,aAAnC;AAAkDC,MAAAA;AAAlD,KAAD,kBAClB;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,EAAV;AAAcC,QAAAA,OAAO,EAAE,MAAvB;AAA+BC,QAAAA,cAAc,EAAE;AAA/C,OAAZ;AAAA,8BACE;AACE,sBAAW,gBADb;AAEE,QAAA,SAAS,EAAE,qEAFb;AAGE,QAAA,OAAO,EAAEL,aAHX;AAAA,+BAKE;AAAM,UAAA,SAAS,EAAE,+EAAjB;AAAA,oBACG;AADH;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,cADF,eAUE,QAAC,GAAD;AAAA,gCACE;AAAM,UAAA,SAAS,EAAC,iCAAhB;AAAA,oBACGE,SAAS,CAACI,cAAV,CAAyB,OAAzB,EAAkC;AACjCC,YAAAA,KAAK,EAAE,MAD0B;AAEjCC,YAAAA,IAAI,EAAE;AAF2B,WAAlC;AADH;AAAA;AAAA;AAAA;AAAA,gBADF,eA2CE,QAAC,MAAD;AAAA,iCACE,QAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBA3CF;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eA0DE;AACE,sBAAW,YADb;AAEE,QAAA,SAAS,EAAE,iEAFb;AAGE,QAAA,OAAO,EAAEP,aAHX;AAAA,+BAKE;AAAM,UAAA,SAAS,EAAE,2EAAjB;AAAA,oBAA+F;AAA/F;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,cA1DF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAqEE,IAAA,QAAQ,EAAER,SArEZ;AAsEE,IAAA,QAAQ,EAAGK,IAAD,IAAeJ,YAAY,CAACI,IAAD;AAtEvC;AAAA;AAAA;AAAA;AAAA,UADF;AA0ED,CA7ED;;GAAMN,a;;KAAAA,a;AA+EN,kCAAehB,IAAI,CAACgB,aAAD,CAAnB","sourcesContent":["import { Box, Button, FormControl, MenuItem, Select } from '@mui/material';\r\nimport { memo, useState } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\n\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\nfunction range(start: number, end: number, step: number = 1): number[] {\r\n  const len = Math.floor((end - start) / step) + 1;\r\n  return Array(len)\r\n    .fill(0)\r\n    .map((_, idx) => start + idx * step);\r\n}\r\n\r\nconst InputDateTime = () => {\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const years = range(1923, new Date().getFullYear() + 1, 1);\r\n  return (\r\n    <DatePicker\r\n      renderCustomHeader={({ date, changeYear, decreaseMonth, increaseMonth, monthDate }) => (\r\n        <div style={{ margin: 10, display: 'flex', justifyContent: 'center' }}>\r\n          <button\r\n            aria-label=\"Previous Month\"\r\n            className={'react-datepicker__navigation react-datepicker__navigation--previous'}\r\n            onClick={decreaseMonth}\r\n          >\r\n            <span className={'react-datepicker__navigation-icon react-datepicker__navigation-icon--previous'}>\r\n              {'<'}\r\n            </span>\r\n          </button>\r\n          <Box>\r\n            <span className=\"react-datepicker__current-month\">\r\n              {monthDate.toLocaleString('en-US', {\r\n                month: 'long',\r\n                year: 'numeric',\r\n              })}\r\n            </span>\r\n            {/* <Box sx={{ minWidth: 120 }}>\r\n              <FormControl fullWidth>\r\n                <Select\r\n                  defaultValue=\"\"\r\n                  onChange={({ target: { value } }) => changeYear(Number(value))}\r\n                  inputProps={{ 'aria-label': 'Without label' }}\r\n                  style={{ background: '#f1f3f5' }}\r\n                  displayEmpty\r\n                >\r\n                  <MenuItem value=\"\" id=\"menu-item-1\" disabled>\r\n                    <em\r\n                      style={{\r\n                        fontSize: '16px',\r\n                        fontFamily: 'SVN-Sofia-Regular',\r\n                        fontStyle: 'normal',\r\n                        color: 'rgb(104, 112, 118)',\r\n                      }}\r\n                    >\r\n                      Choose Gender\r\n                    </em>\r\n                  </MenuItem>\r\n                  {years.map((option) => (\r\n                    <MenuItem key={option} value={option}>\r\n                      {option}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Box> */}\r\n            {/* <select value={date.getFullYear()} onChange={({ target: { value } }) => changeYear(Number(value))}>\r\n              {years.map((option) => (\r\n                <option key={option} value={option}>\r\n                  {option}\r\n                </option>\r\n              ))}\r\n            </select> */}\r\n            <Button>\r\n              <KeyboardArrowDownIcon />\r\n            </Button>\r\n          </Box>\r\n\r\n          <button\r\n            aria-label=\"Next Month\"\r\n            className={'react-datepicker__navigation react-datepicker__navigation--next'}\r\n            onClick={increaseMonth}\r\n          >\r\n            <span className={'react-datepicker__navigation-icon react-datepicker__navigation-icon--next'}>{'>'}</span>\r\n          </button>\r\n        </div>\r\n      )}\r\n      selected={startDate}\r\n      onChange={(date: any) => setStartDate(date)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default memo(InputDateTime);\r\n"]},"metadata":{},"sourceType":"module"}