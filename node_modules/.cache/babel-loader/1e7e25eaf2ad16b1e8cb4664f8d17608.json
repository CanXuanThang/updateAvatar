{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thang\\\\Downloads\\\\Code structure\\\\src\\\\modules\\\\auth\\\\pages\\\\employeeManagement\\\\layouts\\\\table\\\\Rows.tsx\",\n    _s = $RefreshSig$();\n\nimport { Checkbox, TableCell, TableRow } from '@mui/material';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Rows(props) {\n  _s();\n\n  const {\n    checked,\n    columns,\n    row\n  } = props;\n  const [isChecked, setIsChecked] = useState(checked);\n  useEffect(() => {\n    setIsChecked(checked);\n  }, [checked]);\n\n  const handleCheck = event => {\n    setIsChecked(event.target.checked);\n  };\n\n  const handleChecked = () => {\n    setIsChecked(!isChecked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableRow, {\n    hover: true,\n    role: \"checkbox\",\n    tabIndex: -1,\n    onClick: handleChecked,\n    sx: {\n      backgroundColor: isChecked ? 'rgb(233, 249, 238)' : 'rgb(248, 249, 250)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n      children: /*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: isChecked,\n        onChange: handleCheck,\n        color: \"success\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), columns.map(column => {\n      const value = row[column.id]; // const abc = column.id;\n      // const xyz = {\n      //   ...abc,\n      //   home_address_1: row.home_address.home_address_1,\n      //   home_address_2: row.home_address.home_address_2,\n      // };\n      // console.log(xyz);\n      // console.log(row.home_address.home_address_1);\n\n      console.log(value);\n      return /*#__PURE__*/_jsxDEV(TableCell, {\n        colSpan: column.id === 'home_address' ? 2 : 1,\n        children: column.id === 'home_address' ? `${row.home_address.home_address_1}, ${row.home_address.home_address_2}` : value\n      }, column.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Rows, \"shl+4nLSukS+PeKy4ilEAHsC4Ew=\");\n\n_c = Rows;\nexport default Rows;\n\nvar _c;\n\n$RefreshReg$(_c, \"Rows\");","map":{"version":3,"sources":["C:/Users/thang/Downloads/Code structure/src/modules/auth/pages/employeeManagement/layouts/table/Rows.tsx"],"names":["Checkbox","TableCell","TableRow","useEffect","useState","Rows","props","checked","columns","row","isChecked","setIsChecked","handleCheck","event","target","handleChecked","backgroundColor","map","column","value","id","console","log","home_address","home_address_1","home_address_2"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,QAA9B,QAA8C,eAA9C;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAQA,SAASC,IAAT,CAAcC,KAAd,EAA4B;AAAA;;AAC1B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,OAAX;AAAoBC,IAAAA;AAApB,MAA4BH,KAAlC;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAUG,OAAV,CAA1C;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,YAAY,CAACJ,OAAD,CAAZ;AACD,GAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;;AAIA,QAAMK,WAAW,GAAIC,KAAD,IAAgD;AAClEF,IAAAA,YAAY,CAACE,KAAK,CAACC,MAAN,CAAaP,OAAd,CAAZ;AACD,GAFD;;AAIA,QAAMQ,aAAa,GAAG,MAAM;AAC1BJ,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD,GAFD;;AAIA,sBACE,QAAC,QAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,QAAQ,EAAE,CAAC,CAHb;AAIE,IAAA,OAAO,EAAEK,aAJX;AAKE,IAAA,EAAE,EAAE;AAAEC,MAAAA,eAAe,EAAEN,SAAS,GAAG,oBAAH,GAA0B;AAAtD,KALN;AAAA,4BAOE,QAAC,SAAD;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,OAAO,EAAEA,SAAnB;AAA8B,QAAA,QAAQ,EAAEE,WAAxC;AAAqD,QAAA,KAAK,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF,EAUGJ,OAAO,CAACS,GAAR,CAAaC,MAAD,IAAiB;AAC5B,YAAMC,KAAK,GAAGV,GAAG,CAACS,MAAM,CAACE,EAAR,CAAjB,CAD4B,CAG5B;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AAEA,0BACE,QAAC,SAAD;AAA2B,QAAA,OAAO,EAAED,MAAM,CAACE,EAAP,KAAc,cAAd,GAA+B,CAA/B,GAAmC,CAAvE;AAAA,kBACGF,MAAM,CAACE,EAAP,KAAc,cAAd,GACI,GAAEX,GAAG,CAACc,YAAJ,CAAiBC,cAAe,KAAIf,GAAG,CAACc,YAAJ,CAAiBE,cAAe,EAD1E,GAEGN;AAHN,SAAgBD,MAAM,CAACE,EAAvB;AAAA;AAAA;AAAA;AAAA,cADF;AAOD,KAvBA,CAVH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD;;GArDQf,I;;KAAAA,I;AAuDT,eAAeA,IAAf","sourcesContent":["import { Checkbox, TableCell, TableRow } from '@mui/material';\r\nimport { useEffect, useState } from 'react';\r\n\r\ninterface Props {\r\n  checked: boolean;\r\n  columns: any;\r\n  row: any;\r\n}\r\n\r\nfunction Rows(props: Props) {\r\n  const { checked, columns, row } = props;\r\n  const [isChecked, setIsChecked] = useState<boolean>(checked);\r\n\r\n  useEffect(() => {\r\n    setIsChecked(checked);\r\n  }, [checked]);\r\n\r\n  const handleCheck = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setIsChecked(event.target.checked);\r\n  };\r\n\r\n  const handleChecked = () => {\r\n    setIsChecked(!isChecked);\r\n  };\r\n\r\n  return (\r\n    <TableRow\r\n      hover\r\n      role=\"checkbox\"\r\n      tabIndex={-1}\r\n      onClick={handleChecked}\r\n      sx={{ backgroundColor: isChecked ? 'rgb(233, 249, 238)' : 'rgb(248, 249, 250)' }}\r\n    >\r\n      <TableCell>\r\n        <Checkbox checked={isChecked} onChange={handleCheck} color=\"success\" />\r\n      </TableCell>\r\n      {columns.map((column: any) => {\r\n        const value = row[column.id];\r\n\r\n        // const abc = column.id;\r\n        // const xyz = {\r\n        //   ...abc,\r\n        //   home_address_1: row.home_address.home_address_1,\r\n        //   home_address_2: row.home_address.home_address_2,\r\n        // };\r\n\r\n        // console.log(xyz);\r\n\r\n        // console.log(row.home_address.home_address_1);\r\n\r\n        console.log(value);\r\n\r\n        return (\r\n          <TableCell key={column.id} colSpan={column.id === 'home_address' ? 2 : 1}>\r\n            {column.id === 'home_address'\r\n              ? `${row.home_address.home_address_1}, ${row.home_address.home_address_2}`\r\n              : value}\r\n          </TableCell>\r\n        );\r\n      })}\r\n    </TableRow>\r\n  );\r\n}\r\n\r\nexport default Rows;\r\n"]},"metadata":{},"sourceType":"module"}