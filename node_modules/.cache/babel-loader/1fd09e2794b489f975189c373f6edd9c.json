{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thang\\\\Downloads\\\\Code structure\\\\src\\\\modules\\\\auth\\\\components\\\\abc.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\nconst names = [{\n  id: 1,\n  value: 'SBM'\n}, {\n  id: 2,\n  value: 'DMF'\n}];\n\nfunction getStyles(name, personName, theme) {\n  return {\n    fontWeight: personName.indexOf(name) === -1 ? theme.typography.fontWeightRegular : theme.typography.fontWeightMedium\n  };\n}\n\nexport default function MultipleSelectPlaceholder() {\n  _s();\n\n  const theme = useTheme();\n  const [personName, setPersonName] = React.useState([]);\n\n  const handleChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setPersonName( // On autofill we get a stringified value.\n    typeof value === 'string' ? value.split(',') : value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      sx: {\n        m: 1,\n        width: 300,\n        mt: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        multiple: true,\n        displayEmpty: true,\n        value: personName,\n        onChange: handleChange,\n        input: /*#__PURE__*/_jsxDEV(OutlinedInput, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 18\n        }, this),\n        renderValue: selected => {\n          if (selected.length === 0) {\n            return /*#__PURE__*/_jsxDEV(\"em\", {\n              children: \"Placeholder\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 22\n            }, this);\n          }\n\n          return selected.join(', ');\n        },\n        MenuProps: MenuProps,\n        inputProps: {\n          'aria-label': 'Without label'\n        },\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          disabled: true,\n          value: \"\",\n          children: /*#__PURE__*/_jsxDEV(\"em\", {\n            children: \"Placeholder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), names.map(name => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: name.value,\n          style: getStyles(name.value, personName, theme),\n          children: name\n        }, name.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MultipleSelectPlaceholder, \"sfDDdSu1JVzyreev7Xrw9PfgWAE=\", false, function () {\n  return [useTheme];\n});\n\n_c = MultipleSelectPlaceholder;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultipleSelectPlaceholder\");","map":{"version":3,"sources":["C:/Users/thang/Downloads/Code structure/src/modules/auth/components/abc.tsx"],"names":["React","useTheme","OutlinedInput","MenuItem","FormControl","Select","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","names","id","value","getStyles","name","personName","theme","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","MultipleSelectPlaceholder","setPersonName","useState","handleChange","event","target","split","m","mt","selected","length","join","map"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { Theme, useTheme } from '@mui/material/styles';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nconst names = [\r\n  { id: 1, value: 'SBM' },\r\n  { id: 2, value: 'DMF' },\r\n];\r\n\r\nfunction getStyles(name: string, personName: readonly string[], theme: Theme) {\r\n  return {\r\n    fontWeight:\r\n      personName.indexOf(name) === -1 ? theme.typography.fontWeightRegular : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\n\r\nexport default function MultipleSelectPlaceholder() {\r\n  const theme = useTheme();\r\n  const [personName, setPersonName] = React.useState<string[]>([]);\r\n\r\n  const handleChange = (event: SelectChangeEvent<typeof personName>) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setPersonName(\r\n      // On autofill we get a stringified value.\r\n      typeof value === 'string' ? value.split(',') : value,\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FormControl sx={{ m: 1, width: 300, mt: 3 }}>\r\n        <Select\r\n          multiple\r\n          displayEmpty\r\n          value={personName}\r\n          onChange={handleChange}\r\n          input={<OutlinedInput />}\r\n          renderValue={(selected) => {\r\n            if (selected.length === 0) {\r\n              return <em>Placeholder</em>;\r\n            }\r\n\r\n            return selected.join(', ');\r\n          }}\r\n          MenuProps={MenuProps}\r\n          inputProps={{ 'aria-label': 'Without label' }}\r\n        >\r\n          <MenuItem disabled value=\"\">\r\n            <em>Placeholder</em>\r\n          </MenuItem>\r\n          {names.map((name) => (\r\n            <MenuItem key={name.id} value={name.value} style={getStyles(name.value, personName, theme)}>\r\n              {name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}