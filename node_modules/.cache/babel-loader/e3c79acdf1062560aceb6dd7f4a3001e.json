{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thang\\\\Downloads\\\\Code structure\\\\src\\\\modules\\\\auth\\\\pages\\\\employeeManagement\\\\layouts\\\\options\\\\forms\\\\personalInfomation\\\\infoForm\\\\InfoForm1.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { validAddEmployee, validateAddEmployee } from '../../../../../../../utils';\nimport { Box, FormControl, InputBase, MenuItem, Select, Stack } from '@mui/material';\nimport ContainerField from './ContainerField';\nimport { FormattedMessage } from 'react-intl';\nimport InputDateTime from '../../InputDateTime';\nimport { useDispatch } from 'react-redux';\nimport { setEmployeeAdd } from '../../../../../../../redux/employeeReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction InfoForm1() {\n  _s();\n\n  const [validate, setValidate] = useState();\n  const [date, getDate] = useState();\n  const [validateForm, setValidateForm] = useState({\n    name: '',\n    gender: '',\n    motherName: '',\n    dob: '',\n    pob: '',\n    ktp: '',\n    ncId: '',\n    address1: '',\n    address2: ''\n  });\n  const dispatch = useDispatch();\n  useEffect(() => {\n    setValidateForm(prevFormContract => ({ ...prevFormContract,\n      dob: date\n    }));\n  }, [date]);\n\n  const handleBlur = () => {\n    validateAndHandle(validateForm);\n  }; // useEffect(() => {\n  //   if (validateForm.gender !== '' || validateForm.ktp !== '' || validateForm.name !== '' || validateForm.ncId !== '') {\n  //     validateAndHandle(validateForm);\n  //   }\n  // }, [validateForm]);\n\n\n  useEffect(() => {\n    dispatch(setEmployeeAdd(validateForm));\n  }, [validateForm, dispatch]);\n\n  const validateAndHandle = form => {\n    const validate = validateAddEmployee(form);\n    setValidate(validate);\n\n    if (!validAddEmployee(validate)) {\n      return;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    direction: \"column\",\n    spacing: 2,\n    sx: {\n      flex: '1 1 0%',\n      paddingLeft: '20px',\n      paddingRight: '20px',\n      gap: '10px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(ContainerField, {\n      nameField: \"name\",\n      required: \"*\",\n      children: [/*#__PURE__*/_jsxDEV(InputBase, {\n        sx: {\n          backgroundColor: !!(validate === null || validate === void 0 ? void 0 : validate.name) ? 'rgb(255, 239, 239)' : 'rgb(241, 243, 245)',\n          input: {\n            padding: '12px'\n          },\n          borderRadius: '6px',\n          width: '100%',\n          border: !!(validate === null || validate === void 0 ? void 0 : validate.name) ? '1px solid rgb(243, 174, 175)' : 'none'\n        },\n        value: validateForm.name,\n        onChange: e => {\n          setValidateForm({ ...validateForm,\n            name: e.target.value\n          });\n        },\n        onBlur: handleBlur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), !!(validate === null || validate === void 0 ? void 0 : validate.name) && /*#__PURE__*/_jsxDEV(\"small\", {\n        className: \"text-danger\",\n        children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: validate === null || validate === void 0 ? void 0 : validate.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContainerField, {\n      nameField: \"gender\",\n      required: \"*\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          minWidth: 120\n        },\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            value: validateForm.gender,\n            onChange: e => {\n              setValidateForm({ ...validateForm,\n                gender: e.target.value\n              });\n            },\n            inputProps: {\n              'aria-label': 'Without label'\n            },\n            sx: {\n              backgroundColor: !!(validate === null || validate === void 0 ? void 0 : validate.gender) ? 'rgb(255, 239, 239)' : 'rgb(241, 243, 245)',\n              border: !!(validate === null || validate === void 0 ? void 0 : validate.gender) ? '1px solid rgb(243, 174, 175)' : 'none',\n              div: {\n                padding: '12px'\n              }\n            },\n            displayEmpty: true,\n            className: \"ip\",\n            onBlur: handleBlur,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              id: \"menu-item-1\",\n              children: /*#__PURE__*/_jsxDEV(\"em\", {\n                style: {\n                  fontSize: '16px',\n                  fontFamily: 'SVN-Sofia-Regular',\n                  fontStyle: 'normal',\n                  color: 'rgb(104, 112, 118)'\n                },\n                children: \"Choose Gender\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), ['Male', 'Female'].map((option, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n              className: \"menu-item\",\n              value: option,\n              children: option\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), !!(validate === null || validate === void 0 ? void 0 : validate.gender) && /*#__PURE__*/_jsxDEV(\"small\", {\n        className: \"text-danger\",\n        children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: validate === null || validate === void 0 ? void 0 : validate.gender\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContainerField, {\n      nameField: \"motherName\",\n      children: /*#__PURE__*/_jsxDEV(InputBase, {\n        sx: {\n          backgroundColor: 'rgb(241, 243, 245)',\n          input: {\n            padding: '12px'\n          },\n          borderRadius: '6px',\n          width: '100%'\n        },\n        value: validateForm.motherName,\n        onChange: e => setValidateForm({ ...validateForm,\n          motherName: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContainerField, {\n      nameField: \"dob\",\n      required: \"*\",\n      children: /*#__PURE__*/_jsxDEV(InputDateTime, {\n        getDate: getDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContainerField, {\n      nameField: \"pob\",\n      children: /*#__PURE__*/_jsxDEV(InputBase, {\n        sx: {\n          backgroundColor: 'rgb(241, 243, 245)',\n          input: {\n            padding: '12px'\n          },\n          borderRadius: '6px',\n          width: '100%'\n        },\n        value: validateForm.pob,\n        onChange: e => setValidateForm({ ...validateForm,\n          pob: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContainerField, {\n      nameField: \"ktp\",\n      required: \"*\",\n      children: [/*#__PURE__*/_jsxDEV(InputBase, {\n        sx: {\n          backgroundColor: !!(validate === null || validate === void 0 ? void 0 : validate.ktp) ? 'rgb(255, 239, 239)' : 'rgb(241, 243, 245)',\n          border: !!(validate === null || validate === void 0 ? void 0 : validate.ktp) ? '1px solid rgb(243, 174, 175)' : 'none',\n          input: {\n            padding: '12px'\n          },\n          borderRadius: '6px',\n          width: '100%'\n        },\n        value: validateForm.ktp,\n        onChange: e => {\n          setValidateForm({ ...validateForm,\n            ktp: e.target.value\n          });\n        },\n        type: \"number\",\n        onBlur: handleBlur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), !!(validate === null || validate === void 0 ? void 0 : validate.ktp) && /*#__PURE__*/_jsxDEV(\"small\", {\n        className: \"text-danger\",\n        children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: validate === null || validate === void 0 ? void 0 : validate.ktp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContainerField, {\n      nameField: \"ncId\",\n      required: \"*\",\n      children: [/*#__PURE__*/_jsxDEV(InputBase, {\n        sx: {\n          backgroundColor: !!(validate === null || validate === void 0 ? void 0 : validate.ncId) ? 'rgb(255, 239, 239)' : 'rgb(241, 243, 245)',\n          border: !!(validate === null || validate === void 0 ? void 0 : validate.ncId) ? '1px solid rgb(243, 174, 175)' : 'none',\n          input: {\n            padding: '12px'\n          },\n          borderRadius: '6px',\n          width: '100%'\n        },\n        value: validateForm.ncId,\n        onChange: e => {\n          setValidateForm({ ...validateForm,\n            ncId: e.target.value\n          });\n        },\n        type: 'number',\n        onBlur: handleBlur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), !!(validate === null || validate === void 0 ? void 0 : validate.ncId) && /*#__PURE__*/_jsxDEV(\"small\", {\n        className: \"text-danger\",\n        children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: validate === null || validate === void 0 ? void 0 : validate.ncId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContainerField, {\n      nameField: \"address1\",\n      children: /*#__PURE__*/_jsxDEV(InputBase, {\n        sx: {\n          backgroundColor: 'rgb(241, 243, 245)',\n          input: {\n            padding: '12px'\n          },\n          borderRadius: '6px',\n          width: '100%'\n        },\n        value: validateForm.address1,\n        onChange: e => setValidateForm({ ...validateForm,\n          address1: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContainerField, {\n      nameField: \"address2\",\n      children: /*#__PURE__*/_jsxDEV(InputBase, {\n        sx: {\n          backgroundColor: 'rgb(241, 243, 245)',\n          input: {\n            padding: '12px'\n          },\n          borderRadius: '6px',\n          width: '100%'\n        },\n        value: validateForm.address2,\n        onChange: e => setValidateForm({ ...validateForm,\n          address2: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(InfoForm1, \"wEvr6oyzHpW4581bvpJQ2s7mMB0=\", false, function () {\n  return [useDispatch];\n});\n\n_c = InfoForm1;\nexport default InfoForm1;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoForm1\");","map":{"version":3,"sources":["C:/Users/thang/Downloads/Code structure/src/modules/auth/pages/employeeManagement/layouts/options/forms/personalInfomation/infoForm/InfoForm1.tsx"],"names":["useEffect","useState","validAddEmployee","validateAddEmployee","Box","FormControl","InputBase","MenuItem","Select","Stack","ContainerField","FormattedMessage","InputDateTime","useDispatch","setEmployeeAdd","InfoForm1","validate","setValidate","date","getDate","validateForm","setValidateForm","name","gender","motherName","dob","pob","ktp","ncId","address1","address2","dispatch","prevFormContract","handleBlur","validateAndHandle","form","flex","paddingLeft","paddingRight","gap","backgroundColor","input","padding","borderRadius","width","border","e","target","value","minWidth","div","fontSize","fontFamily","fontStyle","color","map","option","index"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { validAddEmployee, validateAddEmployee } from '../../../../../../../utils';\r\nimport { Box, FormControl, InputBase, MenuItem, Select, Stack } from '@mui/material';\r\nimport ContainerField from './ContainerField';\r\nimport { EmployeeParams } from '../../../../../../../../../models/employee';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport InputDateTime from '../../InputDateTime';\r\nimport { useDispatch } from 'react-redux';\r\nimport { ThunkDispatch } from 'redux-thunk';\r\nimport { AppState } from '../../../../../../../../../redux/reducer';\r\nimport { Action } from 'typesafe-actions';\r\nimport { setEmployeeAdd } from '../../../../../../../redux/employeeReducer';\r\n\r\nfunction InfoForm1() {\r\n  const [validate, setValidate] = useState<any>();\r\n  const [date, getDate] = useState<any>();\r\n  const [validateForm, setValidateForm] = useState<any>({\r\n    name: '',\r\n    gender: '',\r\n    motherName: '',\r\n    dob: '',\r\n    pob: '',\r\n    ktp: '',\r\n    ncId: '',\r\n    address1: '',\r\n    address2: '',\r\n  });\r\n  const dispatch = useDispatch<ThunkDispatch<AppState, null, Action<string>>>();\r\n\r\n  useEffect(() => {\r\n    setValidateForm((prevFormContract: any) => ({\r\n      ...prevFormContract,\r\n      dob: date,\r\n    }));\r\n  }, [date]);\r\n\r\n  const handleBlur = () => {\r\n    validateAndHandle(validateForm);\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   if (validateForm.gender !== '' || validateForm.ktp !== '' || validateForm.name !== '' || validateForm.ncId !== '') {\r\n  //     validateAndHandle(validateForm);\r\n  //   }\r\n  // }, [validateForm]);\r\n\r\n  useEffect(() => {\r\n    dispatch(setEmployeeAdd(validateForm));\r\n  }, [validateForm, dispatch]);\r\n\r\n  const validateAndHandle = (form: EmployeeParams) => {\r\n    const validate = validateAddEmployee(form);\r\n    setValidate(validate);\r\n    if (!validAddEmployee(validate)) {\r\n      return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Stack\r\n      direction=\"column\"\r\n      spacing={2}\r\n      sx={{ flex: '1 1 0%', paddingLeft: '20px', paddingRight: '20px', gap: '10px' }}\r\n    >\r\n      <ContainerField nameField=\"name\" required=\"*\">\r\n        <InputBase\r\n          sx={{\r\n            backgroundColor: !!validate?.name ? 'rgb(255, 239, 239)' : 'rgb(241, 243, 245)',\r\n            input: { padding: '12px' },\r\n            borderRadius: '6px',\r\n            width: '100%',\r\n            border: !!validate?.name ? '1px solid rgb(243, 174, 175)' : 'none',\r\n          }}\r\n          value={validateForm.name}\r\n          onChange={(e) => {\r\n            setValidateForm({ ...validateForm, name: e.target.value });\r\n          }}\r\n          onBlur={handleBlur}\r\n        />\r\n        {!!validate?.name && (\r\n          <small className=\"text-danger\">\r\n            <FormattedMessage id={validate?.name} />\r\n          </small>\r\n        )}\r\n      </ContainerField>\r\n      <ContainerField nameField=\"gender\" required=\"*\">\r\n        <Box sx={{ minWidth: 120 }}>\r\n          <FormControl fullWidth>\r\n            <Select\r\n              value={validateForm.gender}\r\n              onChange={(e) => {\r\n                setValidateForm({ ...validateForm, gender: e.target.value });\r\n              }}\r\n              inputProps={{ 'aria-label': 'Without label' }}\r\n              sx={{\r\n                backgroundColor: !!validate?.gender ? 'rgb(255, 239, 239)' : 'rgb(241, 243, 245)',\r\n                border: !!validate?.gender ? '1px solid rgb(243, 174, 175)' : 'none',\r\n                div: { padding: '12px' },\r\n              }}\r\n              displayEmpty\r\n              className=\"ip\"\r\n              onBlur={handleBlur}\r\n            >\r\n              <MenuItem value=\"\" id=\"menu-item-1\">\r\n                <em\r\n                  style={{\r\n                    fontSize: '16px',\r\n                    fontFamily: 'SVN-Sofia-Regular',\r\n                    fontStyle: 'normal',\r\n                    color: 'rgb(104, 112, 118)',\r\n                  }}\r\n                >\r\n                  Choose Gender\r\n                </em>\r\n              </MenuItem>\r\n              {['Male', 'Female'].map((option: string, index: number) => (\r\n                <MenuItem key={index} className=\"menu-item\" value={option}>\r\n                  {option}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Box>\r\n        {!!validate?.gender && (\r\n          <small className=\"text-danger\">\r\n            <FormattedMessage id={validate?.gender} />\r\n          </small>\r\n        )}\r\n      </ContainerField>\r\n      <ContainerField nameField=\"motherName\">\r\n        <InputBase\r\n          sx={{\r\n            backgroundColor: 'rgb(241, 243, 245)',\r\n            input: { padding: '12px' },\r\n            borderRadius: '6px',\r\n            width: '100%',\r\n          }}\r\n          value={validateForm.motherName}\r\n          onChange={(e) => setValidateForm({ ...validateForm, motherName: e.target.value })}\r\n        />\r\n      </ContainerField>\r\n      <ContainerField nameField=\"dob\" required=\"*\">\r\n        <InputDateTime getDate={getDate} />\r\n      </ContainerField>\r\n      <ContainerField nameField=\"pob\">\r\n        <InputBase\r\n          sx={{\r\n            backgroundColor: 'rgb(241, 243, 245)',\r\n            input: { padding: '12px' },\r\n            borderRadius: '6px',\r\n            width: '100%',\r\n          }}\r\n          value={validateForm.pob}\r\n          onChange={(e) => setValidateForm({ ...validateForm, pob: e.target.value })}\r\n        />\r\n      </ContainerField>\r\n      <ContainerField nameField=\"ktp\" required=\"*\">\r\n        <InputBase\r\n          sx={{\r\n            backgroundColor: !!validate?.ktp ? 'rgb(255, 239, 239)' : 'rgb(241, 243, 245)',\r\n            border: !!validate?.ktp ? '1px solid rgb(243, 174, 175)' : 'none',\r\n            input: { padding: '12px' },\r\n            borderRadius: '6px',\r\n            width: '100%',\r\n          }}\r\n          value={validateForm.ktp}\r\n          onChange={(e) => {\r\n            setValidateForm({ ...validateForm, ktp: e.target.value });\r\n          }}\r\n          type=\"number\"\r\n          onBlur={handleBlur}\r\n        />\r\n        {!!validate?.ktp && (\r\n          <small className=\"text-danger\">\r\n            <FormattedMessage id={validate?.ktp} />\r\n          </small>\r\n        )}\r\n      </ContainerField>\r\n      <ContainerField nameField=\"ncId\" required=\"*\">\r\n        <InputBase\r\n          sx={{\r\n            backgroundColor: !!validate?.ncId ? 'rgb(255, 239, 239)' : 'rgb(241, 243, 245)',\r\n            border: !!validate?.ncId ? '1px solid rgb(243, 174, 175)' : 'none',\r\n            input: { padding: '12px' },\r\n            borderRadius: '6px',\r\n            width: '100%',\r\n          }}\r\n          value={validateForm.ncId}\r\n          onChange={(e) => {\r\n            setValidateForm({ ...validateForm, ncId: e.target.value });\r\n          }}\r\n          type={'number'}\r\n          onBlur={handleBlur}\r\n        />\r\n        {!!validate?.ncId && (\r\n          <small className=\"text-danger\">\r\n            <FormattedMessage id={validate?.ncId} />\r\n          </small>\r\n        )}\r\n      </ContainerField>\r\n      <ContainerField nameField=\"address1\">\r\n        <InputBase\r\n          sx={{\r\n            backgroundColor: 'rgb(241, 243, 245)',\r\n            input: { padding: '12px' },\r\n            borderRadius: '6px',\r\n            width: '100%',\r\n          }}\r\n          value={validateForm.address1}\r\n          onChange={(e) => setValidateForm({ ...validateForm, address1: e.target.value })}\r\n        />\r\n      </ContainerField>\r\n      <ContainerField nameField=\"address2\">\r\n        <InputBase\r\n          sx={{\r\n            backgroundColor: 'rgb(241, 243, 245)',\r\n            input: { padding: '12px' },\r\n            borderRadius: '6px',\r\n            width: '100%',\r\n          }}\r\n          value={validateForm.address2}\r\n          onChange={(e) => setValidateForm({ ...validateForm, address2: e.target.value })}\r\n        />\r\n      </ContainerField>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nexport default InfoForm1;\r\n"]},"metadata":{},"sourceType":"module"}