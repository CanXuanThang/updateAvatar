{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thang\\\\Downloads\\\\Code structure\\\\src\\\\modules\\\\auth\\\\pages\\\\SignUpPage.tsx\",\n    _s = $RefreshSig$();\n\nimport SignUpForm from '../components/SignUpForm';\nimport logo from '../../../logo-420-x-108.png';\nimport { useDispatch } from 'react-redux';\nimport { useCallback, useEffect, useState } from 'react';\nimport { fetchThunk } from '../../common/redux/thunk';\nimport { API_PATHS } from '../../../configs/api';\nimport { RESPONSE_STATUS_SUCCESS } from '../../../utils/httpResponseCode';\nimport { setUserInfo } from '../redux/authReducer';\nimport { replace } from 'connected-react-router';\nimport { ROUTES } from '../../../configs/routes';\nimport { getErrorMessageResponse } from '../../../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SignUpPage() {\n  _s();\n\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [locations, setLocations] = useState([]);\n  const [states, setStates] = useState([]);\n  const [idRegion, setIdRegion] = useState('');\n  const getLocation = useCallback(async idRegion => {\n    setLoading(true);\n    const json = await dispatch(fetchThunk(idRegion ? `${API_PATHS.getLocation}?pid=${idRegion}` : API_PATHS.getLocation, 'get'));\n    setLoading(false);\n\n    if ((json === null || json === void 0 ? void 0 : json.code) === RESPONSE_STATUS_SUCCESS) {\n      idRegion ? setStates(json.data) : setLocations(json.data);\n      return;\n    }\n  }, []);\n  useEffect(() => {\n    getLocation(idRegion);\n  }, [getLocation, idRegion]);\n  const onSignUp = useCallback(async values => {\n    setErrorMessage('');\n    setLoading(true);\n    console.log(values);\n    const json = await dispatch(fetchThunk(API_PATHS.signUp, 'post', {\n      email: values.email,\n      password: values.password,\n      gender: values.gender,\n      name: values.name,\n      region: values.region,\n      repeatPassword: values.repeatPassword,\n      states: values.states\n    }));\n    setLoading(false);\n\n    if ((json === null || json === void 0 ? void 0 : json.code) === RESPONSE_STATUS_SUCCESS) {\n      dispatch(setUserInfo(json.data)); // Cookies.set(ACCESS_TOKEN_KEY, json.data.token, { expires: values.rememberMe ? 7 : undefined });\n\n      dispatch(replace(ROUTES.home));\n      console.log('asd');\n      return;\n    }\n\n    setErrorMessage(getErrorMessageResponse(json));\n  }, [dispatch]);\n\n  const onChangeRegion = idRegion => {\n    setIdRegion(idRegion);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    style: {\n      height: '100vh',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexDirection: 'column'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      alt: \"\",\n      style: {\n        maxWidth: '250px',\n        margin: '32px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SignUpForm, {\n      onSignUp: onSignUp,\n      loading: loading,\n      errorMessage: errorMessage,\n      locations: locations,\n      states: states,\n      onChangeRegion: onChangeRegion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignUpPage, \"SDKNmL0fqLObZ01GWnJDdEOh/gw=\", false, function () {\n  return [useDispatch];\n});\n\n_c = SignUpPage;\nexport default SignUpPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpPage\");","map":{"version":3,"sources":["C:/Users/thang/Downloads/Code structure/src/modules/auth/pages/SignUpPage.tsx"],"names":["SignUpForm","logo","useDispatch","useCallback","useEffect","useState","fetchThunk","API_PATHS","RESPONSE_STATUS_SUCCESS","setUserInfo","replace","ROUTES","getErrorMessageResponse","SignUpPage","dispatch","loading","setLoading","errorMessage","setErrorMessage","locations","setLocations","states","setStates","idRegion","setIdRegion","getLocation","json","code","data","onSignUp","values","console","log","signUp","email","password","gender","name","region","repeatPassword","home","onChangeRegion","height","display","alignItems","justifyContent","flexDirection","maxWidth","margin"],"mappings":"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","sourcesContent":["import SignUpForm from '../components/SignUpForm';\r\nimport logo from '../../../logo-420-x-108.png';\r\nimport { useDispatch } from 'react-redux';\r\nimport { ThunkDispatch } from 'redux-thunk';\r\nimport { AppState } from '../../../redux/reducer';\r\nimport { Action } from 'redux';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { fetchThunk } from '../../common/redux/thunk';\r\nimport { API_PATHS } from '../../../configs/api';\r\nimport { RESPONSE_STATUS_SUCCESS } from '../../../utils/httpResponseCode';\r\nimport { setUserInfo } from '../redux/authReducer';\r\nimport { replace } from 'connected-react-router';\r\nimport { ROUTES } from '../../../configs/routes';\r\nimport { ISignUpParams } from '../../../models/singup';\r\nimport { getErrorMessageResponse } from '../../../utils';\r\n\r\nfunction SignUpPage() {\r\n  const dispatch = useDispatch<ThunkDispatch<AppState, null, Action<string>>>();\r\n  const [loading, setLoading] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [locations, setLocations] = useState([]);\r\n  const [states, setStates] = useState([]);\r\n  const [idRegion, setIdRegion] = useState('');\r\n\r\n  const getLocation = useCallback(async (idRegion?: string) => {\r\n    setLoading(true);\r\n\r\n    const json = await dispatch(\r\n      fetchThunk(idRegion ? `${API_PATHS.getLocation}?pid=${idRegion}` : API_PATHS.getLocation, 'get'),\r\n    );\r\n\r\n    setLoading(false);\r\n\r\n    if (json?.code === RESPONSE_STATUS_SUCCESS) {\r\n      idRegion ? setStates(json.data) : setLocations(json.data);\r\n      return;\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getLocation(idRegion);\r\n  }, [getLocation, idRegion]);\r\n\r\n  const onSignUp = useCallback(\r\n    async (values: ISignUpParams) => {\r\n      setErrorMessage('');\r\n      setLoading(true);\r\n      console.log(values);\r\n\r\n      const json = await dispatch(\r\n        fetchThunk(API_PATHS.signUp, 'post', {\r\n          email: values.email,\r\n          password: values.password,\r\n          gender: values.gender,\r\n          name: values.name,\r\n          region: values.region,\r\n          repeatPassword: values.repeatPassword,\r\n          states: values.states,\r\n        }),\r\n      );\r\n\r\n      setLoading(false);\r\n\r\n      if (json?.code === RESPONSE_STATUS_SUCCESS) {\r\n        dispatch(setUserInfo(json.data));\r\n        // Cookies.set(ACCESS_TOKEN_KEY, json.data.token, { expires: values.rememberMe ? 7 : undefined });\r\n        dispatch(replace(ROUTES.home));\r\n        console.log('asd');\r\n\r\n        return;\r\n      }\r\n\r\n      setErrorMessage(getErrorMessageResponse(json));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const onChangeRegion = (idRegion: string) => {\r\n    setIdRegion(idRegion);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"container\"\r\n      style={{\r\n        height: '100vh',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        flexDirection: 'column',\r\n      }}\r\n    >\r\n      <img src={logo} alt=\"\" style={{ maxWidth: '250px', margin: '32px' }} />\r\n      <SignUpForm\r\n        onSignUp={onSignUp}\r\n        loading={loading}\r\n        errorMessage={errorMessage}\r\n        locations={locations}\r\n        states={states}\r\n        onChangeRegion={onChangeRegion}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUpPage;\r\n"]},"metadata":{},"sourceType":"module"}