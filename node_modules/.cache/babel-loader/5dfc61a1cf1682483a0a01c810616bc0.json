{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thang\\\\Downloads\\\\Code structure\\\\src\\\\modules\\\\auth\\\\components\\\\forgotPassword\\\\ForgotPasswordForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { Controller, useForm } from 'react-hook-form';\nimport { FormattedMessage } from 'react-intl';\nimport './ForgotPasswordForm.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ForgotPasswordForm(props) {\n  _s();\n\n  var _errors$email, _errors$email2;\n\n  const {\n    control,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues: {\n      email: ''\n    }\n  });\n  const {\n    onLogin,\n    loading,\n    errorMessage\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(data => console.log(data)),\n    className: \"row g-3 needs-validation\",\n    style: {\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"title\",\n      style: {\n        marginTop: '56px'\n      },\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forgot\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"inputEmail\",\n          className: \"form-label\",\n          children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n            id: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          name: \"email\",\n          control: control,\n          rules: {\n            required: true,\n            pattern: /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/\n          },\n          render: ({\n            field\n          }) => /*#__PURE__*/_jsxDEV(\"input\", { ...field,\n            type: \"text\",\n            id: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-danger mt-2 d-block \",\n          style: {\n            fontSize: '14px'\n          },\n          children: [((_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.type) === 'required' && /*#__PURE__*/_jsxDEV(FormattedMessage, {\n            id: \"emailRequire\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 51\n          }, this), ((_errors$email2 = errors.email) === null || _errors$email2 === void 0 ? void 0 : _errors$email2.type) === 'pattern' && /*#__PURE__*/_jsxDEV(FormattedMessage, {\n            id: \"emailInvalid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 50\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-md-center\",\n        style: {\n          margin: '16px 0'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-auto d-flex\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary me-3\",\n            type: \"submit\",\n            style: {\n              minWidth: '160px',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center'\n            },\n            disabled: loading,\n            children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"spinner-border spinner-border-sm text-light mr-2\",\n              role: \"status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"inputEmail\",\n              className: \"form-label\",\n              children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                id: \"register\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ForgotPasswordForm, \"AQOSPDgWcjIenkNEcAJmC9mwSqA=\", false, function () {\n  return [useForm];\n});\n\n_c = ForgotPasswordForm;\nexport default ForgotPasswordForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPasswordForm\");","map":{"version":3,"sources":["C:/Users/thang/Downloads/Code structure/src/modules/auth/components/forgotPassword/ForgotPasswordForm.tsx"],"names":["Controller","useForm","FormattedMessage","ForgotPasswordForm","props","control","handleSubmit","formState","errors","defaultValues","email","onLogin","loading","errorMessage","data","console","log","display","flexDirection","marginTop","required","pattern","field","fontSize","type","margin","minWidth","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import { Controller, useForm } from 'react-hook-form';\r\nimport { ILoginParams } from '../../../../models/auth';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport './ForgotPasswordForm.scss';\r\n\r\ninterface Props {\r\n  onLogin(values: ILoginParams): void;\r\n  loading: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nfunction ForgotPasswordForm(props: Props) {\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    defaultValues: {\r\n      email: '',\r\n    },\r\n  });\r\n  const { onLogin, loading, errorMessage } = props;\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit((data) => console.log(data))}\r\n      className=\"row g-3 needs-validation\"\r\n      style={{ display: 'flex', flexDirection: 'column' }}\r\n    >\r\n      <h3 className=\"title\" style={{ marginTop: '56px' }}>\r\n        Sign In\r\n      </h3>\r\n      <div className=\"forgot\">\r\n        <div className=\"d-flex flex-column\">\r\n          <label htmlFor=\"inputEmail\" className=\"form-label\">\r\n            <FormattedMessage id=\"email\" />\r\n          </label>\r\n          <Controller\r\n            name=\"email\"\r\n            control={control}\r\n            rules={{\r\n              required: true,\r\n              pattern: /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/,\r\n            }}\r\n            render={({ field }) => <input {...field} type=\"text\" id=\"email\" />}\r\n          />\r\n          <span className=\"text-danger mt-2 d-block \" style={{ fontSize: '14px' }}>\r\n            {errors.email?.type === 'required' && <FormattedMessage id=\"emailRequire\" />}\r\n            {errors.email?.type === 'pattern' && <FormattedMessage id=\"emailInvalid\" />}\r\n          </span>\r\n        </div>\r\n        <div className=\"row justify-content-md-center\" style={{ margin: '16px 0' }}>\r\n          <div className=\"col-md-auto d-flex\">\r\n            <button\r\n              className=\"btn btn-primary me-3\"\r\n              type=\"submit\"\r\n              style={{ minWidth: '160px', display: 'flex', alignItems: 'center', justifyContent: 'center' }}\r\n              disabled={loading}\r\n            >\r\n              {loading && <div className=\"spinner-border spinner-border-sm text-light mr-2\" role=\"status\" />}\r\n              <label htmlFor=\"inputEmail\" className=\"form-label\">\r\n                <FormattedMessage id=\"register\" />\r\n              </label>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ForgotPasswordForm;\r\n"]},"metadata":{},"sourceType":"module"}