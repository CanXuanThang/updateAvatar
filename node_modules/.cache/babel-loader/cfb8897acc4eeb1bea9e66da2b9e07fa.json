{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thang\\\\Downloads\\\\Code structure\\\\src\\\\modules\\\\auth\\\\components\\\\SignUpForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { FormattedMessage } from 'react-intl';\nimport { validSignUp, validateSignUp } from '../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SignUpForm(props) {\n  _s();\n\n  const [passwordMatch, setPasswordMatch] = useState(true);\n  const {\n    onSignUp,\n    loading,\n    errorMessage,\n    locations,\n    states,\n    onChangeRegion\n  } = props;\n  const [showCityField, setShowCityField] = useState(false);\n  const [validate, setValidate] = useState();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    watch\n  } = useForm({\n    defaultValues: {\n      email: '',\n      password: '',\n      repeatPassword: '',\n      name: '',\n      gender: '',\n      region: '',\n      state: ''\n    }\n  });\n  const options = [{\n    label: 'Nam',\n    value: 'male'\n  }, {\n    label: 'Ná»¯',\n    value: 'female'\n  }, {\n    label: 'Bede',\n    value: 'bede'\n  }];\n  useEffect(() => {\n    const password = watch('password');\n    const repeatPassword = watch('repeatPassword');\n    const region = watch('region');\n\n    if (password && repeatPassword) {\n      setPasswordMatch(password === repeatPassword);\n    }\n\n    onChangeRegion(region);\n\n    if (region) {\n      setShowCityField(true);\n    }\n  }, [watch('password'), watch('repeatPassword'), watch('region')]);\n\n  const onSubmit = data => {\n    onSignUp(data);\n    const validate = validateSignUp(data);\n    setValidate(validate);\n\n    if (!validSignUp(validate)) {\n      return;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    className: \"row g-3 needs-validation\",\n    style: {\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    children: [!!errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      style: {\n        width: '100%'\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"inputEmail\",\n        className: \"form-label\",\n        children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        ...register('email')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), !!(validate === null || validate === void 0 ? void 0 : validate.email) && /*#__PURE__*/_jsxDEV(\"small\", {\n        className: \"text-danger\",\n        children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: validate === null || validate === void 0 ? void 0 : validate.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        ...register('password')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), !!(validate === null || validate === void 0 ? void 0 : validate.email) && /*#__PURE__*/_jsxDEV(\"small\", {\n        className: \"text-danger\",\n        children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: validate === null || validate === void 0 ? void 0 : validate.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-md-center\",\n      style: {\n        margin: '16px 0'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-auto d-flex\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary me-3\",\n          type: \"submit\",\n          style: {\n            minWidth: '160px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center'\n          },\n          disabled: loading,\n          children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spinner-border spinner-border-sm text-light mr-2\",\n            role: \"status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 25\n          }, this), \" \\u0110\\u0103ng k\\xFD\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignUpForm, \"rvI2JqxvtZ+9OERu52NMuEXc/U0=\", false, function () {\n  return [useForm];\n});\n\n_c = SignUpForm;\nexport default SignUpForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpForm\");","map":{"version":3,"sources":["C:/Users/thang/Downloads/Code structure/src/modules/auth/components/SignUpForm.tsx"],"names":["useEffect","useState","useForm","FormattedMessage","validSignUp","validateSignUp","SignUpForm","props","passwordMatch","setPasswordMatch","onSignUp","loading","errorMessage","locations","states","onChangeRegion","showCityField","setShowCityField","validate","setValidate","register","handleSubmit","formState","errors","watch","defaultValues","email","password","repeatPassword","name","gender","region","state","options","label","value","onSubmit","data","display","flexDirection","width","margin","minWidth","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { Controller, SubmitHandler, useForm } from 'react-hook-form';\r\nimport { ILocationParams, ISignUpParams } from '../../../models/singup';\r\nimport configureStore from '../../../redux/configureStore';\r\nimport { setLocale } from '../../intl/redux/intlReducer';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { ILoginValidation } from '../../../models/auth';\r\nimport { validSignUp, validateSignUp } from '../utils';\r\n\r\ninterface Props {\r\n  onSignUp(values: ISignUpParams): void;\r\n  loading: boolean;\r\n  errorMessage: string;\r\n  locations: Array<ILocationParams>;\r\n  states: Array<ILocationParams>;\r\n  onChangeRegion(idRegion: string): void;\r\n}\r\n\r\nfunction SignUpForm(props: Props) {\r\n  const [passwordMatch, setPasswordMatch] = useState(true);\r\n  const { onSignUp, loading, errorMessage, locations, states, onChangeRegion } = props;\r\n  const [showCityField, setShowCityField] = useState(false);\r\n  const [validate, setValidate] = useState<ILoginValidation>();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    watch,\r\n  } = useForm<ISignUpParams>({\r\n    defaultValues: {\r\n      email: '',\r\n      password: '',\r\n      repeatPassword: '',\r\n      name: '',\r\n      gender: '',\r\n      region: '',\r\n      state: '',\r\n    },\r\n  });\r\n\r\n  const options = [\r\n    {\r\n      label: 'Nam',\r\n      value: 'male',\r\n    },\r\n    {\r\n      label: 'Ná»¯',\r\n      value: 'female',\r\n    },\r\n    {\r\n      label: 'Bede',\r\n      value: 'bede',\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const password = watch('password');\r\n    const repeatPassword = watch('repeatPassword');\r\n    const region = watch('region');\r\n    if (password && repeatPassword) {\r\n      setPasswordMatch(password === repeatPassword);\r\n    }\r\n    onChangeRegion(region);\r\n\r\n    if (region) {\r\n      setShowCityField(true);\r\n    }\r\n  }, [watch('password'), watch('repeatPassword'), watch('region')]);\r\n\r\n  const onSubmit: SubmitHandler<ISignUpParams> = (data) => {\r\n    onSignUp(data);\r\n    const validate = validateSignUp(data);\r\n    setValidate(validate);\r\n\r\n    if (!validSignUp(validate)) {\r\n      return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit(onSubmit)}\r\n      className=\"row g-3 needs-validation\"\r\n      style={{ display: 'flex', flexDirection: 'column' }}\r\n    >\r\n      {!!errorMessage && (\r\n        <div className=\"alert alert-danger\" role=\"alert\" style={{ width: '100%' }}>\r\n          {errorMessage}\r\n        </div>\r\n      )}\r\n      <div className=\"d-flex flex-column\">\r\n        <label htmlFor=\"inputEmail\" className=\"form-label\">\r\n          <FormattedMessage id=\"email\" />\r\n        </label>\r\n        {/* <Controller\r\n          name=\"email\"\r\n          control={control}\r\n          rules={{\r\n            required: validate?.email,\r\n            pattern: {\r\n              value: /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/,\r\n              message: 'Äá»nh dáº¡ng email khÃ´ng ÄÃºng',\r\n            },\r\n          }}\r\n          render={({ field }) => <input {...field} type=\"text\" id=\"email\" />}\r\n        /> */}\r\n        <input type=\"email\" {...register('email')} />\r\n        {!!validate?.email && (\r\n          <small className=\"text-danger\">\r\n            <FormattedMessage id={validate?.email} />\r\n          </small>\r\n        )}\r\n      </div>\r\n      <div>\r\n        <input type=\"password\" {...register('password')} />\r\n        {!!validate?.email && (\r\n          <small className=\"text-danger\">\r\n            <FormattedMessage id={validate?.email} />\r\n          </small>\r\n        )}\r\n      </div>\r\n      {/* <div className=\"d-flex flex-column\">\r\n        <label htmlFor=\"inputEmail\" className=\"form-label\">\r\n          <FormattedMessage id=\"password\" />\r\n        </label>\r\n        <Controller\r\n          name=\"password\"\r\n          control={control}\r\n          rules={{\r\n            required: 'Vui lÃ²ng nháº­p máº­t kháº©u',\r\n            minLength: {\r\n              value: 4,\r\n              message: 'Máº­t kháº©u tá»i thiá»u 4 kÃ½ tá»±',\r\n            },\r\n          }}\r\n          render={({ field }) => <input {...field} type=\"password\" id=\"password\" />}\r\n        />\r\n        {errors.password && <span className=\"text-danger\">{errors.password.message}</span>}\r\n      </div>\r\n      <div className=\"d-flex flex-column\">\r\n        <label htmlFor=\"inputEmail\" className=\"form-label\">\r\n          <FormattedMessage id=\"repeatPassword\" />\r\n        </label>\r\n        <Controller\r\n          name=\"repeatPassword\"\r\n          control={control}\r\n          rules={{\r\n            required: 'Vui lÃ²ng nháº­p láº¡i máº­t kháº©u',\r\n            validate: (value) => value === watch('password') || 'Máº­t kháº©u xÃ¡c nháº­n khÃ´ng chÃ­nh xÃ¡c',\r\n          }}\r\n          render={({ field }) => <input {...field} type=\"password\" id=\"repeatPassword\" />}\r\n        />\r\n        {!passwordMatch && <span className=\"text-danger\">Máº­t kháº©u xÃ¡c nháº­n khÃ´ng chÃ­nh xÃ¡c</span>}\r\n      </div>\r\n      <div className=\"d-flex flex-column\">\r\n        <label htmlFor=\"inputEmail\" className=\"form-label\">\r\n          <FormattedMessage id=\"name\" />\r\n        </label>\r\n        <Controller\r\n          name=\"name\"\r\n          control={control}\r\n          rules={{\r\n            required: 'Vui lÃ²ng nháº­p tÃªn',\r\n          }}\r\n          render={({ field }) => <input {...field} type=\"text \" id=\"name\" />}\r\n        />\r\n      </div>\r\n      <div className=\"d-flex flex-column\">\r\n        <label htmlFor=\"inputEmail\" className=\"form-label\">\r\n          <FormattedMessage id=\"gender\" />\r\n        </label>\r\n        <Controller\r\n          name=\"gender\"\r\n          control={control}\r\n          rules={{ required: 'Vui lÃ²ng nháº­p giá»i tÃ­nh' }}\r\n          render={({ field: { onChange, value } }) => (\r\n            <select onChange={onChange} value={value}>\r\n              <option>-- Vui lÃ²ng chá»n giá»i tÃ­nh --</option>\r\n              {options.map((option) => (\r\n                <option key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          )}\r\n        />\r\n      </div>\r\n      <div className=\"d-flex flex-column\">\r\n        <label htmlFor=\"inputEmail\" className=\"form-label\">\r\n          <FormattedMessage id=\"region\" />\r\n        </label>\r\n        <Controller\r\n          name=\"region\"\r\n          control={control}\r\n          rules={{ required: 'Vui lÃ²ng chá»n quá»c gia' }}\r\n          render={({ field: { onChange, value } }) => (\r\n            <select onChange={onChange} value={value}>\r\n              <option>-- Vui lÃ²ng chá»n quá»c gia --</option>\r\n              {locations.map((location: ILocationParams, index: number) => (\r\n                <option key={location.id} value={index + 1}>\r\n                  {location.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          )}\r\n        />\r\n      </div>\r\n      {showCityField && (\r\n        <div className=\"d-flex flex-column\">\r\n          <label htmlFor=\"inputEmail\" className=\"form-label\">\r\n            <FormattedMessage id=\"state\" />\r\n          </label>\r\n          <Controller\r\n            name=\"state\"\r\n            control={control}\r\n            rules={{ required: 'Vui lÃ²ng chá»n quá»c gia' }}\r\n            render={({ field: { onChange, value } }) => (\r\n              <select onChange={onChange} value={value}>\r\n                {states.map((state: ILocationParams, index: number) => (\r\n                  <option key={state.id} value={index}>\r\n                    {state.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            )}\r\n          />\r\n        </div>\r\n      )} */}\r\n      <div className=\"row justify-content-md-center\" style={{ margin: '16px 0' }}>\r\n        <div className=\"col-md-auto d-flex\">\r\n          <button\r\n            className=\"btn btn-primary me-3\"\r\n            type=\"submit\"\r\n            style={{ minWidth: '160px', display: 'flex', alignItems: 'center', justifyContent: 'center' }}\r\n            disabled={loading}\r\n          >\r\n            {loading && <div className=\"spinner-border spinner-border-sm text-light mr-2\" role=\"status\" />} ÄÄng kÃ½\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SignUpForm;\r\n"]},"metadata":{},"sourceType":"module"}