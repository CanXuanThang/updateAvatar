{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thang\\\\Downloads\\\\Code structure\\\\src\\\\modules\\\\auth\\\\pages\\\\employeeManagement\\\\layouts\\\\table\\\\Table.tsx\";\n// import { DataGrid, GridColDef } from '@mui/x-data-grid';\n// const columns: GridColDef[] = [\n//   { field: 'staff_id', headerName: 'NIK', width: 95 },\n//   { field: 'name', headerName: 'Name', width: 150 },\n//   { field: 'gender', headerName: 'Gender', width: 70 },\n//   { field: 'card_number', headerName: 'Bank Card No.', width: 130 },\n//   { field: 'bank_account_no', headerName: 'Bank Account No.', width: 150 },\n//   { field: 'family_card_number', headerName: 'Family Card No.', width: 150 },\n//   { field: 'marriage_code', headerName: 'Marriage Status', width: 130 },\n//   { field: 'mother_name', headerName: 'Mother Name', width: 150 },\n//   { field: 'pob', headerName: 'Place of birth', width: 115 },\n//   { field: 'dob', headerName: 'Date of birth', width: 115 },\n//   { field: 'home_address_1', headerName: 'Home Address', width: 350 },\n//   { field: 'home_address_2', headerName: 'Home Address', width: 350 },\n//   { field: 'nc_id', headerName: 'National Card ID No.', width: 170 },\n//   { field: 'contract_start_date', headerName: 'Date Start', width: 90 },\n//   { field: 'contract_date', headerName: 'First Contract', width: 110 },\n//   { field: 'contract_date', headerName: 'Secound Contract', width: 130 },\n//   { field: 'deleted_at', headerName: 'End Contract', width: 110 },\n//   { field: 'department_name', headerName: 'Department', width: 150 },\n//   { field: 'type', headerName: 'Employee Type', width: 120 },\n//   { field: 'basic_salary', headerName: 'Salary Rp.', width: 90 },\n//   { field: 'position_name', headerName: 'Position', width: 150 },\n//   { field: 'operational_allowance_paid', headerName: 'O/T Paid', width: 80 },\n//   { field: 'meal_allowance_paid', headerName: 'Meal paid', width: 90 },\n//   { field: 'meal_allowance', headerName: 'Meal Rp', width: 80 },\n//   { field: 'grade_name', headerName: 'Grading', width: 80 },\n// ];\n// const rows = [\n//   { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\n//   { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\n//   { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\n//   { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\n//   { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\n//   { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\n//   { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\n//   { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\n//   { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\n// ];\n// export default function Table() {\n//   return (\n//     <div style={{ height: 400, width: '100%' }}>\n//       <DataGrid\n//         rows={rows}\n//         columns={columns}\n//         initialState={{\n//           pagination: {\n//             paginationModel: { page: 0, pageSize: 5 },\n//           },\n//         }}\n//         pageSizeOptions={[5, 10]}\n//         checkboxSelection\n//       />\n//     </div>\n//   );\n// }\nimport * as React from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: 'id',\n  headerName: 'ID',\n  width: 200\n}, {\n  field: 'firstName',\n  headerName: 'First name',\n  width: 200\n}, {\n  field: 'lastName',\n  headerName: 'Last name',\n  width: 200\n}, {\n  field: 'age',\n  headerName: 'Age',\n  type: 'number',\n  width: 200\n}, {\n  field: 'fullName',\n  headerName: 'Full name',\n  description: 'This column has a value getter and is not sortable.',\n  sortable: false,\n  width: 200,\n  valueGetter: params => `${params.row.firstName || ''} ${params.row.lastName || ''}`\n}];\nconst rows = [{\n  id: 1,\n  lastName: 'Snow',\n  firstName: 'Jon',\n  age: 35\n}, {\n  id: 2,\n  lastName: 'Lannister',\n  firstName: 'Cersei',\n  age: 42\n}, {\n  id: 3,\n  lastName: 'Lannister',\n  firstName: 'Jaime',\n  age: 45\n}, {\n  id: 4,\n  lastName: 'Stark',\n  firstName: 'Arya',\n  age: 16\n}, {\n  id: 5,\n  lastName: 'Targaryen',\n  firstName: 'Daenerys',\n  age: null\n}, {\n  id: 6,\n  lastName: 'Melisandre',\n  firstName: null,\n  age: 150\n}, {\n  id: 7,\n  lastName: 'Clifford',\n  firstName: 'Ferrara',\n  age: 44\n}, {\n  id: 8,\n  lastName: 'Frances',\n  firstName: 'Rossini',\n  age: 36\n}, {\n  id: 9,\n  lastName: 'Roxie',\n  firstName: 'Harvey',\n  age: 65\n}];\nexport default function Table() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 400,\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: rows,\n      columns: columns,\n      initialState: {\n        pagination: {\n          paginationModel: {\n            page: 0,\n            pageSize: 5\n          }\n        }\n      },\n      pageSizeOptions: [5, 10],\n      checkboxSelection: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_c = Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["C:/Users/thang/Downloads/Code structure/src/modules/auth/pages/employeeManagement/layouts/table/Table.tsx"],"names":["React","DataGrid","columns","field","headerName","width","type","description","sortable","valueGetter","params","row","firstName","lastName","rows","id","age","Table","height","pagination","paginationModel","page","pageSize"],"mappings":"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","sourcesContent":["// import { DataGrid, GridColDef } from '@mui/x-data-grid';\r\n\r\n// const columns: GridColDef[] = [\r\n//   { field: 'staff_id', headerName: 'NIK', width: 95 },\r\n//   { field: 'name', headerName: 'Name', width: 150 },\r\n//   { field: 'gender', headerName: 'Gender', width: 70 },\r\n//   { field: 'card_number', headerName: 'Bank Card No.', width: 130 },\r\n//   { field: 'bank_account_no', headerName: 'Bank Account No.', width: 150 },\r\n//   { field: 'family_card_number', headerName: 'Family Card No.', width: 150 },\r\n//   { field: 'marriage_code', headerName: 'Marriage Status', width: 130 },\r\n//   { field: 'mother_name', headerName: 'Mother Name', width: 150 },\r\n//   { field: 'pob', headerName: 'Place of birth', width: 115 },\r\n//   { field: 'dob', headerName: 'Date of birth', width: 115 },\r\n//   { field: 'home_address_1', headerName: 'Home Address', width: 350 },\r\n//   { field: 'home_address_2', headerName: 'Home Address', width: 350 },\r\n//   { field: 'nc_id', headerName: 'National Card ID No.', width: 170 },\r\n//   { field: 'contract_start_date', headerName: 'Date Start', width: 90 },\r\n//   { field: 'contract_date', headerName: 'First Contract', width: 110 },\r\n//   { field: 'contract_date', headerName: 'Secound Contract', width: 130 },\r\n//   { field: 'deleted_at', headerName: 'End Contract', width: 110 },\r\n//   { field: 'department_name', headerName: 'Department', width: 150 },\r\n//   { field: 'type', headerName: 'Employee Type', width: 120 },\r\n//   { field: 'basic_salary', headerName: 'Salary Rp.', width: 90 },\r\n//   { field: 'position_name', headerName: 'Position', width: 150 },\r\n//   { field: 'operational_allowance_paid', headerName: 'O/T Paid', width: 80 },\r\n//   { field: 'meal_allowance_paid', headerName: 'Meal paid', width: 90 },\r\n//   { field: 'meal_allowance', headerName: 'Meal Rp', width: 80 },\r\n//   { field: 'grade_name', headerName: 'Grading', width: 80 },\r\n// ];\r\n\r\n// const rows = [\r\n//   { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\r\n//   { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\r\n//   { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\r\n//   { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\r\n//   { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\r\n//   { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\r\n//   { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\r\n//   { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\r\n//   { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\r\n// ];\r\n\r\n// export default function Table() {\r\n//   return (\r\n//     <div style={{ height: 400, width: '100%' }}>\r\n//       <DataGrid\r\n//         rows={rows}\r\n//         columns={columns}\r\n//         initialState={{\r\n//           pagination: {\r\n//             paginationModel: { page: 0, pageSize: 5 },\r\n//           },\r\n//         }}\r\n//         pageSizeOptions={[5, 10]}\r\n//         checkboxSelection\r\n//       />\r\n//     </div>\r\n//   );\r\n// }\r\n\r\nimport * as React from 'react';\r\nimport { DataGrid, GridColDef, GridValueGetterParams } from '@mui/x-data-grid';\r\n\r\nconst columns: GridColDef[] = [\r\n  { field: 'id', headerName: 'ID', width: 200 },\r\n  { field: 'firstName', headerName: 'First name', width: 200 },\r\n  { field: 'lastName', headerName: 'Last name', width: 200 },\r\n  {\r\n    field: 'age',\r\n    headerName: 'Age',\r\n    type: 'number',\r\n    width: 200,\r\n  },\r\n  {\r\n    field: 'fullName',\r\n    headerName: 'Full name',\r\n    description: 'This column has a value getter and is not sortable.',\r\n    sortable: false,\r\n    width: 200,\r\n    valueGetter: (params: GridValueGetterParams) => `${params.row.firstName || ''} ${params.row.lastName || ''}`,\r\n  },\r\n];\r\n\r\nconst rows = [\r\n  { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\r\n  { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\r\n  { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\r\n  { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\r\n  { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\r\n  { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\r\n  { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\r\n  { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\r\n  { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\r\n];\r\n\r\nexport default function Table() {\r\n  return (\r\n    <div style={{ height: 400, width: '100%' }}>\r\n      <DataGrid\r\n        rows={rows}\r\n        columns={columns}\r\n        initialState={{\r\n          pagination: {\r\n            paginationModel: { page: 0, pageSize: 5 },\r\n          },\r\n        }}\r\n        pageSizeOptions={[5, 10]}\r\n        checkboxSelection\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}