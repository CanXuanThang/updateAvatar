{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thang\\\\Downloads\\\\Code structure\\\\src\\\\modules\\\\auth\\\\components\\\\LoginFormV2.tsx\",\n    _s = $RefreshSig$();\n\nimport { useForm, Controller } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function LoginFormV2(props) {\n  _s();\n\n  const {\n    onLogin,\n    loading,\n    errorMessage\n  } = props;\n  const {\n    control,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = data => onLogin(data);\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    style: {\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    children: [!!errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      style: {\n        width: '100%'\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Controller, {\n      name: \"email\",\n      control: control,\n      rules: {\n        required: 'Vui lòng nhập email',\n        pattern: {\n          value: /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/,\n          message: 'Định dạng email không đúng'\n        }\n      },\n      render: ({\n        field\n      }) => /*#__PURE__*/_jsxDEV(\"input\", { ...field,\n        type: \"text\",\n        id: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-danger\",\n      children: errors.email.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(Controller, {\n      name: \"password\",\n      control: control,\n      rules: {\n        required: 'Vui lòng nhập mật khẩu',\n        minLength: {\n          value: 4,\n          message: 'Mật khẩu tối thiểu 4 ký tự'\n        }\n      },\n      render: ({\n        field\n      }) => /*#__PURE__*/_jsxDEV(\"input\", { ...field,\n        type: \"password\",\n        id: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-danger\",\n      children: errors.password.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(Controller, {\n      name: \"rememberMe\",\n      control: control,\n      render: ({\n        field\n      }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          ...field,\n          value: field.value ? 'true' : 'false'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Remember me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-md-center\",\n      style: {\n        margin: '16px 0'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          type: \"submit\",\n          style: {\n            minWidth: '160px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center'\n          },\n          disabled: loading,\n          children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spinner-border spinner-border-sm text-light mr-2\",\n            role: \"status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), \" Login\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginFormV2, \"AQOSPDgWcjIenkNEcAJmC9mwSqA=\", false, function () {\n  return [useForm];\n});\n\n_c = LoginFormV2;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginFormV2\");","map":{"version":3,"sources":["C:/Users/thang/Downloads/Code structure/src/modules/auth/components/LoginFormV2.tsx"],"names":["useForm","Controller","LoginFormV2","props","onLogin","loading","errorMessage","control","handleSubmit","formState","errors","onSubmit","data","display","flexDirection","width","required","pattern","value","message","field","email","minLength","password","margin","minWidth","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import { useForm, SubmitHandler, Controller } from 'react-hook-form';\r\nimport { ILoginParams } from '../../../models/auth';\r\n\r\ninterface Props {\r\n  onLogin(values: ILoginParams): void;\r\n  loading: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default function LoginFormV2(props: Props) {\r\n  const { onLogin, loading, errorMessage } = props;\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<ILoginParams>();\r\n  const onSubmit: SubmitHandler<ILoginParams> = (data) => onLogin(data);\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)} style={{ display: 'flex', flexDirection: 'column' }}>\r\n      {!!errorMessage && (\r\n        <div className=\"alert alert-danger\" role=\"alert\" style={{ width: '100%' }}>\r\n          {errorMessage}\r\n        </div>\r\n      )}\r\n      <Controller\r\n        name=\"email\"\r\n        control={control}\r\n        rules={{\r\n          required: 'Vui lòng nhập email',\r\n          pattern: {\r\n            value: /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/,\r\n            message: 'Định dạng email không đúng',\r\n          },\r\n        }}\r\n        render={({ field }) => <input {...field} type=\"text\" id=\"email\" />}\r\n      />\r\n      {errors.email && <span className=\"text-danger\">{errors.email.message}</span>}\r\n      <Controller\r\n        name=\"password\"\r\n        control={control}\r\n        rules={{\r\n          required: 'Vui lòng nhập mật khẩu',\r\n          minLength: {\r\n            value: 4,\r\n            message: 'Mật khẩu tối thiểu 4 ký tự',\r\n          },\r\n        }}\r\n        render={({ field }) => <input {...field} type=\"password\" id=\"password\" />}\r\n      />\r\n      {errors.password && <span className=\"text-danger\">{errors.password.message}</span>}\r\n      <Controller\r\n        name=\"rememberMe\"\r\n        control={control}\r\n        render={({ field }) => (\r\n          <>\r\n            <input type=\"checkbox\" {...field} value={field.value ? 'true' : 'false'} />\r\n            <label>Remember me</label>\r\n          </>\r\n        )}\r\n      />\r\n      <div className=\"row justify-content-md-center\" style={{ margin: '16px 0' }}>\r\n        <div className=\"col-md-auto\">\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            type=\"submit\"\r\n            style={{ minWidth: '160px', display: 'flex', alignItems: 'center', justifyContent: 'center' }}\r\n            disabled={loading}\r\n          >\r\n            {loading && <div className=\"spinner-border spinner-border-sm text-light mr-2\" role=\"status\" />} Login\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}