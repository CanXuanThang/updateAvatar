{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thang\\\\Downloads\\\\Code structure\\\\src\\\\modules\\\\auth\\\\components\\\\SignUpForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Controller, useForm } from 'react-hook-form';\nimport configureStore from '../../../redux/configureStore';\nimport { setLocale } from '../../intl/redux/intlReducer';\nimport { FormattedMessage } from 'react-intl';\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SignUpForm(props) {\n  _s();\n\n  var _errors$email, _errors$email2, _errors$password, _errors$password2, _errors$repeatPasswor, _errors$repeatPasswor2, _errors$name, _errors$gender, _errors$region, _errors$state;\n\n  const [passwordMatch, setPasswordMatch] = useState(true);\n  const {\n    onSignUp,\n    loading,\n    errorMessage,\n    locations,\n    states,\n    onChangeRegion\n  } = props;\n  const [showCityField, setShowCityField] = useState(false);\n  const [validate, setValidate] = useState();\n  const {\n    control,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    watch\n  } = useForm({\n    defaultValues: {\n      email: '',\n      password: '',\n      repeatPassword: '',\n      name: '',\n      gender: '',\n      region: '',\n      state: ''\n    }\n  });\n  const options = [{\n    label: 'Nam',\n    value: 'male'\n  }, {\n    label: 'Ná»¯',\n    value: 'female'\n  }, {\n    label: 'Bede',\n    value: 'bede'\n  }];\n  useEffect(() => {\n    const password = watch('password');\n    const repeatPassword = watch('repeatPassword');\n    const region = watch('region');\n\n    if (password && repeatPassword) {\n      setPasswordMatch(password === repeatPassword);\n    }\n\n    onChangeRegion(region);\n\n    if (region) {\n      setShowCityField(true);\n    }\n  }, [watch('password'), watch('repeatPassword'), watch('region')]);\n\n  const onSubmit = data => onSignUp(data);\n\n  const {\n    store\n  } = configureStore({});\n  const dispatch = useDispatch();\n\n  const changeLang = () => {\n    dispatch(setLocale('en'));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    className: \"row g-3 needs-validation\",\n    style: {\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    children: [!!errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      style: {\n        width: '100%'\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"inputEmail\",\n        className: \"form-label\",\n        children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"email\",\n        control: control,\n        rules: {\n          required: true,\n          pattern: /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/\n        },\n        render: ({\n          field\n        }) => /*#__PURE__*/_jsxDEV(\"input\", { ...field,\n          type: \"text\",\n          id: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-danger mt-2 d-block \",\n        style: {\n          fontSize: '14px'\n        },\n        children: [((_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.type) === 'required' && /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"emailRequire\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 49\n        }, this), ((_errors$email2 = errors.email) === null || _errors$email2 === void 0 ? void 0 : _errors$email2.type) === 'pattern' && /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"emailInvalid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 48\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"inputEmail\",\n        className: \"form-label\",\n        children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"password\",\n        control: control,\n        rules: {\n          required: true,\n          minLength: 4\n        },\n        render: ({\n          field\n        }) => /*#__PURE__*/_jsxDEV(\"input\", { ...field,\n          type: \"password\",\n          id: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-danger mt-2 d-block \",\n        style: {\n          fontSize: '14px'\n        },\n        children: [((_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.type) === 'required' && /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"passwordRequire\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 52\n        }, this), ((_errors$password2 = errors.password) === null || _errors$password2 === void 0 ? void 0 : _errors$password2.type) === 'minLength' && /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"minPasswordInvalid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 53\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"inputEmail\",\n        className: \"form-label\",\n        children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"repeatPassword\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"repeatPassword\",\n        control: control,\n        rules: {\n          required: true,\n          validate: value => value === watch('password')\n        },\n        render: ({\n          field\n        }) => /*#__PURE__*/_jsxDEV(\"input\", { ...field,\n          type: \"password\",\n          id: \"repeatPassword\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-danger mt-2 d-block \",\n        style: {\n          fontSize: '14px'\n        },\n        children: [((_errors$repeatPasswor = errors.repeatPassword) === null || _errors$repeatPasswor === void 0 ? void 0 : _errors$repeatPasswor.type) === 'required' && /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"passwordRequire\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 58\n        }, this), ((_errors$repeatPasswor2 = errors.repeatPassword) === null || _errors$repeatPasswor2 === void 0 ? void 0 : _errors$repeatPasswor2.type) === 'validate' && /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"matchPasswordInvalid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 58\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"inputEmail\",\n        className: \"form-label\",\n        children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"name\",\n        control: control,\n        rules: {\n          required: true\n        },\n        render: ({\n          field\n        }) => /*#__PURE__*/_jsxDEV(\"input\", { ...field,\n          type: \"text \",\n          id: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-danger mt-2 d-block \",\n        style: {\n          fontSize: '14px'\n        },\n        children: ((_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.type) === 'required' && /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"nameRequire\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"inputEmail\",\n        className: \"form-label\",\n        children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"gender\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"gender\",\n        control: control,\n        rules: {\n          required: true\n        },\n        render: ({\n          field: {\n            onChange,\n            value\n          }\n        }) => /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: onChange,\n          value: value,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"-- Vui l\\xF2ng ch\\u1ECDn gi\\u1EDBi t\\xEDnh --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this), options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option.value,\n            children: option.label\n          }, option.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-danger mt-2 d-block \",\n        style: {\n          fontSize: '14px'\n        },\n        children: ((_errors$gender = errors.gender) === null || _errors$gender === void 0 ? void 0 : _errors$gender.type) === 'required' && /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"genderRequire\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"inputEmail\",\n        className: \"form-label\",\n        children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"region\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"region\",\n        control: control,\n        rules: {\n          required: true\n        },\n        render: ({\n          field: {\n            onChange,\n            value\n          }\n        }) => /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: onChange,\n          value: value,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"-- Vui l\\xF2ng ch\\u1ECDn qu\\u1ED1c gia --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this), locations.map((location, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: index + 1,\n            children: location.name\n          }, location.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-danger mt-2 d-block \",\n        style: {\n          fontSize: '14px'\n        },\n        children: ((_errors$region = errors.region) === null || _errors$region === void 0 ? void 0 : _errors$region.type) === 'required' && /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"regionRequire\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), showCityField && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"inputEmail\",\n        className: \"form-label\",\n        children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"state\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"state\",\n        control: control,\n        rules: {\n          required: 'Vui lÃ²ng chá»n quá»c gia'\n        },\n        render: ({\n          field: {\n            onChange,\n            value\n          }\n        }) => /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: onChange,\n          value: value,\n          children: states.map((state, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: index,\n            children: state.name\n          }, state.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-danger mt-2 d-block \",\n        style: {\n          fontSize: '14px'\n        },\n        children: ((_errors$state = errors.state) === null || _errors$state === void 0 ? void 0 : _errors$state.type) === 'required' && /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"stateRequire\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 51\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-md-center\",\n      style: {\n        margin: '16px 0'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-auto d-flex\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary me-3\",\n          type: \"submit\",\n          style: {\n            minWidth: '160px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center'\n          },\n          disabled: loading,\n          children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spinner-border spinner-border-sm text-light mr-2\",\n            role: \"status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 25\n          }, this), \" \\u0110\\u0103ng k\\xFD\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: changeLang,\n      children: \"tran\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignUpForm, \"shwszAGkEyGzAC0/KOfj+mF5ffo=\", false, function () {\n  return [useForm, useDispatch];\n});\n\n_c = SignUpForm;\nexport default SignUpForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpForm\");","map":{"version":3,"sources":["C:/Users/thang/Downloads/Code structure/src/modules/auth/components/SignUpForm.tsx"],"names":["useEffect","useState","Controller","useForm","configureStore","setLocale","FormattedMessage","useDispatch","SignUpForm","props","passwordMatch","setPasswordMatch","onSignUp","loading","errorMessage","locations","states","onChangeRegion","showCityField","setShowCityField","validate","setValidate","control","handleSubmit","formState","errors","watch","defaultValues","email","password","repeatPassword","name","gender","region","state","options","label","value","onSubmit","data","store","dispatch","changeLang","display","flexDirection","width","required","pattern","field","fontSize","type","minLength","onChange","map","option","location","index","id","margin","minWidth","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { Controller, SubmitHandler, useForm } from 'react-hook-form';\r\nimport { ILocationParams, ISignUpParams } from '../../../models/singup';\r\nimport configureStore from '../../../redux/configureStore';\r\nimport { setLocale } from '../../intl/redux/intlReducer';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { ILoginValidation } from '../../../models/auth';\r\nimport { useDispatch } from 'react-redux';\r\n\r\ninterface Props {\r\n  onSignUp(values: ISignUpParams): void;\r\n  loading: boolean;\r\n  errorMessage: string;\r\n  locations: Array<ILocationParams>;\r\n  states: Array<ILocationParams>;\r\n  onChangeRegion(idRegion: string): void;\r\n}\r\n\r\nfunction SignUpForm(props: Props) {\r\n  const [passwordMatch, setPasswordMatch] = useState(true);\r\n  const { onSignUp, loading, errorMessage, locations, states, onChangeRegion } = props;\r\n  const [showCityField, setShowCityField] = useState(false);\r\n  const [validate, setValidate] = useState<ILoginValidation>();\r\n\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    watch,\r\n  } = useForm<ISignUpParams>({\r\n    defaultValues: {\r\n      email: '',\r\n      password: '',\r\n      repeatPassword: '',\r\n      name: '',\r\n      gender: '',\r\n      region: '',\r\n      state: '',\r\n    },\r\n  });\r\n\r\n  const options = [\r\n    {\r\n      label: 'Nam',\r\n      value: 'male',\r\n    },\r\n    {\r\n      label: 'Ná»¯',\r\n      value: 'female',\r\n    },\r\n    {\r\n      label: 'Bede',\r\n      value: 'bede',\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const password = watch('password');\r\n    const repeatPassword = watch('repeatPassword');\r\n    const region = watch('region');\r\n    if (password && repeatPassword) {\r\n      setPasswordMatch(password === repeatPassword);\r\n    }\r\n    onChangeRegion(region);\r\n\r\n    if (region) {\r\n      setShowCityField(true);\r\n    }\r\n  }, [watch('password'), watch('repeatPassword'), watch('region')]);\r\n\r\n  const onSubmit: SubmitHandler<ISignUpParams> = (data) => onSignUp(data);\r\n\r\n  const { store } = configureStore({});\r\n  const dispatch = useDispatch();\r\n  const changeLang = () => {\r\n    dispatch(setLocale('en'));\r\n  };\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit(onSubmit)}\r\n      className=\"row g-3 needs-validation\"\r\n      style={{ display: 'flex', flexDirection: 'column' }}\r\n    >\r\n      {!!errorMessage && (\r\n        <div className=\"alert alert-danger\" role=\"alert\" style={{ width: '100%' }}>\r\n          {errorMessage}\r\n        </div>\r\n      )}\r\n      <div className=\"d-flex flex-column\">\r\n        <label htmlFor=\"inputEmail\" className=\"form-label\">\r\n          <FormattedMessage id=\"email\" />\r\n        </label>\r\n        <Controller\r\n          name=\"email\"\r\n          control={control}\r\n          rules={{\r\n            required: true,\r\n            pattern: /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/,\r\n          }}\r\n          render={({ field }) => <input {...field} type=\"text\" id=\"email\" />}\r\n        />\r\n        <span className=\"text-danger mt-2 d-block \" style={{ fontSize: '14px' }}>\r\n          {errors.email?.type === 'required' && <FormattedMessage id=\"emailRequire\" />}\r\n          {errors.email?.type === 'pattern' && <FormattedMessage id=\"emailInvalid\" />}\r\n        </span>\r\n      </div>\r\n      <div className=\"d-flex flex-column\">\r\n        <label htmlFor=\"inputEmail\" className=\"form-label\">\r\n          <FormattedMessage id=\"password\" />\r\n        </label>\r\n        <Controller\r\n          name=\"password\"\r\n          control={control}\r\n          rules={{\r\n            required: true,\r\n            minLength: 4,\r\n          }}\r\n          render={({ field }) => <input {...field} type=\"password\" id=\"password\" />}\r\n        />\r\n        <span className=\"text-danger mt-2 d-block \" style={{ fontSize: '14px' }}>\r\n          {errors.password?.type === 'required' && <FormattedMessage id=\"passwordRequire\" />}\r\n          {errors.password?.type === 'minLength' && <FormattedMessage id=\"minPasswordInvalid\" />}\r\n        </span>\r\n      </div>\r\n      <div className=\"d-flex flex-column\">\r\n        <label htmlFor=\"inputEmail\" className=\"form-label\">\r\n          <FormattedMessage id=\"repeatPassword\" />\r\n        </label>\r\n        <Controller\r\n          name=\"repeatPassword\"\r\n          control={control}\r\n          rules={{\r\n            required: true,\r\n            validate: (value) => value === watch('password'),\r\n          }}\r\n          render={({ field }) => <input {...field} type=\"password\" id=\"repeatPassword\" />}\r\n        />\r\n        <span className=\"text-danger mt-2 d-block \" style={{ fontSize: '14px' }}>\r\n          {errors.repeatPassword?.type === 'required' && <FormattedMessage id=\"passwordRequire\" />}\r\n          {errors.repeatPassword?.type === 'validate' && <FormattedMessage id=\"matchPasswordInvalid\" />}\r\n        </span>\r\n      </div>\r\n      <div className=\"d-flex flex-column\">\r\n        <label htmlFor=\"inputEmail\" className=\"form-label\">\r\n          <FormattedMessage id=\"name\" />\r\n        </label>\r\n        <Controller\r\n          name=\"name\"\r\n          control={control}\r\n          rules={{\r\n            required: true,\r\n          }}\r\n          render={({ field }) => <input {...field} type=\"text \" id=\"name\" />}\r\n        />\r\n        <span className=\"text-danger mt-2 d-block \" style={{ fontSize: '14px' }}>\r\n          {errors.name?.type === 'required' && <FormattedMessage id=\"nameRequire\" />}\r\n        </span>\r\n      </div>\r\n      <div className=\"d-flex flex-column\">\r\n        <label htmlFor=\"inputEmail\" className=\"form-label\">\r\n          <FormattedMessage id=\"gender\" />\r\n        </label>\r\n        <Controller\r\n          name=\"gender\"\r\n          control={control}\r\n          rules={{ required: true }}\r\n          render={({ field: { onChange, value } }) => (\r\n            <select onChange={onChange} value={value}>\r\n              <option>-- Vui lÃ²ng chá»n giá»i tÃ­nh --</option>\r\n              {options.map((option) => (\r\n                <option key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          )}\r\n        />\r\n        <span className=\"text-danger mt-2 d-block \" style={{ fontSize: '14px' }}>\r\n          {errors.gender?.type === 'required' && <FormattedMessage id=\"genderRequire\" />}\r\n        </span>\r\n      </div>\r\n      <div className=\"d-flex flex-column\">\r\n        <label htmlFor=\"inputEmail\" className=\"form-label\">\r\n          <FormattedMessage id=\"region\" />\r\n        </label>\r\n        <Controller\r\n          name=\"region\"\r\n          control={control}\r\n          rules={{ required: true }}\r\n          render={({ field: { onChange, value } }) => (\r\n            <select onChange={onChange} value={value}>\r\n              <option>-- Vui lÃ²ng chá»n quá»c gia --</option>\r\n              {locations.map((location: ILocationParams, index: number) => (\r\n                <option key={location.id} value={index + 1}>\r\n                  {location.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          )}\r\n        />\r\n        <span className=\"text-danger mt-2 d-block \" style={{ fontSize: '14px' }}>\r\n          {errors.region?.type === 'required' && <FormattedMessage id=\"regionRequire\" />}\r\n        </span>\r\n      </div>\r\n      {showCityField && (\r\n        <div className=\"d-flex flex-column\">\r\n          <label htmlFor=\"inputEmail\" className=\"form-label\">\r\n            <FormattedMessage id=\"state\" />\r\n          </label>\r\n          <Controller\r\n            name=\"state\"\r\n            control={control}\r\n            rules={{ required: 'Vui lÃ²ng chá»n quá»c gia' }}\r\n            render={({ field: { onChange, value } }) => (\r\n              <select onChange={onChange} value={value}>\r\n                {states.map((state: ILocationParams, index: number) => (\r\n                  <option key={state.id} value={index}>\r\n                    {state.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            )}\r\n          />\r\n          <span className=\"text-danger mt-2 d-block \" style={{ fontSize: '14px' }}>\r\n            {errors.state?.type === 'required' && <FormattedMessage id=\"stateRequire\" />}\r\n          </span>\r\n        </div>\r\n      )}\r\n      <div className=\"row justify-content-md-center\" style={{ margin: '16px 0' }}>\r\n        <div className=\"col-md-auto d-flex\">\r\n          <button\r\n            className=\"btn btn-primary me-3\"\r\n            type=\"submit\"\r\n            style={{ minWidth: '160px', display: 'flex', alignItems: 'center', justifyContent: 'center' }}\r\n            disabled={loading}\r\n          >\r\n            {loading && <div className=\"spinner-border spinner-border-sm text-light mr-2\" role=\"status\" />} ÄÄng kÃ½\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div onClick={changeLang}>tran</div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SignUpForm;\r\n"]},"metadata":{},"sourceType":"module"}