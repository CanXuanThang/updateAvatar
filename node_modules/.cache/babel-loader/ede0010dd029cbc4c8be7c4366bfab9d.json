{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thang\\\\Downloads\\\\Code structure\\\\src\\\\modules\\\\auth\\\\pages\\\\employeeManagement\\\\layouts\\\\table\\\\Table.tsx\",\n    _s = $RefreshSig$();\n\n// import { DataGrid, GridColDef } from '@mui/x-data-grid';\n// import axios from 'axios';\n// import { useEffect, useState } from 'react';\n// import { API_PATHS } from '../../../../../../configs/api';\n// import Cookies from 'js-cookie';\n// import { ACCESS_TOKEN_KEY } from '../../../../../../utils/constants';\n// import './Table.scss';\n// const columns: GridColDef[] = [\n//   { field: 'id', headerName: 'NIK', width: 95 },\n//   { field: 'name', headerName: 'Name', width: 150 },\n//   { field: 'gender', headerName: 'Gender', width: 70 },\n//   { field: 'card_number', headerName: 'Bank Card No.', width: 130 },\n//   { field: 'bank_account_no', headerName: 'Bank Account No.', width: 150 },\n//   { field: 'family_card_number', headerName: 'Family Card No.', width: 150 },\n//   { field: 'marriage_code', headerName: 'Marriage Status', width: 130 },\n//   { field: 'mother_name', headerName: 'Mother Name', width: 150 },\n//   { field: 'pob', headerName: 'Place of birth', width: 115 },\n//   { field: 'dob', headerName: 'Date of birth', width: 115 },\n//   { field: 'home_address_1', headerName: 'Home Address', width: 350 },\n//   { field: 'home_address_2', headerName: 'Home Address', width: 350 },\n//   { field: 'nc_id', headerName: 'National Card ID No.', width: 170 },\n//   { field: 'contract_start_date', headerName: 'Date Start', width: 90 },\n//   { field: 'first_contract_date', headerName: 'First Contract', width: 110 },\n//   { field: 'secound_contract_date', headerName: 'Secound Contract', width: 130 },\n//   { field: 'deleted_at', headerName: 'End Contract', width: 110 },\n//   { field: 'department_name', headerName: 'Department', width: 150 },\n//   { field: 'type', headerName: 'Employee Type', width: 120 },\n//   { field: 'basic_salary', headerName: 'Salary Rp.', width: 90 },\n//   { field: 'position_name', headerName: 'Position', width: 150 },\n//   { field: 'operational_allowance_paid', headerName: 'O/T Paid', width: 80 },\n//   { field: 'meal_allowance_paid', headerName: 'Meal paid', width: 90 },\n//   { field: 'meal_allowance', headerName: 'Meal Rp', width: 80 },\n//   { field: 'grade_name', headerName: 'Grading', width: 80 },\n// ];\n// export default function Table() {\n//   const [data, getData] = useState([]);\n//   useEffect(() => {\n//     axios\n//       .get(API_PATHS.getEmployee, {\n//         headers: {\n//           Authorization: 'Bearer ' + Cookies.get(ACCESS_TOKEN_KEY),\n//         },\n//       })\n//       .then((res) => getData(res.data.data.data))\n//       .catch((err) => console.log(err));\n//   }, []);\n//   console.log(data);\n//   const row = data.map((data: any) => {\n//     const first_contract_date = data.contracts.slice(0, 1);\n//     const secound_contract_date = data.contracts.slice(1, 2);\n//     return {\n//       id: data.staff_id,\n//       name: data.name,\n//       gender: data.gender,\n//       card_number: data.card_number,\n//       bank_account_no: data.bank_account_no,\n//       family_card_number: data.family_card_number,\n//       marriage_code: data.marriage_code,\n//       mother_name: data.mother_name,\n//       pob: data.pob,\n//       dob: data.dob,\n//       home_address_1: data.home_address_1,\n//       home_address2: data.home_address_2,\n//       nc_id: data.nc_id,\n//       contract_start_date: data.contract_start_date,\n//       first_contract_date: first_contract_date.map((item: any) => item.contract_date),\n//       secound_contract_date: secound_contract_date.map((item: any) => item.contract_date),\n//       deleted_at: data.deleted_at,\n//       department_name: data.department_name,\n//       type: data.type,\n//       basic_salary: data.basic_salary,\n//       position_name: data.position_name,\n//       operational_allowance_paid: data.operational_allowance_paid,\n//       meal_allowance_paid: data.meal_allowance_paid,\n//       meal_allowance: data.meal_allowance,\n//       grade_name: data.grade_name,\n//     };\n//   });\n//   console.log(row);\n//   return (\n//     <div style={{ maxHeight: 528, width: '100%', borderRadius: 12, background: '#fff' }}>\n//       <DataGrid\n//         rows={row}\n//         columns={columns}\n//         initialState={{\n//           pagination: {\n//             paginationModel: { page: 0, pageSize: 20 },\n//           },\n//         }}\n//         // pageSizeOptions={[5, 10]}\n//         checkboxSelection\n//       />\n//     </div>\n//   );\n// }\nimport * as React from 'react';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  id: 'name',\n  label: 'Name',\n  minWidth: 170\n}, {\n  id: 'code',\n  label: 'ISO\\u00a0Code',\n  minWidth: 100\n}, {\n  id: 'population',\n  label: 'Population',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toLocaleString('en-US')\n}, {\n  id: 'size',\n  label: 'Size\\u00a0(km\\u00b2)',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toLocaleString('en-US')\n}, {\n  id: 'density',\n  label: 'Density',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toFixed(2)\n}];\n\nfunction createData(name, code, population, size) {\n  const density = population / size;\n  return {\n    name,\n    code,\n    population,\n    size,\n    density\n  };\n}\n\nconst rows = [createData('India', 'IN', 1324171354, 3287263), createData('China', 'CN', 1403500365, 9596961), createData('Italy', 'IT', 60483973, 301340), createData('United States', 'US', 327167434, 9833520), createData('Canada', 'CA', 37602103, 9984670), createData('Australia', 'AU', 25475400, 7692024), createData('Germany', 'DE', 83019200, 357578), createData('Ireland', 'IE', 4857000, 70273), createData('Mexico', 'MX', 126577691, 1972550), createData('Japan', 'JP', 126317000, 377973), createData('France', 'FR', 67022000, 640679), createData('United Kingdom', 'GB', 67545757, 242495), createData('Russia', 'RU', 146793744, 17098246), createData('Nigeria', 'NG', 200962417, 923768), createData('Brazil', 'BR', 210147125, 8515767)];\nexport default function Tables() {\n  _s();\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      width: '100%',\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      sx: {\n        maxHeight: 440\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        stickyHeader: true,\n        \"aria-label\": \"sticky table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: column.align,\n              style: {\n                minWidth: column.minWidth\n              },\n              children: column.label\n            }, column.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              role: \"checkbox\",\n              tabIndex: -1,\n              children: columns.map(column => {\n                const value = row[column.id];\n                return /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: column.align,\n                  children: column.format && typeof value === 'number' ? column.format(value) : value\n                }, column.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 23\n                }, this);\n              })\n            }, row.code, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      rowsPerPageOptions: [10, 25, 100],\n      component: \"div\",\n      count: rows.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onPageChange: handleChangePage,\n      onRowsPerPageChange: handleChangeRowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Tables, \"65nbIEELuFY2eeUXbED/8VsHrEQ=\");\n\n_c = Tables;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tables\");","map":{"version":3,"sources":["C:/Users/thang/Downloads/Code structure/src/modules/auth/pages/employeeManagement/layouts/table/Table.tsx"],"names":["React","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","columns","id","label","minWidth","align","format","value","toLocaleString","toFixed","createData","name","code","population","size","density","rows","Tables","page","setPage","useState","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","width","overflow","maxHeight","map","column","slice","row","length"],"mappings":"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","sourcesContent":["// import { DataGrid, GridColDef } from '@mui/x-data-grid';\r\n// import axios from 'axios';\r\n// import { useEffect, useState } from 'react';\r\n// import { API_PATHS } from '../../../../../../configs/api';\r\n// import Cookies from 'js-cookie';\r\n// import { ACCESS_TOKEN_KEY } from '../../../../../../utils/constants';\r\n\r\n// import './Table.scss';\r\n\r\n// const columns: GridColDef[] = [\r\n//   { field: 'id', headerName: 'NIK', width: 95 },\r\n//   { field: 'name', headerName: 'Name', width: 150 },\r\n//   { field: 'gender', headerName: 'Gender', width: 70 },\r\n//   { field: 'card_number', headerName: 'Bank Card No.', width: 130 },\r\n//   { field: 'bank_account_no', headerName: 'Bank Account No.', width: 150 },\r\n//   { field: 'family_card_number', headerName: 'Family Card No.', width: 150 },\r\n//   { field: 'marriage_code', headerName: 'Marriage Status', width: 130 },\r\n//   { field: 'mother_name', headerName: 'Mother Name', width: 150 },\r\n//   { field: 'pob', headerName: 'Place of birth', width: 115 },\r\n//   { field: 'dob', headerName: 'Date of birth', width: 115 },\r\n//   { field: 'home_address_1', headerName: 'Home Address', width: 350 },\r\n//   { field: 'home_address_2', headerName: 'Home Address', width: 350 },\r\n//   { field: 'nc_id', headerName: 'National Card ID No.', width: 170 },\r\n//   { field: 'contract_start_date', headerName: 'Date Start', width: 90 },\r\n//   { field: 'first_contract_date', headerName: 'First Contract', width: 110 },\r\n//   { field: 'secound_contract_date', headerName: 'Secound Contract', width: 130 },\r\n//   { field: 'deleted_at', headerName: 'End Contract', width: 110 },\r\n//   { field: 'department_name', headerName: 'Department', width: 150 },\r\n//   { field: 'type', headerName: 'Employee Type', width: 120 },\r\n//   { field: 'basic_salary', headerName: 'Salary Rp.', width: 90 },\r\n//   { field: 'position_name', headerName: 'Position', width: 150 },\r\n//   { field: 'operational_allowance_paid', headerName: 'O/T Paid', width: 80 },\r\n//   { field: 'meal_allowance_paid', headerName: 'Meal paid', width: 90 },\r\n//   { field: 'meal_allowance', headerName: 'Meal Rp', width: 80 },\r\n//   { field: 'grade_name', headerName: 'Grading', width: 80 },\r\n// ];\r\n\r\n// export default function Table() {\r\n//   const [data, getData] = useState([]);\r\n//   useEffect(() => {\r\n//     axios\r\n//       .get(API_PATHS.getEmployee, {\r\n//         headers: {\r\n//           Authorization: 'Bearer ' + Cookies.get(ACCESS_TOKEN_KEY),\r\n//         },\r\n//       })\r\n//       .then((res) => getData(res.data.data.data))\r\n//       .catch((err) => console.log(err));\r\n//   }, []);\r\n\r\n//   console.log(data);\r\n\r\n//   const row = data.map((data: any) => {\r\n//     const first_contract_date = data.contracts.slice(0, 1);\r\n//     const secound_contract_date = data.contracts.slice(1, 2);\r\n\r\n//     return {\r\n//       id: data.staff_id,\r\n//       name: data.name,\r\n//       gender: data.gender,\r\n//       card_number: data.card_number,\r\n//       bank_account_no: data.bank_account_no,\r\n//       family_card_number: data.family_card_number,\r\n//       marriage_code: data.marriage_code,\r\n//       mother_name: data.mother_name,\r\n//       pob: data.pob,\r\n//       dob: data.dob,\r\n//       home_address_1: data.home_address_1,\r\n//       home_address2: data.home_address_2,\r\n//       nc_id: data.nc_id,\r\n//       contract_start_date: data.contract_start_date,\r\n//       first_contract_date: first_contract_date.map((item: any) => item.contract_date),\r\n//       secound_contract_date: secound_contract_date.map((item: any) => item.contract_date),\r\n//       deleted_at: data.deleted_at,\r\n//       department_name: data.department_name,\r\n//       type: data.type,\r\n//       basic_salary: data.basic_salary,\r\n//       position_name: data.position_name,\r\n//       operational_allowance_paid: data.operational_allowance_paid,\r\n//       meal_allowance_paid: data.meal_allowance_paid,\r\n//       meal_allowance: data.meal_allowance,\r\n//       grade_name: data.grade_name,\r\n//     };\r\n//   });\r\n\r\n//   console.log(row);\r\n\r\n//   return (\r\n//     <div style={{ maxHeight: 528, width: '100%', borderRadius: 12, background: '#fff' }}>\r\n//       <DataGrid\r\n//         rows={row}\r\n//         columns={columns}\r\n//         initialState={{\r\n//           pagination: {\r\n//             paginationModel: { page: 0, pageSize: 20 },\r\n//           },\r\n//         }}\r\n//         // pageSizeOptions={[5, 10]}\r\n//         checkboxSelection\r\n//       />\r\n//     </div>\r\n//   );\r\n// }\r\n\r\nimport * as React from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\n\r\ninterface Column {\r\n  id: 'name' | 'code' | 'population' | 'size' | 'density';\r\n  label: string;\r\n  minWidth?: number;\r\n  align?: 'right';\r\n  format?: (value: number) => string;\r\n}\r\n\r\nconst columns: readonly Column[] = [\r\n  { id: 'name', label: 'Name', minWidth: 170 },\r\n  { id: 'code', label: 'ISO\\u00a0Code', minWidth: 100 },\r\n  {\r\n    id: 'population',\r\n    label: 'Population',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value: number) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'size',\r\n    label: 'Size\\u00a0(km\\u00b2)',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value: number) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'density',\r\n    label: 'Density',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value: number) => value.toFixed(2),\r\n  },\r\n];\r\n\r\ninterface Data {\r\n  name: string;\r\n  code: string;\r\n  population: number;\r\n  size: number;\r\n  density: number;\r\n}\r\n\r\nfunction createData(name: string, code: string, population: number, size: number): Data {\r\n  const density = population / size;\r\n  return { name, code, population, size, density };\r\n}\r\n\r\nconst rows = [\r\n  createData('India', 'IN', 1324171354, 3287263),\r\n  createData('China', 'CN', 1403500365, 9596961),\r\n  createData('Italy', 'IT', 60483973, 301340),\r\n  createData('United States', 'US', 327167434, 9833520),\r\n  createData('Canada', 'CA', 37602103, 9984670),\r\n  createData('Australia', 'AU', 25475400, 7692024),\r\n  createData('Germany', 'DE', 83019200, 357578),\r\n  createData('Ireland', 'IE', 4857000, 70273),\r\n  createData('Mexico', 'MX', 126577691, 1972550),\r\n  createData('Japan', 'JP', 126317000, 377973),\r\n  createData('France', 'FR', 67022000, 640679),\r\n  createData('United Kingdom', 'GB', 67545757, 242495),\r\n  createData('Russia', 'RU', 146793744, 17098246),\r\n  createData('Nigeria', 'NG', 200962417, 923768),\r\n  createData('Brazil', 'BR', 210147125, 8515767),\r\n];\r\n\r\nexport default function Tables() {\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Paper sx={{ width: '100%', overflow: 'hidden' }}>\r\n      <TableContainer sx={{ maxHeight: 440 }}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n              return (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                  {columns.map((column) => {\r\n                    const value = row[column.id];\r\n                    return (\r\n                      <TableCell key={column.id} align={column.align}>\r\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}