{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"onClick\"];\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport MenuList from '@mui/material/MenuList';\nimport { isHideMenuKey, isTabKey } from '../../utils/keyboardUtils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridMenu } from '../menu/GridMenu';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridClasses } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const GridToolbarExportContainer = /*#__PURE__*/React.forwardRef(function GridToolbarExportContainer(props, ref) {\n  var _rootProps$slotProps;\n\n  const {\n    children,\n    onClick\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const buttonId = useId();\n  const menuId = useId();\n  const [open, setOpen] = React.useState(false);\n  const buttonRef = React.useRef(null);\n  const handleRef = useForkRef(ref, buttonRef);\n\n  const handleMenuOpen = event => {\n    setOpen(prevOpen => !prevOpen);\n    onClick == null ? void 0 : onClick(event);\n  };\n\n  const handleMenuClose = () => setOpen(false);\n\n  const handleListKeyDown = event => {\n    if (isTabKey(event.key)) {\n      event.preventDefault();\n    }\n\n    if (isHideMenuKey(event.key)) {\n      handleMenuClose();\n    }\n  };\n\n  const handleMenuClickAway = event => {\n    var _buttonRef$current;\n\n    if (buttonRef.current === event.target || // if user clicked on the icon\n    (_buttonRef$current = buttonRef.current) != null && _buttonRef$current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  if (children == null) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n      ref: handleRef,\n      size: \"small\",\n      startIcon: /*#__PURE__*/_jsx(rootProps.slots.exportIcon, {}),\n      \"aria-expanded\": open ? 'true' : undefined,\n      \"aria-label\": apiRef.current.getLocaleText('toolbarExportLabel'),\n      \"aria-haspopup\": \"menu\",\n      \"aria-labelledby\": menuId,\n      id: buttonId\n    }, other, {\n      onClick: handleMenuOpen\n    }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseButton, {\n      children: apiRef.current.getLocaleText('toolbarExport')\n    })), /*#__PURE__*/_jsx(GridMenu, {\n      open: open,\n      target: buttonRef.current,\n      onClickAway: handleMenuClickAway,\n      position: \"bottom-start\",\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: menuId,\n        className: gridClasses.menuList,\n        \"aria-labelledby\": buttonId,\n        onKeyDown: handleListKeyDown,\n        autoFocusItem: open,\n        children: React.Children.map(children, child => {\n          if (! /*#__PURE__*/React.isValidElement(child)) {\n            return child;\n          }\n\n          return /*#__PURE__*/React.cloneElement(child, {\n            hideMenu: handleMenuClose\n          });\n        })\n      })\n    })]\n  });\n});","map":{"version":3,"sources":["C:/Users/thang/Downloads/Code structure/node_modules/@mui/x-data-grid/components/toolbar/GridToolbarExportContainer.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","unstable_useId","useId","unstable_useForkRef","useForkRef","MenuList","isHideMenuKey","isTabKey","useGridApiContext","GridMenu","useGridRootProps","gridClasses","jsx","_jsx","jsxs","_jsxs","GridToolbarExportContainer","forwardRef","props","ref","_rootProps$slotProps","children","onClick","other","apiRef","rootProps","buttonId","menuId","open","setOpen","useState","buttonRef","useRef","handleRef","handleMenuOpen","event","prevOpen","handleMenuClose","handleListKeyDown","key","preventDefault","handleMenuClickAway","_buttonRef$current","current","target","contains","Fragment","slots","baseButton","size","startIcon","exportIcon","undefined","getLocaleText","id","slotProps","onClickAway","position","className","menuList","onKeyDown","autoFocusItem","Children","map","child","isValidElement","cloneElement","hideMenu"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"onClick\"];\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport MenuList from '@mui/material/MenuList';\nimport { isHideMenuKey, isTabKey } from '../../utils/keyboardUtils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridMenu } from '../menu/GridMenu';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridClasses } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const GridToolbarExportContainer = /*#__PURE__*/React.forwardRef(function GridToolbarExportContainer(props, ref) {\n  var _rootProps$slotProps;\n  const {\n      children,\n      onClick\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const buttonId = useId();\n  const menuId = useId();\n  const [open, setOpen] = React.useState(false);\n  const buttonRef = React.useRef(null);\n  const handleRef = useForkRef(ref, buttonRef);\n  const handleMenuOpen = event => {\n    setOpen(prevOpen => !prevOpen);\n    onClick == null ? void 0 : onClick(event);\n  };\n  const handleMenuClose = () => setOpen(false);\n  const handleListKeyDown = event => {\n    if (isTabKey(event.key)) {\n      event.preventDefault();\n    }\n    if (isHideMenuKey(event.key)) {\n      handleMenuClose();\n    }\n  };\n  const handleMenuClickAway = event => {\n    var _buttonRef$current;\n    if (buttonRef.current === event.target || // if user clicked on the icon\n    (_buttonRef$current = buttonRef.current) != null && _buttonRef$current.contains(event.target)) {\n      return;\n    }\n    setOpen(false);\n  };\n  if (children == null) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n      ref: handleRef,\n      size: \"small\",\n      startIcon: /*#__PURE__*/_jsx(rootProps.slots.exportIcon, {}),\n      \"aria-expanded\": open ? 'true' : undefined,\n      \"aria-label\": apiRef.current.getLocaleText('toolbarExportLabel'),\n      \"aria-haspopup\": \"menu\",\n      \"aria-labelledby\": menuId,\n      id: buttonId\n    }, other, {\n      onClick: handleMenuOpen\n    }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseButton, {\n      children: apiRef.current.getLocaleText('toolbarExport')\n    })), /*#__PURE__*/_jsx(GridMenu, {\n      open: open,\n      target: buttonRef.current,\n      onClickAway: handleMenuClickAway,\n      position: \"bottom-start\",\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: menuId,\n        className: gridClasses.menuList,\n        \"aria-labelledby\": buttonId,\n        onKeyDown: handleListKeyDown,\n        autoFocusItem: open,\n        children: React.Children.map(children, child => {\n          if (! /*#__PURE__*/React.isValidElement(child)) {\n            return child;\n          }\n          return /*#__PURE__*/React.cloneElement(child, {\n            hideMenu: handleMenuClose\n          });\n        })\n      })\n    })]\n  });\n});"]},"metadata":{},"sourceType":"module"}