{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { useGridApiEventHandler } from '../hooks/utils/useGridApiEventHandler';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass, gridClasses } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridDensityFactorSelector } from '../hooks/features/density/densitySelector';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CLIFF = 1;\nconst SLOP = 1.5;\n\nconst useUtilityClasses = ownerState => {\n  const {\n    scrollDirection,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['scrollArea', `scrollArea--${scrollDirection}`]\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridScrollAreaRawRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ScrollArea',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses['scrollArea--left']}`]: styles['scrollArea--left']\n  }, {\n    [`&.${gridClasses['scrollArea--right']}`]: styles['scrollArea--right']\n  }, styles.scrollArea]\n})(() => ({\n  position: 'absolute',\n  top: 0,\n  zIndex: 101,\n  width: 20,\n  bottom: 0,\n  [`&.${gridClasses['scrollArea--left']}`]: {\n    left: 0\n  },\n  [`&.${gridClasses['scrollArea--right']}`]: {\n    right: 0\n  }\n}));\n\nfunction GridScrollAreaRaw(props) {\n  const {\n    scrollDirection\n  } = props;\n  const rootRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const timeout = React.useRef();\n  const [dragging, setDragging] = React.useState(false);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const scrollPosition = React.useRef({\n    left: 0,\n    top: 0\n  });\n  const rootProps = useGridRootProps();\n\n  const ownerState = _extends({}, rootProps, {\n    scrollDirection\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const headerHeight = Math.floor(rootProps.columnHeaderHeight * densityFactor);\n  const handleScrolling = React.useCallback(newScrollPosition => {\n    scrollPosition.current = newScrollPosition;\n  }, []);\n  const handleDragOver = React.useCallback(event => {\n    let offset;\n\n    if (scrollDirection === 'left') {\n      offset = event.clientX - rootRef.current.getBoundingClientRect().right;\n    } else if (scrollDirection === 'right') {\n      offset = Math.max(1, event.clientX - rootRef.current.getBoundingClientRect().left);\n    } else {\n      throw new Error('MUI: Wrong drag direction');\n    }\n\n    offset = (offset - CLIFF) * SLOP + CLIFF;\n    clearTimeout(timeout.current); // Avoid freeze and inertia.\n\n    timeout.current = setTimeout(() => {\n      apiRef.current.scroll({\n        left: scrollPosition.current.left + offset,\n        top: scrollPosition.current.top\n      });\n    });\n  }, [scrollDirection, apiRef]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timeout.current);\n    };\n  }, []);\n  const toggleDragging = React.useCallback(() => {\n    setDragging(prevDragging => !prevDragging);\n  }, []);\n  useGridApiEventHandler(apiRef, 'scrollPositionChange', handleScrolling);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', toggleDragging);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', toggleDragging);\n  return dragging ? /*#__PURE__*/_jsx(GridScrollAreaRawRoot, {\n    ref: rootRef,\n    className: clsx(classes.root),\n    ownerState: ownerState,\n    onDragOver: handleDragOver,\n    style: {\n      height: headerHeight\n    }\n  }) : null;\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridScrollAreaRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  scrollDirection: PropTypes.oneOf(['left', 'right']).isRequired\n} : void 0;\nconst GridScrollArea = /*#__PURE__*/React.memo(GridScrollAreaRaw);\nexport { GridScrollArea };","map":{"version":3,"sources":["C:/Users/thang/Downloads/Code structure/node_modules/@mui/x-data-grid/components/GridScrollArea.js"],"names":["_extends","React","PropTypes","clsx","unstable_composeClasses","composeClasses","styled","useGridApiEventHandler","useGridApiContext","getDataGridUtilityClass","gridClasses","useGridRootProps","gridDensityFactorSelector","useGridSelector","jsx","_jsx","CLIFF","SLOP","useUtilityClasses","ownerState","scrollDirection","classes","slots","root","GridScrollAreaRawRoot","name","slot","overridesResolver","props","styles","scrollArea","position","top","zIndex","width","bottom","left","right","GridScrollAreaRaw","rootRef","useRef","apiRef","timeout","dragging","setDragging","useState","densityFactor","scrollPosition","rootProps","headerHeight","Math","floor","columnHeaderHeight","handleScrolling","useCallback","newScrollPosition","current","handleDragOver","event","offset","clientX","getBoundingClientRect","max","Error","clearTimeout","setTimeout","scroll","useEffect","toggleDragging","prevDragging","ref","className","onDragOver","style","height","process","env","NODE_ENV","propTypes","oneOf","isRequired","GridScrollArea","memo"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { useGridApiEventHandler } from '../hooks/utils/useGridApiEventHandler';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass, gridClasses } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridDensityFactorSelector } from '../hooks/features/density/densitySelector';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CLIFF = 1;\nconst SLOP = 1.5;\nconst useUtilityClasses = ownerState => {\n  const {\n    scrollDirection,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['scrollArea', `scrollArea--${scrollDirection}`]\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridScrollAreaRawRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ScrollArea',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses['scrollArea--left']}`]: styles['scrollArea--left']\n  }, {\n    [`&.${gridClasses['scrollArea--right']}`]: styles['scrollArea--right']\n  }, styles.scrollArea]\n})(() => ({\n  position: 'absolute',\n  top: 0,\n  zIndex: 101,\n  width: 20,\n  bottom: 0,\n  [`&.${gridClasses['scrollArea--left']}`]: {\n    left: 0\n  },\n  [`&.${gridClasses['scrollArea--right']}`]: {\n    right: 0\n  }\n}));\nfunction GridScrollAreaRaw(props) {\n  const {\n    scrollDirection\n  } = props;\n  const rootRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const timeout = React.useRef();\n  const [dragging, setDragging] = React.useState(false);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const scrollPosition = React.useRef({\n    left: 0,\n    top: 0\n  });\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, rootProps, {\n    scrollDirection\n  });\n  const classes = useUtilityClasses(ownerState);\n  const headerHeight = Math.floor(rootProps.columnHeaderHeight * densityFactor);\n  const handleScrolling = React.useCallback(newScrollPosition => {\n    scrollPosition.current = newScrollPosition;\n  }, []);\n  const handleDragOver = React.useCallback(event => {\n    let offset;\n    if (scrollDirection === 'left') {\n      offset = event.clientX - rootRef.current.getBoundingClientRect().right;\n    } else if (scrollDirection === 'right') {\n      offset = Math.max(1, event.clientX - rootRef.current.getBoundingClientRect().left);\n    } else {\n      throw new Error('MUI: Wrong drag direction');\n    }\n    offset = (offset - CLIFF) * SLOP + CLIFF;\n    clearTimeout(timeout.current);\n    // Avoid freeze and inertia.\n    timeout.current = setTimeout(() => {\n      apiRef.current.scroll({\n        left: scrollPosition.current.left + offset,\n        top: scrollPosition.current.top\n      });\n    });\n  }, [scrollDirection, apiRef]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timeout.current);\n    };\n  }, []);\n  const toggleDragging = React.useCallback(() => {\n    setDragging(prevDragging => !prevDragging);\n  }, []);\n  useGridApiEventHandler(apiRef, 'scrollPositionChange', handleScrolling);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', toggleDragging);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', toggleDragging);\n  return dragging ? /*#__PURE__*/_jsx(GridScrollAreaRawRoot, {\n    ref: rootRef,\n    className: clsx(classes.root),\n    ownerState: ownerState,\n    onDragOver: handleDragOver,\n    style: {\n      height: headerHeight\n    }\n  }) : null;\n}\nprocess.env.NODE_ENV !== \"production\" ? GridScrollAreaRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  scrollDirection: PropTypes.oneOf(['left', 'right']).isRequired\n} : void 0;\nconst GridScrollArea = /*#__PURE__*/React.memo(GridScrollAreaRaw);\nexport { GridScrollArea };"]},"metadata":{},"sourceType":"module"}