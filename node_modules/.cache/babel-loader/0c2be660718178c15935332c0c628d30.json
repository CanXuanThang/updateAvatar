{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thang\\\\Downloads\\\\Code structure\\\\src\\\\modules\\\\auth\\\\pages\\\\employeeManagement\\\\layouts\\\\options\\\\forms\\\\personalInfomation\\\\infoForm\\\\InfoForm1.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Grid, InputBase, Stack, Typography } from '@mui/material';\nimport { fields1 } from '../fileds';\nimport { FormattedMessage } from 'react-intl';\nimport InputDateTime from '../../InputDateTime';\nimport Selected from '../../../../selected/Selected';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction InfoForm1({\n  validate,\n  value,\n  setValue\n}) {\n  _s();\n\n  useEffect(() => {\n    setValue(value);\n  }, [value, setValue]);\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    direction: \"column\",\n    spacing: 2,\n    sx: {\n      flex: '1 1 0%',\n      paddingLeft: '20px',\n      paddingRight: '20px',\n      gap: '10px'\n    },\n    children: fields1.map((item, index) => /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      sx: {\n        '&:first-of-type': {\n          marginLeft: '0',\n          marginTop: 0\n        },\n        marginTop: '0 !important'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 5,\n        xl: 4,\n        sx: {\n          paddingLeft: '0 !important',\n          paddingTop: '0 !important',\n          display: 'flex',\n          alignItems: 'center',\n          marginTop: '0 !important'\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          gutterBottom: true,\n          sx: {\n            fontFamily: 'SVN-Sofia-Regular',\n            display: 'flex',\n            alignItems: 'center',\n            margin: 0,\n            fontSize: '16px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormattedMessage, {\n            id: item.field\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            component: \"span\",\n            sx: {\n              color: 'rgb(229, 72, 77)',\n              margin: 0\n            },\n            children: item.required\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 7,\n        xl: 8,\n        sx: {\n          paddingLeft: '0 !important',\n          paddingTop: '0 !important'\n        },\n        children: [item.field === 'dob' && /*#__PURE__*/_jsxDEV(InputDateTime, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 38\n        }, this), item.field === 'name' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(InputBase, {\n            sx: {\n              backgroundColor: !!(validate === null || validate === void 0 ? void 0 : validate.name) ? 'rgb(255, 239, 239)' : 'rgb(241, 243, 245)',\n              input: {\n                padding: '12px'\n              },\n              borderRadius: '6px',\n              width: '100%',\n              border: !!(validate === null || validate === void 0 ? void 0 : validate.name) ? '1px solid rgb(243, 174, 175)' : 'none'\n            },\n            value: item.field === 'name' && value.name,\n            onChange: e => setValue({ ...value,\n              name: e.target.value\n            }),\n            type: item.type ? 'text' : 'number'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this), !!(validate === null || validate === void 0 ? void 0 : validate.name) && /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-danger\",\n            children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: validate === null || validate === void 0 ? void 0 : validate.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this), item.field === 'ktp' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(InputBase, {\n            sx: {\n              backgroundColor: !!(validate === null || validate === void 0 ? void 0 : validate.ktp) ? 'rgb(255, 239, 239)' : 'rgb(241, 243, 245)',\n              border: !!(validate === null || validate === void 0 ? void 0 : validate.ktp) ? '1px solid rgb(243, 174, 175)' : 'none',\n              input: {\n                padding: '12px'\n              },\n              borderRadius: '6px',\n              width: '100%'\n            },\n            value: item.field === 'ktp' && value.ktp,\n            onChange: e => setValue({ ...value,\n              ktp: e.target.value\n            }),\n            type: item.type ? 'text' : 'number'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this), !!(validate === null || validate === void 0 ? void 0 : validate.ktp) && /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-danger\",\n            children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: validate === null || validate === void 0 ? void 0 : validate.ktp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this), item.field === 'ncId' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(InputBase, {\n            sx: {\n              backgroundColor: !!(validate === null || validate === void 0 ? void 0 : validate.ncId) ? 'rgb(255, 239, 239)' : 'rgb(241, 243, 245)',\n              input: {\n                padding: '12px'\n              },\n              borderRadius: '6px',\n              width: '100%',\n              border: !!(validate === null || validate === void 0 ? void 0 : validate.ncId) ? '1px solid rgb(243, 174, 175)' : 'none'\n            },\n            value: item.field === 'ncId' && value.ncId,\n            onChange: e => setValue({ ...value,\n              ncId: e.target.value\n            }),\n            type: item.type ? 'text' : 'number'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this), !!(validate === null || validate === void 0 ? void 0 : validate.ncId) && /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-danger\",\n            children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: validate === null || validate === void 0 ? void 0 : validate.ncId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this), item.input === 'input' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(InputBase, {\n            sx: {\n              backgroundColor: 'rgb(241, 243, 245)',\n              input: {\n                padding: '12px'\n              },\n              borderRadius: '6px',\n              width: '100%'\n            },\n            type: item.type ? 'text' : 'number'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }, this), item.input === 'selected' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Selected, {\n            defaultOption: \"Choose Gender\",\n            objectOption: ['Male', 'Female'],\n            setValue: setValue,\n            value: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 17\n          }, this), !!(validate === null || validate === void 0 ? void 0 : validate.gender) && /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-danger\",\n            children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: validate === null || validate === void 0 ? void 0 : validate.gender\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_s(InfoForm1, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = InfoForm1;\nexport default InfoForm1;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoForm1\");","map":{"version":3,"sources":["C:/Users/thang/Downloads/Code structure/src/modules/auth/pages/employeeManagement/layouts/options/forms/personalInfomation/infoForm/InfoForm1.tsx"],"names":["Box","Grid","InputBase","Stack","Typography","fields1","FormattedMessage","InputDateTime","Selected","useEffect","InfoForm1","validate","value","setValue","flex","paddingLeft","paddingRight","gap","map","item","index","marginLeft","marginTop","paddingTop","display","alignItems","fontFamily","margin","fontSize","field","color","required","backgroundColor","name","input","padding","borderRadius","width","border","e","target","type","ktp","ncId","gender"],"mappings":"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","sourcesContent":["import { Box, Grid, InputBase, Stack, Typography } from '@mui/material';\r\nimport { fields1 } from '../fileds';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport InputDateTime from '../../InputDateTime';\r\nimport Selected from '../../../../selected/Selected';\r\nimport { useEffect } from 'react';\r\n\r\ninterface Props {\r\n  validate: any;\r\n  value: any;\r\n  setValue: any;\r\n}\r\n\r\nfunction InfoForm1({ validate, value, setValue }: Props) {\r\n  useEffect(() => {\r\n    setValue(value);\r\n  }, [value, setValue]);\r\n  return (\r\n    <Stack\r\n      direction=\"column\"\r\n      spacing={2}\r\n      sx={{ flex: '1 1 0%', paddingLeft: '20px', paddingRight: '20px', gap: '10px' }}\r\n    >\r\n      {fields1.map((item: any, index: number) => (\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          key={index}\r\n          sx={{\r\n            '&:first-of-type': { marginLeft: '0', marginTop: 0 },\r\n            marginTop: '0 !important',\r\n          }}\r\n        >\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            md={5}\r\n            xl={4}\r\n            sx={{\r\n              paddingLeft: '0 !important',\r\n              paddingTop: '0 !important',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              marginTop: '0 !important',\r\n            }}\r\n          >\r\n            <Typography\r\n              variant=\"body2\"\r\n              gutterBottom\r\n              sx={{\r\n                fontFamily: 'SVN-Sofia-Regular',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                margin: 0,\r\n                fontSize: '16px',\r\n              }}\r\n            >\r\n              <FormattedMessage id={item.field} />\r\n              <Box component=\"span\" sx={{ color: 'rgb(229, 72, 77)', margin: 0 }}>\r\n                {item.required}\r\n              </Box>\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} md={7} xl={8} sx={{ paddingLeft: '0 !important', paddingTop: '0 !important' }}>\r\n            {item.field === 'dob' && <InputDateTime />}\r\n            {item.field === 'name' && (\r\n              <div>\r\n                <InputBase\r\n                  sx={{\r\n                    backgroundColor: !!validate?.name ? 'rgb(255, 239, 239)' : 'rgb(241, 243, 245)',\r\n                    input: { padding: '12px' },\r\n                    borderRadius: '6px',\r\n                    width: '100%',\r\n                    border: !!validate?.name ? '1px solid rgb(243, 174, 175)' : 'none',\r\n                  }}\r\n                  value={item.field === 'name' && value.name}\r\n                  onChange={(e) => setValue({ ...value, name: e.target.value })}\r\n                  type={item.type ? 'text' : 'number'}\r\n                />\r\n                {!!validate?.name && (\r\n                  <small className=\"text-danger\">\r\n                    <FormattedMessage id={validate?.name} />\r\n                  </small>\r\n                )}\r\n              </div>\r\n            )}\r\n            {item.field === 'ktp' && (\r\n              <div>\r\n                <InputBase\r\n                  sx={{\r\n                    backgroundColor: !!validate?.ktp ? 'rgb(255, 239, 239)' : 'rgb(241, 243, 245)',\r\n                    border: !!validate?.ktp ? '1px solid rgb(243, 174, 175)' : 'none',\r\n                    input: { padding: '12px' },\r\n                    borderRadius: '6px',\r\n                    width: '100%',\r\n                  }}\r\n                  value={item.field === 'ktp' && value.ktp}\r\n                  onChange={(e) => setValue({ ...value, ktp: e.target.value })}\r\n                  type={item.type ? 'text' : 'number'}\r\n                />\r\n                {!!validate?.ktp && (\r\n                  <small className=\"text-danger\">\r\n                    <FormattedMessage id={validate?.ktp} />\r\n                  </small>\r\n                )}\r\n              </div>\r\n            )}\r\n            {item.field === 'ncId' && (\r\n              <div>\r\n                <InputBase\r\n                  sx={{\r\n                    backgroundColor: !!validate?.ncId ? 'rgb(255, 239, 239)' : 'rgb(241, 243, 245)',\r\n                    input: { padding: '12px' },\r\n                    borderRadius: '6px',\r\n                    width: '100%',\r\n                    border: !!validate?.ncId ? '1px solid rgb(243, 174, 175)' : 'none',\r\n                  }}\r\n                  value={item.field === 'ncId' && value.ncId}\r\n                  onChange={(e) => setValue({ ...value, ncId: e.target.value })}\r\n                  type={item.type ? 'text' : 'number'}\r\n                />\r\n                {!!validate?.ncId && (\r\n                  <small className=\"text-danger\">\r\n                    <FormattedMessage id={validate?.ncId} />\r\n                  </small>\r\n                )}\r\n              </div>\r\n            )}\r\n            {item.input === 'input' && (\r\n              <div>\r\n                <InputBase\r\n                  sx={{\r\n                    backgroundColor: 'rgb(241, 243, 245)',\r\n                    input: { padding: '12px' },\r\n                    borderRadius: '6px',\r\n                    width: '100%',\r\n                  }}\r\n                  type={item.type ? 'text' : 'number'}\r\n                />\r\n              </div>\r\n            )}\r\n            {item.input === 'selected' && (\r\n              <div>\r\n                <Selected\r\n                  defaultOption=\"Choose Gender\"\r\n                  objectOption={['Male', 'Female']}\r\n                  setValue={setValue}\r\n                  value={value}\r\n                />\r\n                {!!validate?.gender && (\r\n                  <small className=\"text-danger\">\r\n                    <FormattedMessage id={validate?.gender} />\r\n                  </small>\r\n                )}\r\n              </div>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      ))}\r\n    </Stack>\r\n  );\r\n}\r\n\r\nexport default InfoForm1;\r\n"]},"metadata":{},"sourceType":"module"}