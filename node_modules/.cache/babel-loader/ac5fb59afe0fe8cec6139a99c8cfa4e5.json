{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thang\\\\Downloads\\\\Code structure\\\\src\\\\modules\\\\auth\\\\pages\\\\employeeManagement\\\\layouts\\\\options\\\\forms\\\\others\\\\OtherForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Chip, FormControl, Grid, MenuItem, Select, Stack, TextareaAutosize, Typography } from '@mui/material';\nimport MultipleSelectChip from './MultipleSelectChip';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setOtherForm } from '../../../../../../redux/employeeReducer';\nimport axios from 'axios';\nimport { API_PATHS } from '../../../../../../../../configs/api';\nimport Cookies from 'js-cookie';\nimport { ACCESS_TOKEN_KEY } from '../../../../../../../../utils/constants';\nimport { RESPONSE_STATUS_SUCCESS } from '../../../../../../../../utils/httpResponseCode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction OtherForm() {\n  _s();\n\n  const [formOther, setFormOther] = useState({\n    grade_id: '',\n    benefits: [],\n    remark: '',\n    grade: ''\n  });\n  const [grade, setGrade] = useState([]);\n  const dispatch = useDispatch();\n  const getGray = useCallback(async () => {\n    const json = await axios.get(API_PATHS.getGrade, {\n      headers: {\n        Authorization: 'Bearer ' + Cookies.get(ACCESS_TOKEN_KEY)\n      }\n    });\n\n    if (json.status === RESPONSE_STATUS_SUCCESS) {\n      setGrade(json.data.data);\n    }\n  }, []);\n  useEffect(() => {\n    getGray();\n  }, [getGray]);\n  useEffect(() => {\n    dispatch(setOtherForm(formOther));\n  }, [dispatch, formOther]);\n  useEffect(() => {\n    const selectedGrade = grade.find(option => formOther.grade_id === option.id);\n\n    if (selectedGrade) {\n      setFormOther({ ...formOther,\n        grade: selectedGrade\n      });\n    }\n  }, [formOther.grade_id, grade, setFormOther]);\n  console.log(formOther);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      component: \"form\",\n      direction: \"column\",\n      spacing: 2,\n      sx: {\n        paddingLeft: '20px',\n        paddingRight: '20px',\n        paddingBottom: '20px',\n        gap: '10px',\n        display: 'flex',\n        maxWidth: '560px',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 'row',\n        sx: {\n          '&:first-of-type': {\n            marginLeft: '0',\n            marginTop: 0\n          },\n          marginTop: '0 !important'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 5,\n          sx: {\n            paddingLeft: '0 !important',\n            paddingTop: '0 !important',\n            display: 'flex',\n            alignItems: 'center',\n            marginTop: '0 !important'\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            gutterBottom: true,\n            sx: {\n              fontFamily: 'SVN-Sofia-Regular',\n              display: 'flex',\n              alignItems: 'center',\n              margin: 0,\n              fontSize: '16px'\n            },\n            children: \"Grade\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 7,\n          sx: {\n            paddingLeft: '0 !important',\n            paddingTop: '0 !important'\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              minWidth: 120\n            },\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                value: formOther.grade_id,\n                onChange: e => setFormOther({ ...formOther,\n                  grade_id: e.target.value\n                }),\n                inputProps: {\n                  'aria-label': 'Without label'\n                },\n                sx: {\n                  background: '#f1f3f5',\n                  div: {\n                    padding: '12px'\n                  }\n                },\n                displayEmpty: true,\n                className: \"ip\",\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  id: \"menu-item-1\",\n                  children: /*#__PURE__*/_jsxDEV(\"em\", {\n                    style: {\n                      fontSize: '16px',\n                      fontFamily: 'SVN-Sofia-Regular',\n                      fontStyle: 'normal',\n                      color: 'rgb(104, 112, 118)'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 19\n                }, this), grade.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  className: \"menu-item\",\n                  value: option.id,\n                  children: option.name\n                }, option.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 'row',\n        sx: {\n          '&:first-of-type': {\n            marginLeft: '0',\n            marginTop: 0\n          },\n          marginTop: '0 !important'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 5,\n          sx: {\n            paddingLeft: '0 !important',\n            paddingTop: '0 !important',\n            display: 'flex',\n            alignItems: 'center',\n            marginTop: '0 !important'\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            gutterBottom: true,\n            sx: {\n              fontFamily: 'SVN-Sofia-Regular',\n              display: 'flex',\n              alignItems: 'center',\n              margin: 0,\n              fontSize: '16px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 7,\n          sx: {\n            paddingLeft: '0 !important',\n            paddingTop: '0 !important'\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              minWidth: 120\n            },\n            children: grade.map(option => {\n              if (formOther.grade_id === option.id) {\n                const benefits = option.benefits;\n                return benefits.map(benefit => /*#__PURE__*/_jsxDEV(Chip, {\n                  label: benefit.name,\n                  sx: {\n                    margin: '1px 5px',\n                    borderRadius: '6px',\n                    height: '24px',\n                    fontFamily: 'SVN-Sofia-Regular',\n                    color: 'rgb(104, 112, 118)'\n                  }\n                }, benefit.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 21\n                }, this));\n              } else {\n                return null;\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 'row',\n        sx: {\n          '&:first-of-type': {\n            marginLeft: '0',\n            marginTop: 0\n          },\n          marginTop: '0 !important'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 5,\n          sx: {\n            paddingLeft: '0 !important',\n            paddingTop: '0 !important',\n            display: 'flex',\n            alignItems: 'center',\n            marginTop: '0 !important'\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            gutterBottom: true,\n            sx: {\n              fontFamily: 'SVN-Sofia-Regular',\n              display: 'flex',\n              alignItems: 'center',\n              margin: 0,\n              fontSize: '16px'\n            },\n            children: \"Benefit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 7,\n          sx: {\n            paddingLeft: '0 !important',\n            paddingTop: '0 !important'\n          },\n          children: /*#__PURE__*/_jsxDEV(MultipleSelectChip, {\n            listBenefit: formOther,\n            setListBenefit: setFormOther\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 'row',\n        sx: {\n          '&:first-of-type': {\n            marginLeft: '0',\n            marginTop: 0\n          },\n          marginTop: '0 !important'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 5,\n          sx: {\n            paddingLeft: '0 !important',\n            paddingTop: '0 !important',\n            display: 'flex',\n            alignItems: 'center',\n            marginTop: '0 !important'\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            gutterBottom: true,\n            sx: {\n              fontFamily: 'SVN-Sofia-Regular',\n              display: 'flex',\n              alignItems: 'center',\n              margin: 0,\n              fontSize: '16px'\n            },\n            children: \"Remark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 7,\n          sx: {\n            paddingLeft: '0 !important',\n            paddingTop: '0 !important'\n          },\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            variant: \"filled\",\n            sx: {\n              textarea: {\n                resize: 'none',\n                padding: '17px 16px',\n                borderRadius: '6px',\n                backgroundColor: 'rgb(241, 243, 245)',\n                border: 'none',\n                outline: 'none'\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n              minRows: 2,\n              \"aria-invalid\": \"false\",\n              value: formOther.remark,\n              onChange: e => setFormOther({ ...formOther,\n                remark: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 'row',\n        sx: {\n          '&:first-of-type': {\n            marginLeft: '0',\n            marginTop: 0\n          },\n          marginTop: '0 !important'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 5,\n          sx: {\n            paddingLeft: '0 !important',\n            paddingTop: '0 !important',\n            display: 'flex',\n            alignItems: 'center',\n            marginTop: '0 !important'\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            gutterBottom: true,\n            sx: {\n              fontFamily: 'SVN-Sofia-Regular',\n              display: 'flex',\n              alignItems: 'center',\n              margin: 0,\n              fontSize: '16px'\n            },\n            children: \"HRM User Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 7,\n          sx: {\n            paddingLeft: '0 !important',\n            paddingTop: '0 !important'\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              minWidth: 120\n            },\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                defaultValue: \"\",\n                inputProps: {\n                  'aria-label': 'Without label'\n                },\n                sx: {\n                  backgroundColor: 'rgba(0, 0, 0, 0.12)',\n                  div: {\n                    padding: '12px'\n                  }\n                },\n                displayEmpty: true,\n                className: \"ip\",\n                disabled: true,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  id: \"menu-item-1\",\n                  children: /*#__PURE__*/_jsxDEV(\"em\", {\n                    style: {\n                      fontSize: '16px',\n                      fontFamily: 'SVN-Sofia-Regular',\n                      fontStyle: 'normal',\n                      color: 'rgb(104, 112, 118)'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 318,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 19\n                }, this), [].map((option, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  className: \"menu-item\",\n                  value: option,\n                  children: option\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(OtherForm, \"oKYokWEeGkSEDshTUHVNctXsGNI=\", false, function () {\n  return [useDispatch];\n});\n\n_c = OtherForm;\nexport default OtherForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"OtherForm\");","map":{"version":3,"sources":["C:/Users/thang/Downloads/Code structure/src/modules/auth/pages/employeeManagement/layouts/options/forms/others/OtherForm.tsx"],"names":["Box","Chip","FormControl","Grid","MenuItem","Select","Stack","TextareaAutosize","Typography","MultipleSelectChip","useCallback","useEffect","useState","useDispatch","setOtherForm","axios","API_PATHS","Cookies","ACCESS_TOKEN_KEY","RESPONSE_STATUS_SUCCESS","OtherForm","formOther","setFormOther","grade_id","benefits","remark","grade","setGrade","dispatch","getGray","json","get","getGrade","headers","Authorization","status","data","selectedGrade","find","option","id","console","log","paddingLeft","paddingRight","paddingBottom","gap","display","maxWidth","width","marginLeft","marginTop","paddingTop","alignItems","fontFamily","margin","fontSize","minWidth","e","target","value","background","div","padding","fontStyle","color","map","name","benefit","borderRadius","height","textarea","resize","backgroundColor","border","outline","index"],"mappings":"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","sourcesContent":["import { Box, Chip, FormControl, Grid, MenuItem, Select, Stack, TextareaAutosize, Typography } from '@mui/material';\r\nimport MultipleSelectChip from './MultipleSelectChip';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { ThunkDispatch } from 'redux-thunk';\r\nimport { AppState } from '../../../../../../../../redux/reducer';\r\nimport { Action } from 'typesafe-actions';\r\nimport { setOtherForm } from '../../../../../../redux/employeeReducer';\r\nimport axios from 'axios';\r\nimport { API_PATHS } from '../../../../../../../../configs/api';\r\nimport Cookies from 'js-cookie';\r\nimport { ACCESS_TOKEN_KEY } from '../../../../../../../../utils/constants';\r\nimport { RESPONSE_STATUS_SUCCESS } from '../../../../../../../../utils/httpResponseCode';\r\n\r\nfunction OtherForm() {\r\n  const [formOther, setFormOther] = useState<any>({\r\n    grade_id: '',\r\n    benefits: [],\r\n    remark: '',\r\n    grade: '',\r\n  });\r\n  const [grade, setGrade] = useState<any>([]);\r\n  const dispatch = useDispatch<ThunkDispatch<AppState, null, Action<string>>>();\r\n\r\n  const getGray = useCallback(async () => {\r\n    const json = await axios.get(API_PATHS.getGrade, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + Cookies.get(ACCESS_TOKEN_KEY),\r\n      },\r\n    });\r\n    if (json.status === RESPONSE_STATUS_SUCCESS) {\r\n      setGrade(json.data.data);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getGray();\r\n  }, [getGray]);\r\n\r\n  useEffect(() => {\r\n    dispatch(setOtherForm(formOther));\r\n  }, [dispatch, formOther]);\r\n\r\n  useEffect(() => {\r\n    const selectedGrade = grade.find((option: any) => formOther.grade_id === option.id);\r\n    if (selectedGrade) {\r\n      setFormOther({ ...formOther, grade: selectedGrade });\r\n    }\r\n  }, [formOther.grade_id, grade, setFormOther]);\r\n\r\n  console.log(formOther);\r\n\r\n  return (\r\n    <Box>\r\n      <Stack\r\n        component=\"form\"\r\n        direction=\"column\"\r\n        spacing={2}\r\n        sx={{\r\n          paddingLeft: '20px',\r\n          paddingRight: '20px',\r\n          paddingBottom: '20px',\r\n          gap: '10px',\r\n          display: 'flex',\r\n          maxWidth: '560px',\r\n          width: '100%',\r\n        }}\r\n      >\r\n        <Grid\r\n          container\r\n          spacing={'row'}\r\n          sx={{ '&:first-of-type': { marginLeft: '0', marginTop: 0 }, marginTop: '0 !important' }}\r\n        >\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            md={5}\r\n            sx={{\r\n              paddingLeft: '0 !important',\r\n              paddingTop: '0 !important',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              marginTop: '0 !important',\r\n            }}\r\n          >\r\n            <Typography\r\n              variant=\"body2\"\r\n              gutterBottom\r\n              sx={{\r\n                fontFamily: 'SVN-Sofia-Regular',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                margin: 0,\r\n                fontSize: '16px',\r\n              }}\r\n            >\r\n              Grade\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} md={7} sx={{ paddingLeft: '0 !important', paddingTop: '0 !important' }}>\r\n            <Box sx={{ minWidth: 120 }}>\r\n              <FormControl fullWidth>\r\n                <Select\r\n                  value={formOther.grade_id}\r\n                  onChange={(e) => setFormOther({ ...formOther, grade_id: e.target.value })}\r\n                  inputProps={{ 'aria-label': 'Without label' }}\r\n                  sx={{ background: '#f1f3f5', div: { padding: '12px' } }}\r\n                  displayEmpty\r\n                  className=\"ip\"\r\n                >\r\n                  <MenuItem value=\"\" id=\"menu-item-1\">\r\n                    <em\r\n                      style={{\r\n                        fontSize: '16px',\r\n                        fontFamily: 'SVN-Sofia-Regular',\r\n                        fontStyle: 'normal',\r\n                        color: 'rgb(104, 112, 118)',\r\n                      }}\r\n                    ></em>\r\n                  </MenuItem>\r\n                  {grade.map((option: any) => (\r\n                    <MenuItem key={option.id} className=\"menu-item\" value={option.id}>\r\n                      {option.name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          spacing={'row'}\r\n          sx={{ '&:first-of-type': { marginLeft: '0', marginTop: 0 }, marginTop: '0 !important' }}\r\n        >\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            md={5}\r\n            sx={{\r\n              paddingLeft: '0 !important',\r\n              paddingTop: '0 !important',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              marginTop: '0 !important',\r\n            }}\r\n          >\r\n            <Typography\r\n              variant=\"body2\"\r\n              gutterBottom\r\n              sx={{\r\n                fontFamily: 'SVN-Sofia-Regular',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                margin: 0,\r\n                fontSize: '16px',\r\n              }}\r\n            ></Typography>\r\n          </Grid>\r\n          <Grid item xs={12} md={7} sx={{ paddingLeft: '0 !important', paddingTop: '0 !important' }}>\r\n            <Box sx={{ minWidth: 120 }}>\r\n              {grade.map((option: any) => {\r\n                if (formOther.grade_id === option.id) {\r\n                  const benefits = option.benefits;\r\n                  return benefits.map((benefit: any) => (\r\n                    <Chip\r\n                      label={benefit.name}\r\n                      key={benefit.id}\r\n                      sx={{\r\n                        margin: '1px 5px',\r\n                        borderRadius: '6px',\r\n                        height: '24px',\r\n                        fontFamily: 'SVN-Sofia-Regular',\r\n                        color: 'rgb(104, 112, 118)',\r\n                      }}\r\n                    />\r\n                  ));\r\n                } else {\r\n                  return null;\r\n                }\r\n              })}\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          spacing={'row'}\r\n          sx={{ '&:first-of-type': { marginLeft: '0', marginTop: 0 }, marginTop: '0 !important' }}\r\n        >\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            md={5}\r\n            sx={{\r\n              paddingLeft: '0 !important',\r\n              paddingTop: '0 !important',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              marginTop: '0 !important',\r\n            }}\r\n          >\r\n            <Typography\r\n              variant=\"body2\"\r\n              gutterBottom\r\n              sx={{\r\n                fontFamily: 'SVN-Sofia-Regular',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                margin: 0,\r\n                fontSize: '16px',\r\n              }}\r\n            >\r\n              Benefit\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} md={7} sx={{ paddingLeft: '0 !important', paddingTop: '0 !important' }}>\r\n            <MultipleSelectChip listBenefit={formOther} setListBenefit={setFormOther} />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          spacing={'row'}\r\n          sx={{ '&:first-of-type': { marginLeft: '0', marginTop: 0 }, marginTop: '0 !important' }}\r\n        >\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            md={5}\r\n            sx={{\r\n              paddingLeft: '0 !important',\r\n              paddingTop: '0 !important',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              marginTop: '0 !important',\r\n            }}\r\n          >\r\n            <Typography\r\n              variant=\"body2\"\r\n              gutterBottom\r\n              sx={{\r\n                fontFamily: 'SVN-Sofia-Regular',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                margin: 0,\r\n                fontSize: '16px',\r\n              }}\r\n            >\r\n              Remark\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} md={7} sx={{ paddingLeft: '0 !important', paddingTop: '0 !important' }}>\r\n            <FormControl\r\n              fullWidth\r\n              variant=\"filled\"\r\n              sx={{\r\n                textarea: {\r\n                  resize: 'none',\r\n                  padding: '17px 16px',\r\n                  borderRadius: '6px',\r\n                  backgroundColor: 'rgb(241, 243, 245)',\r\n                  border: 'none',\r\n                  outline: 'none',\r\n                },\r\n              }}\r\n            >\r\n              <TextareaAutosize\r\n                minRows={2}\r\n                aria-invalid=\"false\"\r\n                value={formOther.remark}\r\n                onChange={(e) => setFormOther({ ...formOther, remark: e.target.value })}\r\n              />\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          spacing={'row'}\r\n          sx={{ '&:first-of-type': { marginLeft: '0', marginTop: 0 }, marginTop: '0 !important' }}\r\n        >\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            md={5}\r\n            sx={{\r\n              paddingLeft: '0 !important',\r\n              paddingTop: '0 !important',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              marginTop: '0 !important',\r\n            }}\r\n          >\r\n            <Typography\r\n              variant=\"body2\"\r\n              gutterBottom\r\n              sx={{\r\n                fontFamily: 'SVN-Sofia-Regular',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                margin: 0,\r\n                fontSize: '16px',\r\n              }}\r\n            >\r\n              HRM User Account\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} md={7} sx={{ paddingLeft: '0 !important', paddingTop: '0 !important' }}>\r\n            <Box sx={{ minWidth: 120 }}>\r\n              <FormControl fullWidth>\r\n                <Select\r\n                  defaultValue=\"\"\r\n                  inputProps={{ 'aria-label': 'Without label' }}\r\n                  sx={{ backgroundColor: 'rgba(0, 0, 0, 0.12)', div: { padding: '12px' } }}\r\n                  displayEmpty\r\n                  className=\"ip\"\r\n                  disabled\r\n                >\r\n                  <MenuItem value=\"\" id=\"menu-item-1\">\r\n                    <em\r\n                      style={{\r\n                        fontSize: '16px',\r\n                        fontFamily: 'SVN-Sofia-Regular',\r\n                        fontStyle: 'normal',\r\n                        color: 'rgb(104, 112, 118)',\r\n                      }}\r\n                    ></em>\r\n                  </MenuItem>\r\n                  {[].map((option: string, index: number) => (\r\n                    <MenuItem key={index} className=\"menu-item\" value={option}>\r\n                      {option}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default OtherForm;\r\n"]},"metadata":{},"sourceType":"module"}