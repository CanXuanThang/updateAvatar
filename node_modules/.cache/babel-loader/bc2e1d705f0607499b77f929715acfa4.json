{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { HTMLElementType } from '@mui/utils';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { GridMenu } from '../GridMenu';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction GridColumnHeaderMenu({\n  columnMenuId,\n  columnMenuButtonId,\n  ContentComponent,\n  contentComponentProps,\n  field,\n  open,\n  target,\n  onExited\n}) {\n  const apiRef = useGridApiContext();\n  const colDef = apiRef.current.getColumn(field);\n  const hideMenu = React.useCallback(event => {\n    // Prevent triggering the sorting\n    event.stopPropagation();\n\n    if (!(target != null && target.contains(event.target))) {\n      apiRef.current.hideColumnMenu();\n    }\n  }, [apiRef, target]);\n\n  if (!target) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(GridMenu, {\n    placement: `bottom-${colDef.align === 'right' ? 'start' : 'end'}`,\n    open: open,\n    target: target,\n    onClickAway: hideMenu,\n    onExited: onExited,\n    children: /*#__PURE__*/_jsx(ContentComponent, _extends({\n      colDef: colDef,\n      hideMenu: hideMenu,\n      open: open,\n      id: columnMenuId,\n      labelledby: columnMenuButtonId\n    }, contentComponentProps))\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnMenuButtonId: PropTypes.string,\n  columnMenuId: PropTypes.string,\n  ContentComponent: PropTypes.elementType.isRequired,\n  contentComponentProps: PropTypes.any,\n  field: PropTypes.string.isRequired,\n  onExited: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n  target: HTMLElementType\n} : void 0;\nexport { GridColumnHeaderMenu };","map":{"version":3,"sources":["C:/Users/thang/Downloads/Code structure/node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnHeaderMenu.js"],"names":["_extends","React","PropTypes","HTMLElementType","useGridApiContext","GridMenu","jsx","_jsx","GridColumnHeaderMenu","columnMenuId","columnMenuButtonId","ContentComponent","contentComponentProps","field","open","target","onExited","apiRef","colDef","current","getColumn","hideMenu","useCallback","event","stopPropagation","contains","hideColumnMenu","placement","align","onClickAway","children","id","labelledby","process","env","NODE_ENV","propTypes","string","elementType","isRequired","any","func","bool"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,eAAT,QAAgC,YAAhC;AACA,SAASC,iBAAT,QAAkC,wCAAlC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;;AACA,SAASC,oBAAT,CAA8B;AAC5BC,EAAAA,YAD4B;AAE5BC,EAAAA,kBAF4B;AAG5BC,EAAAA,gBAH4B;AAI5BC,EAAAA,qBAJ4B;AAK5BC,EAAAA,KAL4B;AAM5BC,EAAAA,IAN4B;AAO5BC,EAAAA,MAP4B;AAQ5BC,EAAAA;AAR4B,CAA9B,EASG;AACD,QAAMC,MAAM,GAAGb,iBAAiB,EAAhC;AACA,QAAMc,MAAM,GAAGD,MAAM,CAACE,OAAP,CAAeC,SAAf,CAAyBP,KAAzB,CAAf;AACA,QAAMQ,QAAQ,GAAGpB,KAAK,CAACqB,WAAN,CAAkBC,KAAK,IAAI;AAC1C;AACAA,IAAAA,KAAK,CAACC,eAAN;;AACA,QAAI,EAAET,MAAM,IAAI,IAAV,IAAkBA,MAAM,CAACU,QAAP,CAAgBF,KAAK,CAACR,MAAtB,CAApB,CAAJ,EAAwD;AACtDE,MAAAA,MAAM,CAACE,OAAP,CAAeO,cAAf;AACD;AACF,GANgB,EAMd,CAACT,MAAD,EAASF,MAAT,CANc,CAAjB;;AAOA,MAAI,CAACA,MAAL,EAAa;AACX,WAAO,IAAP;AACD;;AACD,SAAO,aAAaR,IAAI,CAACF,QAAD,EAAW;AACjCsB,IAAAA,SAAS,EAAG,UAAST,MAAM,CAACU,KAAP,KAAiB,OAAjB,GAA2B,OAA3B,GAAqC,KAAM,EAD/B;AAEjCd,IAAAA,IAAI,EAAEA,IAF2B;AAGjCC,IAAAA,MAAM,EAAEA,MAHyB;AAIjCc,IAAAA,WAAW,EAAER,QAJoB;AAKjCL,IAAAA,QAAQ,EAAEA,QALuB;AAMjCc,IAAAA,QAAQ,EAAE,aAAavB,IAAI,CAACI,gBAAD,EAAmBX,QAAQ,CAAC;AACrDkB,MAAAA,MAAM,EAAEA,MAD6C;AAErDG,MAAAA,QAAQ,EAAEA,QAF2C;AAGrDP,MAAAA,IAAI,EAAEA,IAH+C;AAIrDiB,MAAAA,EAAE,EAAEtB,YAJiD;AAKrDuB,MAAAA,UAAU,EAAEtB;AALyC,KAAD,EAMnDE,qBANmD,CAA3B;AANM,GAAX,CAAxB;AAcD;;AACDqB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC3B,oBAAoB,CAAC4B,SAArB,GAAiC;AACvE;AACA;AACA;AACA;AACA1B,EAAAA,kBAAkB,EAAER,SAAS,CAACmC,MALyC;AAMvE5B,EAAAA,YAAY,EAAEP,SAAS,CAACmC,MAN+C;AAOvE1B,EAAAA,gBAAgB,EAAET,SAAS,CAACoC,WAAV,CAAsBC,UAP+B;AAQvE3B,EAAAA,qBAAqB,EAAEV,SAAS,CAACsC,GARsC;AASvE3B,EAAAA,KAAK,EAAEX,SAAS,CAACmC,MAAV,CAAiBE,UAT+C;AAUvEvB,EAAAA,QAAQ,EAAEd,SAAS,CAACuC,IAVmD;AAWvE3B,EAAAA,IAAI,EAAEZ,SAAS,CAACwC,IAAV,CAAeH,UAXkD;AAYvExB,EAAAA,MAAM,EAAEZ;AAZ+D,CAAzE,GAaI,KAAK,CAbT;AAcA,SAASK,oBAAT","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { HTMLElementType } from '@mui/utils';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { GridMenu } from '../GridMenu';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridColumnHeaderMenu({\n  columnMenuId,\n  columnMenuButtonId,\n  ContentComponent,\n  contentComponentProps,\n  field,\n  open,\n  target,\n  onExited\n}) {\n  const apiRef = useGridApiContext();\n  const colDef = apiRef.current.getColumn(field);\n  const hideMenu = React.useCallback(event => {\n    // Prevent triggering the sorting\n    event.stopPropagation();\n    if (!(target != null && target.contains(event.target))) {\n      apiRef.current.hideColumnMenu();\n    }\n  }, [apiRef, target]);\n  if (!target) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridMenu, {\n    placement: `bottom-${colDef.align === 'right' ? 'start' : 'end'}`,\n    open: open,\n    target: target,\n    onClickAway: hideMenu,\n    onExited: onExited,\n    children: /*#__PURE__*/_jsx(ContentComponent, _extends({\n      colDef: colDef,\n      hideMenu: hideMenu,\n      open: open,\n      id: columnMenuId,\n      labelledby: columnMenuButtonId\n    }, contentComponentProps))\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnMenuButtonId: PropTypes.string,\n  columnMenuId: PropTypes.string,\n  ContentComponent: PropTypes.elementType.isRequired,\n  contentComponentProps: PropTypes.any,\n  field: PropTypes.string.isRequired,\n  onExited: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n  target: HTMLElementType\n} : void 0;\nexport { GridColumnHeaderMenu };"]},"metadata":{},"sourceType":"module"}