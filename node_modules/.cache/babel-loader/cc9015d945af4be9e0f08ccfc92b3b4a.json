{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thang\\\\Downloads\\\\Code structure\\\\src\\\\modules\\\\auth\\\\components\\\\forgotPassword\\\\ForgotPasswordForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { Controller, useForm } from 'react-hook-form';\nimport { FormattedMessage } from 'react-intl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ForgotPasswordForm(props) {\n  _s();\n\n  var _errors$email, _errors$email2;\n\n  const {\n    control,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues: {\n      email: ''\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(data => console.log(data)),\n    className: \"row g-3 needs-validation\",\n    style: {\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"inputEmail\",\n        className: \"form-label\",\n        children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"email\",\n        control: control,\n        rules: {\n          required: true,\n          pattern: /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/\n        },\n        render: ({\n          field\n        }) => /*#__PURE__*/_jsxDEV(\"input\", { ...field,\n          type: \"text\",\n          id: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-danger mt-2 d-block \",\n        style: {\n          fontSize: '14px'\n        },\n        children: [((_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.type) === 'required' && /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"emailRequire\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 49\n        }, this), ((_errors$email2 = errors.email) === null || _errors$email2 === void 0 ? void 0 : _errors$email2.type) === 'pattern' && /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"emailInvalid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 48\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-md-center\",\n      style: {\n        margin: '16px 0'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-auto d-flex\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary me-3\",\n          type: \"submit\",\n          style: {\n            minWidth: '160px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spinner-border spinner-border-sm text-light mr-2\",\n            role: \"status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"inputEmail\",\n            className: \"form-label\",\n            children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ForgotPasswordForm, \"AQOSPDgWcjIenkNEcAJmC9mwSqA=\", false, function () {\n  return [useForm];\n});\n\n_c = ForgotPasswordForm;\nexport default ForgotPasswordForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPasswordForm\");","map":{"version":3,"sources":["C:/Users/thang/Downloads/Code structure/src/modules/auth/components/forgotPassword/ForgotPasswordForm.tsx"],"names":["Controller","useForm","FormattedMessage","ForgotPasswordForm","props","control","handleSubmit","formState","errors","defaultValues","email","data","console","log","display","flexDirection","required","pattern","field","fontSize","type","margin","minWidth","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import { Controller, useForm } from 'react-hook-form';\r\nimport { ILoginParams } from '../../../../models/auth';\r\nimport { FormattedMessage } from 'react-intl';\r\ninterface Props {\r\n  onLogin(values: ILoginParams): void;\r\n  loading: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nfunction ForgotPasswordForm(props: Props) {\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    defaultValues: {\r\n      email: '',\r\n    },\r\n  });\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit((data) => console.log(data))}\r\n      className=\"row g-3 needs-validation\"\r\n      style={{ display: 'flex', flexDirection: 'column' }}\r\n    >\r\n      <div className=\"d-flex flex-column\">\r\n        <label htmlFor=\"inputEmail\" className=\"form-label\">\r\n          <FormattedMessage id=\"email\" />\r\n        </label>\r\n        <Controller\r\n          name=\"email\"\r\n          control={control}\r\n          rules={{\r\n            required: true,\r\n            pattern: /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/,\r\n          }}\r\n          render={({ field }) => <input {...field} type=\"text\" id=\"email\" />}\r\n        />\r\n        <span className=\"text-danger mt-2 d-block \" style={{ fontSize: '14px' }}>\r\n          {errors.email?.type === 'required' && <FormattedMessage id=\"emailRequire\" />}\r\n          {errors.email?.type === 'pattern' && <FormattedMessage id=\"emailInvalid\" />}\r\n        </span>\r\n      </div>\r\n      <div className=\"row justify-content-md-center\" style={{ margin: '16px 0' }}>\r\n        <div className=\"col-md-auto d-flex\">\r\n          <button\r\n            className=\"btn btn-primary me-3\"\r\n            type=\"submit\"\r\n            style={{ minWidth: '160px', display: 'flex', alignItems: 'center', justifyContent: 'center' }}\r\n          >\r\n            <div className=\"spinner-border spinner-border-sm text-light mr-2\" role=\"status\" />\r\n            <label htmlFor=\"inputEmail\" className=\"form-label\">\r\n              <FormattedMessage id=\"register\" />\r\n            </label>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ForgotPasswordForm;\r\n"]},"metadata":{},"sourceType":"module"}