{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thang\\\\Downloads\\\\Code structure\\\\src\\\\modules\\\\auth\\\\pages\\\\LoginPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport logo from '../../../imagies/Rectangle4.png';\nimport { useDispatch } from 'react-redux';\nimport { API_PATHS } from '../../../configs/api';\nimport { RESPONSE_STATUS_SUCCESS } from '../../../utils/httpResponseCode';\nimport { setUserInfo } from '../redux/authReducer';\nimport Cookies from 'js-cookie';\nimport { ACCESS_TOKEN_KEY } from '../../../utils/constants';\nimport { getErrorMessageResponse } from '../../../utils';\nimport LoginForm from '../components/LoginForm';\nimport './LoginPage.scss';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginPage = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const onLogin = React.useCallback(async values => {\n    setErrorMessage('');\n    setLoading(true);\n    const json = await axios.post(API_PATHS.signIn, {\n      username: values.username,\n      password: values.password,\n      company_id: values.company_id\n    });\n    setLoading(false);\n\n    if ((json === null || json === void 0 ? void 0 : json.status) === RESPONSE_STATUS_SUCCESS) {\n      dispatch(setUserInfo(json.data));\n      Cookies.set(ACCESS_TOKEN_KEY, json.data.data.token); // dispatch(replace(ROUTES.employee));\n\n      return;\n    }\n\n    setErrorMessage(getErrorMessageResponse(json));\n  }, [dispatch]);\n  console.log(loading);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexDirection: 'column',\n      background: '#f8f9fa'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      alt: \"\",\n      style: {\n        width: '100px',\n        height: '100px',\n        marginTop: '64px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"title\",\n      children: \"HR Management System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoginForm, {\n      onLogin: onLogin,\n      loading: loading,\n      errorMessage: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"footer\",\n      children: \"Copyright \\xA9 2022. All Rights Reserved\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginPage, \"cSkBJXpFUPffcdNGkE+znsZv/40=\", false, function () {\n  return [useDispatch];\n});\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["C:/Users/thang/Downloads/Code structure/src/modules/auth/pages/LoginPage.tsx"],"names":["React","useState","logo","useDispatch","API_PATHS","RESPONSE_STATUS_SUCCESS","setUserInfo","Cookies","ACCESS_TOKEN_KEY","getErrorMessageResponse","LoginForm","axios","LoginPage","dispatch","loading","setLoading","errorMessage","setErrorMessage","onLogin","useCallback","values","json","post","signIn","username","password","company_id","status","data","set","token","console","log","display","alignItems","justifyContent","flexDirection","background","width","height","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport logo from '../../../imagies/Rectangle4.png';\nimport { ILoginParams } from '../../../models/auth';\nimport { useDispatch } from 'react-redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AppState } from '../../../redux/reducer';\nimport { Action } from 'redux';\nimport { API_PATHS } from '../../../configs/api';\nimport { RESPONSE_STATUS_SUCCESS } from '../../../utils/httpResponseCode';\nimport { setUserInfo } from '../redux/authReducer';\nimport Cookies from 'js-cookie';\nimport { ACCESS_TOKEN_KEY } from '../../../utils/constants';\nimport { ROUTES } from '../../../configs/routes';\nimport { replace } from 'connected-react-router';\nimport { getErrorMessageResponse } from '../../../utils';\nimport LoginForm from '../components/LoginForm';\nimport './LoginPage.scss';\nimport axios from 'axios';\n\nconst LoginPage = () => {\n  const dispatch = useDispatch<ThunkDispatch<AppState, null, Action<string>>>();\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const onLogin = React.useCallback(\n    async (values: ILoginParams) => {\n      setErrorMessage('');\n      setLoading(true);\n\n      const json = await axios.post(API_PATHS.signIn, {\n        username: values.username,\n        password: values.password,\n        company_id: values.company_id,\n      });\n\n      setLoading(false);\n\n      if (json?.status === RESPONSE_STATUS_SUCCESS) {\n        dispatch(setUserInfo(json.data));\n        Cookies.set(ACCESS_TOKEN_KEY, json.data.data.token);\n        // dispatch(replace(ROUTES.employee));\n        return;\n      }\n\n      setErrorMessage(getErrorMessageResponse(json));\n    },\n    [dispatch],\n  );\n\n  console.log(loading);\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'column',\n        background: '#f8f9fa',\n      }}\n    >\n      <img src={logo} alt=\"\" style={{ width: '100px', height: '100px', marginTop: '64px' }} />\n      <h3 className=\"title\">HR Management System</h3>\n\n      <LoginForm onLogin={onLogin} loading={loading} errorMessage={errorMessage} />\n\n      <span className=\"footer\">Copyright Â© 2022. All Rights Reserved</span>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"]},"metadata":{},"sourceType":"module"}