{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thang\\\\Downloads\\\\Code structure\\\\src\\\\modules\\\\auth\\\\components\\\\LoginFormV2.tsx\",\n    _s = $RefreshSig$();\n\nimport { useForm } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginFormV2() {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = data => console.log(data);\n\n  console.log(watch('example')); // watch input value by passing the name of it\n\n  return (\n    /*#__PURE__*/\n\n    /* \"handleSubmit\" will validate your inputs before invoking \"onSubmit\" */\n    _jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        defaultValue: \"test\",\n        ...register('example')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register('exampleRequired', {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this), errors.exampleRequired && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"This field is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(LoginFormV2, \"qF9J4eMAmxvPhPVVl3Nry7fjOzg=\", false, function () {\n  return [useForm];\n});\n\n_c = LoginFormV2;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginFormV2\");","map":{"version":3,"sources":["C:/Users/thang/Downloads/Code structure/src/modules/auth/components/LoginFormV2.tsx"],"names":["useForm","LoginFormV2","register","handleSubmit","watch","formState","errors","onSubmit","data","console","log","required","exampleRequired"],"mappings":";;;AAAA,SAASA,OAAT,QAAuC,iBAAvC;;AAOA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AACpC,QAAM;AACJC,IAAAA,QADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAJP,MAKFN,OAAO,EALX;;AAMA,QAAMO,QAA+B,GAAIC,IAAD,IAAUC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAlD;;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAAC,SAAD,CAAjB,EAToC,CASL;;AAE/B;AAAA;;AACE;AACA;AAAM,MAAA,QAAQ,EAAED,YAAY,CAACI,QAAD,CAA5B;AAAA,8BAEE;AAAO,QAAA,YAAY,EAAC,MAApB;AAAA,WAA+BL,QAAQ,CAAC,SAAD;AAAvC;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE,sBAAWA,QAAQ,CAAC,iBAAD,EAAoB;AAAES,UAAAA,QAAQ,EAAE;AAAZ,SAApB;AAAnB;AAAA;AAAA;AAAA;AAAA,cALF,EAOGL,MAAM,CAACM,eAAP,iBAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAP7B,eASE;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAcD;;GAzBuBX,W;UAMlBD,O;;;KANkBC,W","sourcesContent":["import { useForm, SubmitHandler } from 'react-hook-form';\r\n\r\ntype Inputs = {\r\n  example: string;\r\n  exampleRequired: string;\r\n};\r\n\r\nexport default function LoginFormV2() {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    watch,\r\n    formState: { errors },\r\n  } = useForm<Inputs>();\r\n  const onSubmit: SubmitHandler<Inputs> = (data) => console.log(data);\r\n\r\n  console.log(watch('example')); // watch input value by passing the name of it\r\n\r\n  return (\r\n    /* \"handleSubmit\" will validate your inputs before invoking \"onSubmit\" */\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      {/* register your input into the hook by invoking the \"register\" function */}\r\n      <input defaultValue=\"test\" {...register('example')} />\r\n\r\n      {/* include validation with required or other standard HTML validation rules */}\r\n      <input {...register('exampleRequired', { required: true })} />\r\n      {/* errors will return when field validation fails  */}\r\n      {errors.exampleRequired && <span>This field is required</span>}\r\n\r\n      <input type=\"submit\" />\r\n    </form>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}