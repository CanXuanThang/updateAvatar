{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thang\\\\Downloads\\\\Code structure\\\\src\\\\modules\\\\auth\\\\pages\\\\employeeManagement\\\\layouts\\\\table\\\\Rows.tsx\",\n    _s = $RefreshSig$();\n\nimport { Checkbox, TableCell, TableRow } from '@mui/material';\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Rows(props) {\n  _s();\n\n  const {\n    checked,\n    columns,\n    row\n  } = props;\n  const [isChecked, setIsChecked] = useState(checked);\n  const dataSearch = useSelector(state => state.employee.employee);\n  console.log(dataSearch);\n  useEffect(() => {\n    setIsChecked(checked);\n  }, [checked]);\n\n  const handleCheck = event => {\n    setIsChecked(event.target.checked);\n  };\n\n  const handleChecked = () => {\n    setIsChecked(!isChecked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableRow, {\n    hover: true,\n    role: \"checkbox\",\n    tabIndex: -1,\n    onClick: handleChecked,\n    sx: {\n      backgroundColor: isChecked ? 'rgb(233, 249, 238)' : 'rgb(248, 249, 250)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n      children: /*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: isChecked,\n        onChange: handleCheck,\n        color: \"success\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), columns.map(column => {\n      const value = row[column.id];\n\n      if (column.id === 'home_address') {\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: value.home_address_1\n          }, `${column.id}_1`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: value.home_address_2\n          }, `${column.id}_2`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)]\n        }, column.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(TableCell, {\n          children: value\n        }, column.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 18\n        }, this);\n      }\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Rows, \"TjAM82FPihHTY/LurDnEPZuKzCM=\", false, function () {\n  return [useSelector];\n});\n\n_c = Rows;\nexport default Rows;\n\nvar _c;\n\n$RefreshReg$(_c, \"Rows\");","map":{"version":3,"sources":["C:/Users/thang/Downloads/Code structure/src/modules/auth/pages/employeeManagement/layouts/table/Rows.tsx"],"names":["Checkbox","TableCell","TableRow","React","useEffect","useState","useSelector","Rows","props","checked","columns","row","isChecked","setIsChecked","dataSearch","state","employee","console","log","handleCheck","event","target","handleChecked","backgroundColor","map","column","value","id","home_address_1","home_address_2"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,QAA9B,QAA8C,eAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAQA,SAASC,IAAT,CAAcC,KAAd,EAA4B;AAAA;;AAC1B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,OAAX;AAAoBC,IAAAA;AAApB,MAA4BH,KAAlC;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAUI,OAAV,CAA1C;AACA,QAAMK,UAAU,GAAGR,WAAW,CAAES,KAAD,IAAgBA,KAAK,CAACC,QAAN,CAAeA,QAAhC,CAA9B;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAZ;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,YAAY,CAACJ,OAAD,CAAZ;AACD,GAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;;AAIA,QAAMU,WAAW,GAAIC,KAAD,IAAgD;AAClEP,IAAAA,YAAY,CAACO,KAAK,CAACC,MAAN,CAAaZ,OAAd,CAAZ;AACD,GAFD;;AAIA,QAAMa,aAAa,GAAG,MAAM;AAC1BT,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD,GAFD;;AAIA,sBACE,QAAC,QAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,QAAQ,EAAE,CAAC,CAHb;AAIE,IAAA,OAAO,EAAEU,aAJX;AAKE,IAAA,EAAE,EAAE;AAAEC,MAAAA,eAAe,EAAEX,SAAS,GAAG,oBAAH,GAA0B;AAAtD,KALN;AAAA,4BAOE,QAAC,SAAD;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,OAAO,EAAEA,SAAnB;AAA8B,QAAA,QAAQ,EAAEO,WAAxC;AAAqD,QAAA,KAAK,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF,EAUGT,OAAO,CAACc,GAAR,CAAaC,MAAD,IAAiB;AAC5B,YAAMC,KAAK,GAAGf,GAAG,CAACc,MAAM,CAACE,EAAR,CAAjB;;AAEA,UAAIF,MAAM,CAACE,EAAP,KAAc,cAAlB,EAAkC;AAChC,4BACE,QAAC,KAAD,CAAO,QAAP;AAAA,kCACE,QAAC,SAAD;AAAA,sBAAmCD,KAAK,CAACE;AAAzC,aAAiB,GAAEH,MAAM,CAACE,EAAG,IAA7B;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,SAAD;AAAA,sBAAmCD,KAAK,CAACG;AAAzC,aAAiB,GAAEJ,MAAM,CAACE,EAAG,IAA7B;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA,WAAqBF,MAAM,CAACE,EAA5B;AAAA;AAAA;AAAA;AAAA,gBADF;AAMD,OAPD,MAOO;AACL,4BAAO,QAAC,SAAD;AAAA,oBAA4BD;AAA5B,WAAgBD,MAAM,CAACE,EAAvB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;AACF,KAbA,CAVH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GA9CQpB,I;UAGYD,W;;;KAHZC,I;AAgDT,eAAeA,IAAf","sourcesContent":["import { Checkbox, TableCell, TableRow } from '@mui/material';\r\nimport React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\ninterface Props {\r\n  checked: boolean;\r\n  columns: any;\r\n  row: any;\r\n}\r\n\r\nfunction Rows(props: Props) {\r\n  const { checked, columns, row } = props;\r\n  const [isChecked, setIsChecked] = useState<boolean>(checked);\r\n  const dataSearch = useSelector((state: any) => state.employee.employee);\r\n\r\n  console.log(dataSearch);\r\n\r\n  useEffect(() => {\r\n    setIsChecked(checked);\r\n  }, [checked]);\r\n\r\n  const handleCheck = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setIsChecked(event.target.checked);\r\n  };\r\n\r\n  const handleChecked = () => {\r\n    setIsChecked(!isChecked);\r\n  };\r\n\r\n  return (\r\n    <TableRow\r\n      hover\r\n      role=\"checkbox\"\r\n      tabIndex={-1}\r\n      onClick={handleChecked}\r\n      sx={{ backgroundColor: isChecked ? 'rgb(233, 249, 238)' : 'rgb(248, 249, 250)' }}\r\n    >\r\n      <TableCell>\r\n        <Checkbox checked={isChecked} onChange={handleCheck} color=\"success\" />\r\n      </TableCell>\r\n      {columns.map((column: any) => {\r\n        const value = row[column.id];\r\n\r\n        if (column.id === 'home_address') {\r\n          return (\r\n            <React.Fragment key={column.id}>\r\n              <TableCell key={`${column.id}_1`}>{value.home_address_1}</TableCell>\r\n              <TableCell key={`${column.id}_2`}>{value.home_address_2}</TableCell>\r\n            </React.Fragment>\r\n          );\r\n        } else {\r\n          return <TableCell key={column.id}>{value}</TableCell>;\r\n        }\r\n      })}\r\n    </TableRow>\r\n  );\r\n}\r\n\r\nexport default Rows;\r\n"]},"metadata":{},"sourceType":"module"}