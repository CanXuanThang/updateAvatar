{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thang\\\\Downloads\\\\Code structure\\\\src\\\\modules\\\\auth\\\\pages\\\\LoginPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport logo from '../../../logo-420-x-108.png';\nimport { useDispatch } from 'react-redux';\nimport { fetchThunk } from '../../common/redux/thunk';\nimport { API_PATHS } from '../../../configs/api';\nimport { RESPONSE_STATUS_SUCCESS } from '../../../utils/httpResponseCode';\nimport { setUserInfo } from '../redux/authReducer';\nimport Cookies from 'js-cookie';\nimport { ACCESS_TOKEN_KEY } from '../../../utils/constants';\nimport { ROUTES } from '../../../configs/routes';\nimport { replace } from 'connected-react-router';\nimport { getErrorMessageResponse } from '../../../utils';\nimport LoginFormV2 from '../components/LoginFormV2';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginPage = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const onLogin = React.useCallback(async values => {\n    setErrorMessage('');\n    setLoading(true);\n    const json = await dispatch(fetchThunk(API_PATHS.signIn, 'post', {\n      email: values.email,\n      password: values.password\n    }));\n    setLoading(false);\n\n    if ((json === null || json === void 0 ? void 0 : json.code) === RESPONSE_STATUS_SUCCESS) {\n      dispatch(setUserInfo(json.data));\n      Cookies.set(ACCESS_TOKEN_KEY, json.data.token, {\n        expires: values.rememberMe ? 7 : undefined\n      });\n      dispatch(replace(ROUTES.home));\n      return;\n    }\n\n    setErrorMessage(getErrorMessageResponse(json));\n    toast.success('Đăng nhập thất bại!', {\n      position: 'top-right',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined\n    });\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    style: {\n      height: '100vh',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexDirection: 'column'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      alt: \"\",\n      style: {\n        maxWidth: '250px',\n        margin: '32px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoginFormV2, {\n      onLogin: onLogin,\n      loading: loading,\n      errorMessage: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginPage, \"cSkBJXpFUPffcdNGkE+znsZv/40=\", false, function () {\n  return [useDispatch];\n});\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["C:/Users/thang/Downloads/Code structure/src/modules/auth/pages/LoginPage.tsx"],"names":["React","useState","logo","useDispatch","fetchThunk","API_PATHS","RESPONSE_STATUS_SUCCESS","setUserInfo","Cookies","ACCESS_TOKEN_KEY","ROUTES","replace","getErrorMessageResponse","LoginFormV2","toast","LoginPage","dispatch","loading","setLoading","errorMessage","setErrorMessage","onLogin","useCallback","values","json","signIn","email","password","code","data","set","token","expires","rememberMe","undefined","home","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","height","display","alignItems","justifyContent","flexDirection","maxWidth","margin"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport LoginForm from '../components/LoginForm';\nimport logo from '../../../logo-420-x-108.png';\nimport { ILoginParams } from '../../../models/auth';\nimport { useDispatch } from 'react-redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AppState } from '../../../redux/reducer';\nimport { Action } from 'redux';\nimport { fetchThunk } from '../../common/redux/thunk';\nimport { API_PATHS } from '../../../configs/api';\nimport { RESPONSE_STATUS_SUCCESS } from '../../../utils/httpResponseCode';\nimport { setUserInfo } from '../redux/authReducer';\nimport Cookies from 'js-cookie';\nimport { ACCESS_TOKEN_KEY } from '../../../utils/constants';\nimport { ROUTES } from '../../../configs/routes';\nimport { replace } from 'connected-react-router';\nimport { getErrorMessageResponse } from '../../../utils';\nimport LoginFormV2 from '../components/LoginFormV2';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst LoginPage = () => {\n  const dispatch = useDispatch<ThunkDispatch<AppState, null, Action<string>>>();\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const onLogin = React.useCallback(\n    async (values: ILoginParams) => {\n      setErrorMessage('');\n      setLoading(true);\n\n      const json = await dispatch(\n        fetchThunk(API_PATHS.signIn, 'post', { email: values.email, password: values.password }),\n      );\n\n      setLoading(false);\n\n      if (json?.code === RESPONSE_STATUS_SUCCESS) {\n        dispatch(setUserInfo(json.data));\n        Cookies.set(ACCESS_TOKEN_KEY, json.data.token, { expires: values.rememberMe ? 7 : undefined });\n        dispatch(replace(ROUTES.home));\n        return;\n      }\n\n      setErrorMessage(getErrorMessageResponse(json));\n      toast.success('Đăng nhập thất bại!', {\n        position: 'top-right',\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    },\n    [dispatch],\n  );\n\n  return (\n    <div\n      className=\"container\"\n      style={{\n        height: '100vh',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'column',\n      }}\n    >\n      <img src={logo} alt=\"\" style={{ maxWidth: '250px', margin: '32px' }} />\n\n      {/* <LoginForm onLogin={onLogin} loading={loading} errorMessage={errorMessage} /> */}\n      <LoginFormV2 onLogin={onLogin} loading={loading} errorMessage={errorMessage} />\n    </div>\n  );\n};\n\nexport default LoginPage;\n"]},"metadata":{},"sourceType":"module"}