{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thang\\\\Downloads\\\\Code structure\\\\src\\\\modules\\\\auth\\\\components\\\\SignUpForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { Controller, useForm } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SignUpForm(props) {\n  _s();\n\n  const {\n    onSignUp,\n    loading,\n    errorMessage,\n    location,\n    onChangeRegion\n  } = props; // const [formValues, setFormValues] = useState<ISignUpParams>({\n  //   email: '',\n  //   password: '',\n  //   repeatPassword: '',\n  //   name: '',\n  //   gender: '',\n  //   region: '',\n  //   state: ''\n  // })\n  // useEffect(() => {\n  //   axios\n  //     .get('http://api.training.div3.pgtest.co/api/v1/location')\n  //     .then((res) => getContries(res.data.data))\n  //     .catch((error) => console.log(error));\n  // }, []);\n\n  const {\n    control,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues: {\n      email: '',\n      password: '',\n      repeatPassword: '',\n      name: '',\n      gender: '',\n      region: '',\n      state: ''\n    }\n  });\n\n  const onSubmit = () => {\n    console.log('1');\n  };\n\n  return (\n    /*#__PURE__*/\n    // <div>\n    //   <input type=\"text\" placeholder=\"Email\" />\n    //   <input type=\"text\" placeholder=\"Password\" />\n    //   <input type=\"text\" placeholder=\"Name\" />\n    //   <input type=\"text\" placeholder=\"Gioi tinh\" />\n    //   <select name=\"cars\" id=\"cars\">\n    //     <option value=\"quoc gia\">--Quoc gia--</option>\n    //     {conutries.map((country) => (\n    //       <option key={country.id} value={country.name}>\n    //         {country.name}\n    //       </option>\n    //     ))}\n    //   </select>\n    // </div>\n    _jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      style: {\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Controller, {\n        name: \"id\",\n        control: control,\n        rules: {\n          required: 'Vui lòng nhập email',\n          pattern: {\n            value: /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/,\n            message: 'Định dạng email không đúng'\n          }\n        },\n        render: ({\n          field\n        }) => /*#__PURE__*/_jsxDEV(\"input\", { ...field,\n          type: \"text\",\n          id: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 32\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-danger\",\n        children: errors.email.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(SignUpForm, \"AQOSPDgWcjIenkNEcAJmC9mwSqA=\", false, function () {\n  return [useForm];\n});\n\n_c = SignUpForm;\nexport default SignUpForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpForm\");","map":{"version":3,"sources":["C:/Users/thang/Downloads/Code structure/src/modules/auth/components/SignUpForm.tsx"],"names":["Controller","useForm","SignUpForm","props","onSignUp","loading","errorMessage","location","onChangeRegion","control","handleSubmit","formState","errors","defaultValues","email","password","repeatPassword","name","gender","region","state","onSubmit","console","log","display","flexDirection","required","pattern","value","message","field"],"mappings":";;;AAEA,SAASA,UAAT,EAAoCC,OAApC,QAAmD,iBAAnD;;;AAWA,SAASC,UAAT,CAAoBC,KAApB,EAAkC;AAAA;;AAChC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,OAAZ;AAAqBC,IAAAA,YAArB;AAAmCC,IAAAA,QAAnC;AAA6CC,IAAAA;AAA7C,MAAgEL,KAAtE,CADgC,CAGhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAM;AACJM,IAAAA,OADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAHP,MAIFX,OAAO,CAAgB;AACzBY,IAAAA,aAAa,EAAE;AACbC,MAAAA,KAAK,EAAE,EADM;AAEbC,MAAAA,QAAQ,EAAE,EAFG;AAGbC,MAAAA,cAAc,EAAE,EAHH;AAIbC,MAAAA,IAAI,EAAE,EAJO;AAKbC,MAAAA,MAAM,EAAE,EALK;AAMbC,MAAAA,MAAM,EAAE,EANK;AAObC,MAAAA,KAAK,EAAE;AAPM;AADU,GAAhB,CAJX;;AAgBA,QAAMC,QAAQ,GAAG,MAAM;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACD,GAFD;;AAIA;AAAA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAM,MAAA,QAAQ,EAAEb,YAAY,CAACW,QAAD,CAA5B;AAAwC,MAAA,KAAK,EAAE;AAAEG,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,aAAa,EAAE;AAAlC,OAA/C;AAAA,8BACE,QAAC,UAAD;AACE,QAAA,IAAI,EAAC,IADP;AAEE,QAAA,OAAO,EAAEhB,OAFX;AAGE,QAAA,KAAK,EAAE;AACLiB,UAAAA,QAAQ,EAAE,qBADL;AAELC,UAAAA,OAAO,EAAE;AACPC,YAAAA,KAAK,EAAE,0CADA;AAEPC,YAAAA,OAAO,EAAE;AAFF;AAFJ,SAHT;AAUE,QAAA,MAAM,EAAE,CAAC;AAAEC,UAAAA;AAAF,SAAD,kBAAe,sBAAWA,KAAX;AAAkB,UAAA,IAAI,EAAC,MAAvB;AAA8B,UAAA,EAAE,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA;AAVzB;AAAA;AAAA;AAAA;AAAA,cADF,EAaGlB,MAAM,CAACE,KAAP,iBAAgB;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA,kBAA+BF,MAAM,CAACE,KAAP,CAAae;AAA5C;AAAA;AAAA;AAAA;AAAA,cAbnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAfF;AA+BD;;GAtEQ3B,U;UAuBHD,O;;;KAvBGC,U;AAwET,eAAeA,UAAf","sourcesContent":["import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport { Controller, SubmitHandler, useForm } from 'react-hook-form';\r\nimport { ILocationParams, ISignUpParams } from '../../../models/singup';\r\n\r\ninterface Props {\r\n  onSignUp(value: ISignUpParams): void;\r\n  loading: boolean;\r\n  errorMessage: string;\r\n  location: Array<ILocationParams>;\r\n  onChangeRegion(idRegion: string): void;\r\n}\r\n\r\nfunction SignUpForm(props: Props) {\r\n  const { onSignUp, loading, errorMessage, location, onChangeRegion } = props;\r\n\r\n  // const [formValues, setFormValues] = useState<ISignUpParams>({\r\n  //   email: '',\r\n  //   password: '',\r\n  //   repeatPassword: '',\r\n  //   name: '',\r\n  //   gender: '',\r\n  //   region: '',\r\n  //   state: ''\r\n  // })\r\n  // useEffect(() => {\r\n  //   axios\r\n  //     .get('http://api.training.div3.pgtest.co/api/v1/location')\r\n  //     .then((res) => getContries(res.data.data))\r\n  //     .catch((error) => console.log(error));\r\n  // }, []);\r\n\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<ISignUpParams>({\r\n    defaultValues: {\r\n      email: '',\r\n      password: '',\r\n      repeatPassword: '',\r\n      name: '',\r\n      gender: '',\r\n      region: '',\r\n      state: '',\r\n    },\r\n  });\r\n\r\n  const onSubmit = () => {\r\n    console.log('1');\r\n  };\r\n\r\n  return (\r\n    // <div>\r\n    //   <input type=\"text\" placeholder=\"Email\" />\r\n    //   <input type=\"text\" placeholder=\"Password\" />\r\n    //   <input type=\"text\" placeholder=\"Name\" />\r\n    //   <input type=\"text\" placeholder=\"Gioi tinh\" />\r\n    //   <select name=\"cars\" id=\"cars\">\r\n    //     <option value=\"quoc gia\">--Quoc gia--</option>\r\n    //     {conutries.map((country) => (\r\n    //       <option key={country.id} value={country.name}>\r\n    //         {country.name}\r\n    //       </option>\r\n    //     ))}\r\n    //   </select>\r\n    // </div>\r\n    <form onSubmit={handleSubmit(onSubmit)} style={{ display: 'flex', flexDirection: 'column' }}>\r\n      <Controller\r\n        name=\"id\"\r\n        control={control}\r\n        rules={{\r\n          required: 'Vui lòng nhập email',\r\n          pattern: {\r\n            value: /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/,\r\n            message: 'Định dạng email không đúng',\r\n          },\r\n        }}\r\n        render={({ field }) => <input {...field} type=\"text\" id=\"email\" />}\r\n      />\r\n      {errors.email && <span className=\"text-danger\">{errors.email.message}</span>}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SignUpForm;\r\n"]},"metadata":{},"sourceType":"module"}