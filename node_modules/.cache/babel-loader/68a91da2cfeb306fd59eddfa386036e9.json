{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thang\\\\Downloads\\\\Code structure\\\\src\\\\modules\\\\auth\\\\pages\\\\employeeManagement\\\\layouts\\\\options\\\\forms\\\\InputDateTime.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, MenuItem } from '@mui/material';\nimport { memo, useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport DoneIcon from '@mui/icons-material/Done';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction range(start, end, step = 1) {\n  const len = Math.floor((end - start) / step) + 1;\n  return Array(len).fill(0).map((_, idx) => start + idx * step);\n}\n\nconst InputDateTime = () => {\n  _s();\n\n  const [startDate, setStartDate] = useState();\n  const [openBar, setOpenBar] = useState(true);\n  const years = range(1923, new Date().getFullYear() + 1, 1);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(DatePicker, {\n      onClickOutside: () => setOpenBar(true),\n      renderCustomHeader: ({\n        changeYear,\n        decreaseMonth,\n        increaseMonth,\n        monthDate\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: 10,\n          display: 'flex',\n          justifyContent: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          \"aria-label\": \"Previous Month\",\n          className: 'react-datepicker__navigation react-datepicker__navigation--previous',\n          onClick: decreaseMonth,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: 'react-datepicker__navigation-icon react-datepicker__navigation-icon--previous',\n            children: '<'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            position: 'relative',\n            display: 'flex',\n            flexDirection: 'column'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"react-datepicker__current-month\",\n            children: monthDate.toLocaleString('en-US', {\n              month: 'long',\n              year: 'numeric'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            sx: {\n              maxWidth: '16px',\n              minWidth: '16px',\n              margin: 'auto',\n              padding: '0',\n              color: '#7b8287'\n            },\n            children: /*#__PURE__*/_jsxDEV(KeyboardArrowDownIcon, {\n              onClick: e => setOpenBar(!openBar),\n              sx: {\n                fontSize: '20px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              minHeight: '180px',\n              maxHeight: '180px',\n              overflow: 'auto',\n              minWidth: '125px',\n              position: 'absolute',\n              backgroundColor: 'rgb(255, 255, 255)',\n              border: '1px solid rgb(223, 227, 230)',\n              borderRadius: '8px',\n              '&::-webkit-scrollbar': {\n                width: '10px',\n                height: '10px',\n                backgroundColor: '#f1f3f5'\n              },\n              '&::-webkit-scrollbar-thumb': {\n                borderRadius: '8px',\n                WebkitBoxShadow: '#d7dbdf',\n                backgroundColor: '#d7dbdf'\n              }\n            },\n            hidden: openBar,\n            children: years.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: option,\n              onClick: e => {\n                changeYear(Number(e.currentTarget.value));\n                setOpenBar(true);\n              },\n              sx: {\n                margin: 0,\n                display: 'flex',\n                justifyContent: 'center',\n                fontFamily: 'SVN-Sofia-Regular',\n                position: 'relative',\n                '&:hover': {\n                  color: 'rgb(48, 164, 108)',\n                  backgroundColor: 'rgba(193, 200, 205, 0.08)'\n                }\n              },\n              children: [String(option) === monthDate.toLocaleString('en-US', {\n                year: 'numeric'\n              }) && /*#__PURE__*/_jsxDEV(DoneIcon, {\n                sx: {\n                  height: '15px',\n                  width: '15px',\n                  position: 'absolute',\n                  left: '15px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: option\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 21\n              }, this)]\n            }, option, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          \"aria-label\": \"Next Month\",\n          className: 'react-datepicker__navigation react-datepicker__navigation--next',\n          onClick: increaseMonth,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: 'react-datepicker__navigation-icon react-datepicker__navigation-icon--next',\n            children: '>'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this),\n      selected: startDate,\n      onChange: date => setStartDate(date),\n      showIcon: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InputDateTime, \"dst9Ad6NwICKRKv0JfckgayLVHg=\");\n\n_c = InputDateTime;\nexport default _c2 = /*#__PURE__*/memo(InputDateTime);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"InputDateTime\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/thang/Downloads/Code structure/src/modules/auth/pages/employeeManagement/layouts/options/forms/InputDateTime.tsx"],"names":["Box","Button","MenuItem","memo","useState","DatePicker","KeyboardArrowDownIcon","DoneIcon","range","start","end","step","len","Math","floor","Array","fill","map","_","idx","InputDateTime","startDate","setStartDate","openBar","setOpenBar","years","Date","getFullYear","changeYear","decreaseMonth","increaseMonth","monthDate","margin","display","justifyContent","position","flexDirection","toLocaleString","month","year","maxWidth","minWidth","padding","color","e","fontSize","minHeight","maxHeight","overflow","backgroundColor","border","borderRadius","width","height","WebkitBoxShadow","option","Number","currentTarget","value","fontFamily","String","left","date"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,MAAd,EAAsBC,QAAtB,QAAsC,eAAtC;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,OAA/B;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,qBAAP,MAAkC,uCAAlC;AACA,OAAOC,QAAP,MAAqB,0BAArB;AAEA,OAAO,4CAAP;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAA8BC,GAA9B,EAA2CC,IAAY,GAAG,CAA1D,EAAuE;AACrE,QAAMC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACJ,GAAG,GAAGD,KAAP,IAAgBE,IAA3B,IAAmC,CAA/C;AACA,SAAOI,KAAK,CAACH,GAAD,CAAL,CACJI,IADI,CACC,CADD,EAEJC,GAFI,CAEA,CAACC,CAAD,EAAIC,GAAJ,KAAYV,KAAK,GAAGU,GAAG,GAAGR,IAF1B,CAAP;AAGD;;AAED,MAAMS,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,EAA1C;AACA,QAAM,CAACmB,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,CAAU,IAAV,CAAtC;AACA,QAAMqB,KAAK,GAAGjB,KAAK,CAAC,IAAD,EAAO,IAAIkB,IAAJ,GAAWC,WAAX,KAA2B,CAAlC,EAAqC,CAArC,CAAnB;AAEA,sBACE,QAAC,GAAD;AAAA,2BACE,QAAC,UAAD;AACE,MAAA,cAAc,EAAE,MAAMH,UAAU,CAAC,IAAD,CADlC;AAEE,MAAA,kBAAkB,EAAE,CAAC;AAAEI,QAAAA,UAAF;AAAcC,QAAAA,aAAd;AAA6BC,QAAAA,aAA7B;AAA4CC,QAAAA;AAA5C,OAAD,kBAClB;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE,EAAV;AAAcC,UAAAA,OAAO,EAAE,MAAvB;AAA+BC,UAAAA,cAAc,EAAE;AAA/C,SAAZ;AAAA,gCACE;AACE,wBAAW,gBADb;AAEE,UAAA,SAAS,EAAE,qEAFb;AAGE,UAAA,OAAO,EAAEL,aAHX;AAAA,iCAKE;AAAM,YAAA,SAAS,EAAE,+EAAjB;AAAA,sBACG;AADH;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE;AAAEM,YAAAA,QAAQ,EAAE,UAAZ;AAAwBF,YAAAA,OAAO,EAAE,MAAjC;AAAyCG,YAAAA,aAAa,EAAE;AAAxD,WAAT;AAAA,kCACE;AAAM,YAAA,SAAS,EAAC,iCAAhB;AAAA,sBACGL,SAAS,CAACM,cAAV,CAAyB,OAAzB,EAAkC;AACjCC,cAAAA,KAAK,EAAE,MAD0B;AAEjCC,cAAAA,IAAI,EAAE;AAF2B,aAAlC;AADH;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE,QAAC,MAAD;AAAQ,YAAA,EAAE,EAAE;AAAEC,cAAAA,QAAQ,EAAE,MAAZ;AAAoBC,cAAAA,QAAQ,EAAE,MAA9B;AAAsCT,cAAAA,MAAM,EAAE,MAA9C;AAAsDU,cAAAA,OAAO,EAAE,GAA/D;AAAoEC,cAAAA,KAAK,EAAE;AAA3E,aAAZ;AAAA,mCACE,QAAC,qBAAD;AAAuB,cAAA,OAAO,EAAGC,CAAD,IAAOpB,UAAU,CAAC,CAACD,OAAF,CAAjD;AAA6D,cAAA,EAAE,EAAE;AAAEsB,gBAAAA,QAAQ,EAAE;AAAZ;AAAjE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAPF,eAUE,QAAC,GAAD;AACE,YAAA,EAAE,EAAE;AACFC,cAAAA,SAAS,EAAE,OADT;AAEFC,cAAAA,SAAS,EAAE,OAFT;AAGFC,cAAAA,QAAQ,EAAE,MAHR;AAIFP,cAAAA,QAAQ,EAAE,OAJR;AAKFN,cAAAA,QAAQ,EAAE,UALR;AAMFc,cAAAA,eAAe,EAAE,oBANf;AAOFC,cAAAA,MAAM,EAAE,8BAPN;AAQFC,cAAAA,YAAY,EAAE,KARZ;AASF,sCAAwB;AAAEC,gBAAAA,KAAK,EAAE,MAAT;AAAiBC,gBAAAA,MAAM,EAAE,MAAzB;AAAiCJ,gBAAAA,eAAe,EAAE;AAAlD,eATtB;AAUF,4CAA8B;AAC5BE,gBAAAA,YAAY,EAAE,KADc;AAE5BG,gBAAAA,eAAe,EAAE,SAFW;AAG5BL,gBAAAA,eAAe,EAAE;AAHW;AAV5B,aADN;AAiBE,YAAA,MAAM,EAAE1B,OAjBV;AAAA,sBAmBGE,KAAK,CAACR,GAAN,CAAWsC,MAAD,iBACT,QAAC,QAAD;AAEE,cAAA,KAAK,EAAEA,MAFT;AAGE,cAAA,OAAO,EAAGX,CAAD,IAAO;AACdhB,gBAAAA,UAAU,CAAC4B,MAAM,CAACZ,CAAC,CAACa,aAAF,CAAgBC,KAAjB,CAAP,CAAV;AACAlC,gBAAAA,UAAU,CAAC,IAAD,CAAV;AACD,eANH;AAOE,cAAA,EAAE,EAAE;AACFQ,gBAAAA,MAAM,EAAE,CADN;AAEFC,gBAAAA,OAAO,EAAE,MAFP;AAGFC,gBAAAA,cAAc,EAAE,QAHd;AAIFyB,gBAAAA,UAAU,EAAE,mBAJV;AAKFxB,gBAAAA,QAAQ,EAAE,UALR;AAMF,2BAAW;AAAEQ,kBAAAA,KAAK,EAAE,mBAAT;AAA8BM,kBAAAA,eAAe,EAAE;AAA/C;AANT,eAPN;AAAA,yBAgBGW,MAAM,CAACL,MAAD,CAAN,KACCxB,SAAS,CAACM,cAAV,CAAyB,OAAzB,EAAkC;AAChCE,gBAAAA,IAAI,EAAE;AAD0B,eAAlC,CADD,iBAGO,QAAC,QAAD;AAAU,gBAAA,EAAE,EAAE;AAAEc,kBAAAA,MAAM,EAAE,MAAV;AAAkBD,kBAAAA,KAAK,EAAE,MAAzB;AAAiCjB,kBAAAA,QAAQ,EAAE,UAA3C;AAAuD0B,kBAAAA,IAAI,EAAE;AAA7D;AAAd;AAAA;AAAA;AAAA;AAAA,sBAnBV,eAoBE;AAAA,0BAAON;AAAP;AAAA;AAAA;AAAA;AAAA,sBApBF;AAAA,eACOA,MADP;AAAA;AAAA;AAAA;AAAA,oBADD;AAnBH;AAAA;AAAA;AAAA;AAAA,kBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF,eAkEE;AACE,wBAAW,YADb;AAEE,UAAA,SAAS,EAAE,iEAFb;AAGE,UAAA,OAAO,EAAEzB,aAHX;AAAA,iCAKE;AAAM,YAAA,SAAS,EAAE,2EAAjB;AAAA,sBAA+F;AAA/F;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,gBAlEF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AA8EE,MAAA,QAAQ,EAAET,SA9EZ;AA+EE,MAAA,QAAQ,EAAGyC,IAAD,IAAexC,YAAY,CAACwC,IAAD,CA/EvC;AAgFE,MAAA,QAAQ;AAhFV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsFD,CA3FD;;GAAM1C,a;;KAAAA,a;AA6FN,kCAAejB,IAAI,CAACiB,aAAD,CAAnB","sourcesContent":["import { Box, Button, MenuItem } from '@mui/material';\r\nimport { memo, useState } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport DoneIcon from '@mui/icons-material/Done';\r\n\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\nfunction range(start: number, end: number, step: number = 1): number[] {\r\n  const len = Math.floor((end - start) / step) + 1;\r\n  return Array(len)\r\n    .fill(0)\r\n    .map((_, idx) => start + idx * step);\r\n}\r\n\r\nconst InputDateTime = () => {\r\n  const [startDate, setStartDate] = useState();\r\n  const [openBar, setOpenBar] = useState<boolean>(true);\r\n  const years = range(1923, new Date().getFullYear() + 1, 1);\r\n\r\n  return (\r\n    <Box>\r\n      <DatePicker\r\n        onClickOutside={() => setOpenBar(true)}\r\n        renderCustomHeader={({ changeYear, decreaseMonth, increaseMonth, monthDate }) => (\r\n          <div style={{ margin: 10, display: 'flex', justifyContent: 'center' }}>\r\n            <button\r\n              aria-label=\"Previous Month\"\r\n              className={'react-datepicker__navigation react-datepicker__navigation--previous'}\r\n              onClick={decreaseMonth}\r\n            >\r\n              <span className={'react-datepicker__navigation-icon react-datepicker__navigation-icon--previous'}>\r\n                {'<'}\r\n              </span>\r\n            </button>\r\n            <Box sx={{ position: 'relative', display: 'flex', flexDirection: 'column' }}>\r\n              <span className=\"react-datepicker__current-month\">\r\n                {monthDate.toLocaleString('en-US', {\r\n                  month: 'long',\r\n                  year: 'numeric',\r\n                })}\r\n              </span>\r\n              <Button sx={{ maxWidth: '16px', minWidth: '16px', margin: 'auto', padding: '0', color: '#7b8287' }}>\r\n                <KeyboardArrowDownIcon onClick={(e) => setOpenBar(!openBar)} sx={{ fontSize: '20px' }} />\r\n              </Button>\r\n              <Box\r\n                sx={{\r\n                  minHeight: '180px',\r\n                  maxHeight: '180px',\r\n                  overflow: 'auto',\r\n                  minWidth: '125px',\r\n                  position: 'absolute',\r\n                  backgroundColor: 'rgb(255, 255, 255)',\r\n                  border: '1px solid rgb(223, 227, 230)',\r\n                  borderRadius: '8px',\r\n                  '&::-webkit-scrollbar': { width: '10px', height: '10px', backgroundColor: '#f1f3f5' },\r\n                  '&::-webkit-scrollbar-thumb': {\r\n                    borderRadius: '8px',\r\n                    WebkitBoxShadow: '#d7dbdf',\r\n                    backgroundColor: '#d7dbdf',\r\n                  },\r\n                }}\r\n                hidden={openBar}\r\n              >\r\n                {years.map((option) => (\r\n                  <MenuItem\r\n                    key={option}\r\n                    value={option}\r\n                    onClick={(e) => {\r\n                      changeYear(Number(e.currentTarget.value));\r\n                      setOpenBar(true);\r\n                    }}\r\n                    sx={{\r\n                      margin: 0,\r\n                      display: 'flex',\r\n                      justifyContent: 'center',\r\n                      fontFamily: 'SVN-Sofia-Regular',\r\n                      position: 'relative',\r\n                      '&:hover': { color: 'rgb(48, 164, 108)', backgroundColor: 'rgba(193, 200, 205, 0.08)' },\r\n                    }}\r\n                  >\r\n                    {String(option) ===\r\n                      monthDate.toLocaleString('en-US', {\r\n                        year: 'numeric',\r\n                      }) && <DoneIcon sx={{ height: '15px', width: '15px', position: 'absolute', left: '15px' }} />}\r\n                    <span>{option}</span>\r\n                  </MenuItem>\r\n                ))}\r\n              </Box>\r\n            </Box>\r\n\r\n            <button\r\n              aria-label=\"Next Month\"\r\n              className={'react-datepicker__navigation react-datepicker__navigation--next'}\r\n              onClick={increaseMonth}\r\n            >\r\n              <span className={'react-datepicker__navigation-icon react-datepicker__navigation-icon--next'}>{'>'}</span>\r\n            </button>\r\n          </div>\r\n        )}\r\n        selected={startDate}\r\n        onChange={(date: any) => setStartDate(date)}\r\n        showIcon\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default memo(InputDateTime);\r\n"]},"metadata":{},"sourceType":"module"}