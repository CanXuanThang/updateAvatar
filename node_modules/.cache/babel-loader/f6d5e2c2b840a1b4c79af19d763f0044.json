{"ast":null,"code":"import { createCustomAction, getType } from 'typesafe-actions';\nimport Cookies from 'js-cookie';\nimport { ACCESS_TOKEN_KEY } from '../../../utils/constants';\nexport const setAuthorization = createCustomAction('auth/setAuthorization', data => ({\n  data\n}));\nexport const setUserInfo = createCustomAction('auth/setUserInfo', data => ({\n  data\n}));\nexport const logout = createCustomAction('auth/logout');\nconst actions = {\n  setAuthorization,\n  setUserInfo,\n  logout\n};\nexport default function reducer(state = {}, action) {\n  switch (action.type) {\n    case getType(setAuthorization):\n      return { ...state,\n        auth: action.data\n      };\n\n    case getType(setUserInfo):\n      return { ...state,\n        user: action.data\n      };\n\n    case getType(logout):\n      Cookies.remove(ACCESS_TOKEN_KEY);\n      return {\n        auth: '',\n        user: null\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/thang/Downloads/Code structure/src/modules/auth/redux/authReducer.ts"],"names":["createCustomAction","getType","Cookies","ACCESS_TOKEN_KEY","setAuthorization","data","setUserInfo","logout","actions","reducer","state","action","type","auth","user","remove"],"mappings":"AAAA,SAAqBA,kBAArB,EAAyCC,OAAzC,QAAwD,kBAAxD;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,gBAAT,QAAiC,0BAAjC;AAOA,OAAO,MAAMC,gBAAgB,GAAGJ,kBAAkB,CAAC,uBAAD,EAA2BK,IAAD,KAAsB;AAChGA,EAAAA;AADgG,CAAtB,CAA1B,CAA3C;AAIP,OAAO,MAAMC,WAAW,GAAGN,kBAAkB,CAAC,kBAAD,EAAsBK,IAAD,KAAkB;AAClFA,EAAAA;AADkF,CAAlB,CAArB,CAAtC;AAIP,OAAO,MAAME,MAAM,GAAGP,kBAAkB,CAAC,aAAD,CAAjC;AAEP,MAAMQ,OAAO,GAAG;AAAEJ,EAAAA,gBAAF;AAAoBE,EAAAA,WAApB;AAAiCC,EAAAA;AAAjC,CAAhB;AAIA,eAAe,SAASE,OAAT,CAAiBC,KAAgB,GAAG,EAApC,EAAwCC,MAAxC,EAAwD;AACrE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,OAAO,CAACG,gBAAD,CAAZ;AACE,aAAO,EAAE,GAAGM,KAAL;AAAYG,QAAAA,IAAI,EAAEF,MAAM,CAACN;AAAzB,OAAP;;AACF,SAAKJ,OAAO,CAACK,WAAD,CAAZ;AACE,aAAO,EAAE,GAAGI,KAAL;AAAYI,QAAAA,IAAI,EAAEH,MAAM,CAACN;AAAzB,OAAP;;AACF,SAAKJ,OAAO,CAACM,MAAD,CAAZ;AACEL,MAAAA,OAAO,CAACa,MAAR,CAAeZ,gBAAf;AACA,aAAO;AAAEU,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,IAAI,EAAE;AAAlB,OAAP;;AACF;AACE,aAAOJ,KAAP;AATJ;AAWD","sourcesContent":["import { ActionType, createCustomAction, getType } from 'typesafe-actions';\nimport { AuthToken, IUser } from '../../../models/user';\nimport Cookies from 'js-cookie';\nimport { ACCESS_TOKEN_KEY } from '../../../utils/constants';\n\nexport interface AuthState {\n  auth?: AuthToken;\n  user?: IUser | null;\n}\n\nexport const setAuthorization = createCustomAction('auth/setAuthorization', (data: AuthToken) => ({\n  data,\n}));\n\nexport const setUserInfo = createCustomAction('auth/setUserInfo', (data: IUser) => ({\n  data,\n}));\n\nexport const logout = createCustomAction('auth/logout');\n\nconst actions = { setAuthorization, setUserInfo, logout };\n\ntype Action = ActionType<typeof actions>;\n\nexport default function reducer(state: AuthState = {}, action: Action) {\n  switch (action.type) {\n    case getType(setAuthorization):\n      return { ...state, auth: action.data };\n    case getType(setUserInfo):\n      return { ...state, user: action.data };\n    case getType(logout):\n      Cookies.remove(ACCESS_TOKEN_KEY);\n      return { auth: '', user: null };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}