{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thang\\\\Downloads\\\\Code structure\\\\src\\\\modules\\\\auth\\\\pages\\\\employeeManagement\\\\layouts\\\\options\\\\forms\\\\others\\\\MultipleSelectChip.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport Chip from '@mui/material/Chip';\nimport axios from 'axios';\nimport { API_PATHS } from '../../../../../../../../configs/api';\nimport { RESPONSE_STATUS_SUCCESS } from '../../../../../../../../utils/httpResponseCode';\nimport Cookies from 'js-cookie';\nimport { ACCESS_TOKEN_KEY } from '../../../../../../../../utils/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n}; // function getStyles(name: string, personName: readonly string[], theme: Theme) {\n//   return {\n//     fontWeight:\n//       personName.indexOf(name) === -1 ? theme.typography.fontWeightRegular : theme.typography.fontWeightMedium,\n//   };\n// }\n\nexport default function MultipleSelectChip({\n  listBenefit,\n  setListBenefit\n}) {\n  _s();\n\n  const theme = useTheme();\n  const [personName, setPersonName] = React.useState([]);\n  const [benefits, setBenefit] = React.useState([]);\n  const getBenefit = React.useCallback(async () => {\n    const json = await axios.get(API_PATHS.getBenefit, {\n      headers: {\n        Authorization: 'Bearer ' + Cookies.get(ACCESS_TOKEN_KEY)\n      }\n    });\n\n    if (json.status === RESPONSE_STATUS_SUCCESS) {\n      setBenefit(json.data.data);\n    }\n  }, []);\n  React.useEffect(() => {\n    getBenefit();\n  }, [getBenefit]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        multiple: true,\n        value: listBenefit.benefits,\n        onChange: e => setListBenefit({ ...listBenefit,\n          benefits: e.target.value\n        }),\n        sx: {\n          background: '#f1f3f5',\n          div: {\n            padding: '5px',\n            maxHeight: '150px',\n            overflowY: 'auto'\n          },\n          minHeight: '47px'\n        },\n        renderValue: selected => /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            gap: 0.5,\n            zIndex: 2\n          },\n          children: selected.map(value => /*#__PURE__*/_jsxDEV(Chip, {\n            label: value.name,\n            sx: {\n              color: 'rgb(0, 145, 255)',\n              backgroundColor: 'white',\n              borderRadius: '6px'\n            }\n          }, value.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this),\n        MenuProps: MenuProps,\n        children: benefits && benefits.map(benefit => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: benefit,\n          children: benefit.name\n        }, benefit.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MultipleSelectChip, \"dRdlh1YTn9A3DWAeN6IAAg4+jpw=\", false, function () {\n  return [useTheme];\n});\n\n_c = MultipleSelectChip;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultipleSelectChip\");","map":{"version":3,"sources":["C:/Users/thang/Downloads/Code structure/src/modules/auth/pages/employeeManagement/layouts/options/forms/others/MultipleSelectChip.tsx"],"names":["React","useTheme","Box","MenuItem","FormControl","Select","Chip","axios","API_PATHS","RESPONSE_STATUS_SUCCESS","Cookies","ACCESS_TOKEN_KEY","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","MultipleSelectChip","listBenefit","setListBenefit","theme","personName","setPersonName","useState","benefits","setBenefit","getBenefit","useCallback","json","get","headers","Authorization","status","data","useEffect","e","target","value","background","div","padding","overflowY","minHeight","selected","display","flexWrap","gap","zIndex","map","name","color","backgroundColor","borderRadius","id","benefit"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { Theme, useTheme } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\r\nimport Chip from '@mui/material/Chip';\r\nimport axios from 'axios';\r\nimport { API_PATHS } from '../../../../../../../../configs/api';\r\nimport { RESPONSE_STATUS_SUCCESS } from '../../../../../../../../utils/httpResponseCode';\r\nimport Cookies from 'js-cookie';\r\nimport { ACCESS_TOKEN_KEY } from '../../../../../../../../utils/constants';\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\n// function getStyles(name: string, personName: readonly string[], theme: Theme) {\r\n//   return {\r\n//     fontWeight:\r\n//       personName.indexOf(name) === -1 ? theme.typography.fontWeightRegular : theme.typography.fontWeightMedium,\r\n//   };\r\n// }\r\n\r\ninterface Props {\r\n  listBenefit: any;\r\n  setListBenefit: any;\r\n}\r\n\r\nexport default function MultipleSelectChip({ listBenefit, setListBenefit }: Props) {\r\n  const theme = useTheme();\r\n  const [personName, setPersonName] = React.useState<string[]>([]);\r\n  const [benefits, setBenefit] = React.useState([]);\r\n\r\n  const getBenefit = React.useCallback(async () => {\r\n    const json = await axios.get(API_PATHS.getBenefit, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + Cookies.get(ACCESS_TOKEN_KEY),\r\n      },\r\n    });\r\n\r\n    if (json.status === RESPONSE_STATUS_SUCCESS) {\r\n      setBenefit(json.data.data);\r\n    }\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    getBenefit();\r\n  }, [getBenefit]);\r\n\r\n  return (\r\n    <Box>\r\n      <FormControl fullWidth>\r\n        <Select\r\n          multiple\r\n          value={listBenefit.benefits}\r\n          onChange={(e) => setListBenefit({ ...listBenefit, benefits: e.target.value })}\r\n          sx={{\r\n            background: '#f1f3f5',\r\n            div: { padding: '5px', maxHeight: '150px', overflowY: 'auto' },\r\n            minHeight: '47px',\r\n          }}\r\n          renderValue={(selected) => (\r\n            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5, zIndex: 2 }}>\r\n              {selected.map((value: any) => (\r\n                <Chip\r\n                  key={value.id}\r\n                  label={value.name}\r\n                  sx={{ color: 'rgb(0, 145, 255)', backgroundColor: 'white', borderRadius: '6px' }}\r\n                />\r\n              ))}\r\n            </Box>\r\n          )}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {benefits &&\r\n            benefits.map((benefit: any) => (\r\n              <MenuItem key={benefit.id} value={benefit}>\r\n                {benefit.name}\r\n              </MenuItem>\r\n            ))}\r\n        </Select>\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}