{"ast":null,"code":"import { createSelector } from '../../../utils/createSelector';\nimport { gridRowsLookupSelector } from '../rows/gridRowsSelector';\nexport const gridRowSelectionStateSelector = state => state.rowSelection;\nexport const selectedGridRowsCountSelector = createSelector(gridRowSelectionStateSelector, selection => selection.length);\nexport const selectedGridRowsSelector = createSelector(gridRowSelectionStateSelector, gridRowsLookupSelector, (selectedRows, rowsLookup) => new Map(selectedRows.map(id => [id, rowsLookup[id]])));\nexport const selectedIdsLookupSelector = createSelector(gridRowSelectionStateSelector, selection => selection.reduce((lookup, rowId) => {\n  lookup[rowId] = rowId;\n  return lookup;\n}, {}));","map":{"version":3,"sources":["C:/Users/thang/Downloads/Code structure/node_modules/@mui/x-data-grid/hooks/features/rowSelection/gridRowSelectionSelector.js"],"names":["createSelector","gridRowsLookupSelector","gridRowSelectionStateSelector","state","rowSelection","selectedGridRowsCountSelector","selection","length","selectedGridRowsSelector","selectedRows","rowsLookup","Map","map","id","selectedIdsLookupSelector","reduce","lookup","rowId"],"mappings":"AAAA,SAASA,cAAT,QAA+B,+BAA/B;AACA,SAASC,sBAAT,QAAuC,0BAAvC;AACA,OAAO,MAAMC,6BAA6B,GAAGC,KAAK,IAAIA,KAAK,CAACC,YAArD;AACP,OAAO,MAAMC,6BAA6B,GAAGL,cAAc,CAACE,6BAAD,EAAgCI,SAAS,IAAIA,SAAS,CAACC,MAAvD,CAApD;AACP,OAAO,MAAMC,wBAAwB,GAAGR,cAAc,CAACE,6BAAD,EAAgCD,sBAAhC,EAAwD,CAACQ,YAAD,EAAeC,UAAf,KAA8B,IAAIC,GAAJ,CAAQF,YAAY,CAACG,GAAb,CAAiBC,EAAE,IAAI,CAACA,EAAD,EAAKH,UAAU,CAACG,EAAD,CAAf,CAAvB,CAAR,CAAtF,CAA/C;AACP,OAAO,MAAMC,yBAAyB,GAAGd,cAAc,CAACE,6BAAD,EAAgCI,SAAS,IAAIA,SAAS,CAACS,MAAV,CAAiB,CAACC,MAAD,EAASC,KAAT,KAAmB;AACtID,EAAAA,MAAM,CAACC,KAAD,CAAN,GAAgBA,KAAhB;AACA,SAAOD,MAAP;AACD,CAHmG,EAGjG,EAHiG,CAA7C,CAAhD","sourcesContent":["import { createSelector } from '../../../utils/createSelector';\nimport { gridRowsLookupSelector } from '../rows/gridRowsSelector';\nexport const gridRowSelectionStateSelector = state => state.rowSelection;\nexport const selectedGridRowsCountSelector = createSelector(gridRowSelectionStateSelector, selection => selection.length);\nexport const selectedGridRowsSelector = createSelector(gridRowSelectionStateSelector, gridRowsLookupSelector, (selectedRows, rowsLookup) => new Map(selectedRows.map(id => [id, rowsLookup[id]])));\nexport const selectedIdsLookupSelector = createSelector(gridRowSelectionStateSelector, selection => selection.reduce((lookup, rowId) => {\n  lookup[rowId] = rowId;\n  return lookup;\n}, {}));"]},"metadata":{},"sourceType":"module"}