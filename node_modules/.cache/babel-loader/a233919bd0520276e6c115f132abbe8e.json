{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thang\\\\Downloads\\\\Code structure\\\\src\\\\modules\\\\auth\\\\pages\\\\employeeManagement\\\\layouts\\\\options\\\\forms\\\\InputDateTime.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, MenuItem } from '@mui/material';\nimport { memo, useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport DoneIcon from '@mui/icons-material/Done';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction range(start, end, step = 1) {\n  const len = Math.floor((end - start) / step) + 1;\n  return Array(len).fill(0).map((_, idx) => start + idx * step);\n}\n\nconst InputDateTime = () => {\n  _s();\n\n  const [startDate, setStartDate] = useState();\n  const [openBar, setOpenBar] = useState(true);\n  const years = range(1923, new Date().getFullYear() + 1, 1);\n  return /*#__PURE__*/_jsxDEV(DatePicker, {\n    onClickOutside: () => setOpenBar(true),\n    renderCustomHeader: ({\n      date,\n      changeYear,\n      decreaseMonth,\n      increaseMonth,\n      monthDate\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: 10,\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        \"aria-label\": \"Previous Month\",\n        className: 'react-datepicker__navigation react-datepicker__navigation--previous',\n        onClick: decreaseMonth,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: 'react-datepicker__navigation-icon react-datepicker__navigation-icon--previous',\n          children: '<'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          position: 'relative',\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"react-datepicker__current-month\",\n          children: monthDate.toLocaleString('en-US', {\n            month: 'long',\n            year: 'numeric'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          sx: {\n            maxWidth: '16px',\n            minWidth: '16px',\n            margin: 'auto',\n            padding: '0',\n            color: '#7b8287'\n          },\n          children: /*#__PURE__*/_jsxDEV(KeyboardArrowDownIcon, {\n            onClick: e => setOpenBar(!openBar),\n            sx: {\n              fontSize: '20px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            minHeight: '180px',\n            maxHeight: '180px',\n            overflow: 'auto',\n            minWidth: '125px',\n            position: 'absolute',\n            backgroundColor: 'rgb(255, 255, 255)',\n            border: '1px solid rgb(223, 227, 230)',\n            borderRadius: '8px',\n            '&::-webkit-scrollbar': {\n              width: '10px',\n              height: '10px',\n              backgroundColor: '#f1f3f5'\n            },\n            '&::-webkit-scrollbar-thumb': {\n              borderRadius: '8px',\n              WebkitBoxShadow: '#d7dbdf',\n              backgroundColor: '#d7dbdf'\n            }\n          },\n          hidden: openBar,\n          children: years.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: option,\n            onClick: e => {\n              changeYear(Number(e.currentTarget.value));\n              setOpenBar(true);\n            },\n            sx: {\n              margin: 0,\n              display: 'flex',\n              justifyContent: 'center',\n              fontFamily: 'SVN-Sofia-Regular',\n              position: 'relative',\n              '&:hover': {\n                color: 'rgb(48, 164, 108)',\n                backgroundColor: 'rgba(193, 200, 205, 0.08)'\n              }\n            },\n            children: [String(option) === monthDate.toLocaleString('en-US', {\n              year: 'numeric'\n            }) && /*#__PURE__*/_jsxDEV(DoneIcon, {\n              sx: {\n                height: '15px',\n                width: '15px',\n                position: 'absolute',\n                left: '15px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: option\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 19\n            }, this)]\n          }, option, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        \"aria-label\": \"Next Month\",\n        className: 'react-datepicker__navigation react-datepicker__navigation--next',\n        onClick: increaseMonth,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: 'react-datepicker__navigation-icon react-datepicker__navigation-icon--next',\n          children: '>'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this),\n    selected: startDate,\n    onChange: date => setStartDate(date),\n    showIcon: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InputDateTime, \"dst9Ad6NwICKRKv0JfckgayLVHg=\");\n\n_c = InputDateTime;\nexport default _c2 = /*#__PURE__*/memo(InputDateTime);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"InputDateTime\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/thang/Downloads/Code structure/src/modules/auth/pages/employeeManagement/layouts/options/forms/InputDateTime.tsx"],"names":["Box","Button","MenuItem","memo","useState","DatePicker","KeyboardArrowDownIcon","DoneIcon","range","start","end","step","len","Math","floor","Array","fill","map","_","idx","InputDateTime","startDate","setStartDate","openBar","setOpenBar","years","Date","getFullYear","date","changeYear","decreaseMonth","increaseMonth","monthDate","margin","display","justifyContent","position","flexDirection","toLocaleString","month","year","maxWidth","minWidth","padding","color","e","fontSize","minHeight","maxHeight","overflow","backgroundColor","border","borderRadius","width","height","WebkitBoxShadow","option","Number","currentTarget","value","fontFamily","String","left"],"mappings":"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","sourcesContent":["import { Box, Button, MenuItem } from '@mui/material';\r\nimport { memo, useState } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport DoneIcon from '@mui/icons-material/Done';\r\n\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\nfunction range(start: number, end: number, step: number = 1): number[] {\r\n  const len = Math.floor((end - start) / step) + 1;\r\n  return Array(len)\r\n    .fill(0)\r\n    .map((_, idx) => start + idx * step);\r\n}\r\n\r\nconst InputDateTime = () => {\r\n  const [startDate, setStartDate] = useState();\r\n  const [openBar, setOpenBar] = useState<boolean>(true);\r\n  const years = range(1923, new Date().getFullYear() + 1, 1);\r\n\r\n  return (\r\n    <DatePicker\r\n      onClickOutside={() => setOpenBar(true)}\r\n      renderCustomHeader={({ date, changeYear, decreaseMonth, increaseMonth, monthDate }) => (\r\n        <div style={{ margin: 10, display: 'flex', justifyContent: 'center' }}>\r\n          <button\r\n            aria-label=\"Previous Month\"\r\n            className={'react-datepicker__navigation react-datepicker__navigation--previous'}\r\n            onClick={decreaseMonth}\r\n          >\r\n            <span className={'react-datepicker__navigation-icon react-datepicker__navigation-icon--previous'}>\r\n              {'<'}\r\n            </span>\r\n          </button>\r\n          <Box sx={{ position: 'relative', display: 'flex', flexDirection: 'column' }}>\r\n            <span className=\"react-datepicker__current-month\">\r\n              {monthDate.toLocaleString('en-US', {\r\n                month: 'long',\r\n                year: 'numeric',\r\n              })}\r\n            </span>\r\n            <Button sx={{ maxWidth: '16px', minWidth: '16px', margin: 'auto', padding: '0', color: '#7b8287' }}>\r\n              <KeyboardArrowDownIcon onClick={(e) => setOpenBar(!openBar)} sx={{ fontSize: '20px' }} />\r\n            </Button>\r\n            <Box\r\n              sx={{\r\n                minHeight: '180px',\r\n                maxHeight: '180px',\r\n                overflow: 'auto',\r\n                minWidth: '125px',\r\n                position: 'absolute',\r\n                backgroundColor: 'rgb(255, 255, 255)',\r\n                border: '1px solid rgb(223, 227, 230)',\r\n                borderRadius: '8px',\r\n                '&::-webkit-scrollbar': { width: '10px', height: '10px', backgroundColor: '#f1f3f5' },\r\n                '&::-webkit-scrollbar-thumb': {\r\n                  borderRadius: '8px',\r\n                  WebkitBoxShadow: '#d7dbdf',\r\n                  backgroundColor: '#d7dbdf',\r\n                },\r\n              }}\r\n              hidden={openBar}\r\n            >\r\n              {years.map((option) => (\r\n                <MenuItem\r\n                  key={option}\r\n                  value={option}\r\n                  onClick={(e) => {\r\n                    changeYear(Number(e.currentTarget.value));\r\n                    setOpenBar(true);\r\n                  }}\r\n                  sx={{\r\n                    margin: 0,\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    fontFamily: 'SVN-Sofia-Regular',\r\n                    position: 'relative',\r\n                    '&:hover': { color: 'rgb(48, 164, 108)', backgroundColor: 'rgba(193, 200, 205, 0.08)' },\r\n                  }}\r\n                >\r\n                  {String(option) ===\r\n                    monthDate.toLocaleString('en-US', {\r\n                      year: 'numeric',\r\n                    }) && <DoneIcon sx={{ height: '15px', width: '15px', position: 'absolute', left: '15px' }} />}\r\n                  <span>{option}</span>\r\n                </MenuItem>\r\n              ))}\r\n            </Box>\r\n          </Box>\r\n\r\n          <button\r\n            aria-label=\"Next Month\"\r\n            className={'react-datepicker__navigation react-datepicker__navigation--next'}\r\n            onClick={increaseMonth}\r\n          >\r\n            <span className={'react-datepicker__navigation-icon react-datepicker__navigation-icon--next'}>{'>'}</span>\r\n          </button>\r\n        </div>\r\n      )}\r\n      selected={startDate}\r\n      onChange={(date: any) => setStartDate(date)}\r\n      showIcon\r\n    />\r\n  );\r\n};\r\n\r\nexport default memo(InputDateTime);\r\n"]},"metadata":{},"sourceType":"module"}