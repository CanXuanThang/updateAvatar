{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thang\\\\Downloads\\\\Code structure\\\\src\\\\modules\\\\auth\\\\pages\\\\employeeManagement\\\\layouts\\\\options\\\\forms\\\\salaryNwages\\\\SalaryNWageForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, FormControl, Grid, Input, InputAdornment, Stack, Typography } from '@mui/material';\nimport { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setSalaryNWageForm } from '../../../../../../redux/employeeReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SalaryNWageForm() {\n  _s();\n\n  const [formSalary, setFormSalary] = useState({\n    basic_salary: '',\n    audit_salary: '',\n    safety_insurance: '',\n    health_insurance: '',\n    meal_allowance: ''\n  });\n  const items = [{\n    text: 'Basic Salary',\n    required: '*',\n    value: formSalary.basic_salary,\n    field: 'basic_salary'\n  }, {\n    text: 'Basic Salary (Audit)',\n    required: '*',\n    value: formSalary.audit_salary,\n    field: 'audit_salary'\n  }, {\n    text: 'Safety Insurance Amount',\n    required: '*',\n    value: formSalary.safety_insurance,\n    field: 'safety_insurance'\n  }, {\n    text: 'Healthy Insurance Amount',\n    value: formSalary.health_insurance,\n    field: 'health_insurance'\n  }, {\n    text: 'Meal Allowance',\n    required: '*',\n    value: formSalary.meal_allowance,\n    field: 'meal_allowance'\n  }];\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(setSalaryNWageForm(formSalary));\n  }, [dispatch, formSalary]);\n  console.log(formSalary);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      component: \"form\",\n      direction: \"column\",\n      spacing: 2,\n      sx: {\n        paddingLeft: '20px',\n        paddingRight: '20px',\n        paddingBottom: '20px',\n        gap: '4px',\n        display: 'flex',\n        maxWidth: '560px',\n        width: '100%'\n      },\n      children: items.map(item => /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 'row',\n        sx: {\n          '&:first-of-type': {\n            marginLeft: '0',\n            marginTop: 0\n          },\n          marginTop: '0 !important'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 5,\n          sx: {\n            paddingLeft: '0 !important',\n            paddingTop: '0 !important',\n            display: 'flex',\n            alignItems: 'center',\n            marginTop: '0 !important'\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            gutterBottom: true,\n            sx: {\n              fontFamily: 'SVN-Sofia-Regular',\n              display: 'flex',\n              alignItems: 'center',\n              margin: 0,\n              fontSize: '16px'\n            },\n            children: [item.text, /*#__PURE__*/_jsxDEV(Box, {\n              component: \"span\",\n              sx: {\n                color: 'rgb(229, 72, 77)',\n                margin: 0\n              },\n              children: item.required\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 7,\n          sx: {\n            paddingLeft: '0 !important',\n            paddingTop: '0 !important'\n          },\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            sx: {\n              width: '100%'\n            },\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              id: \"my-input\",\n              \"aria-describedby\": \"my-helper-text\",\n              type: \"number\",\n              value: item.value,\n              onChange: e => setFormSalary(prevFormSalary => ({ ...prevFormSalary,\n                [item.field]: Number(e.target.value)\n              })),\n              startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"start\",\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  component: \"p\",\n                  sx: {\n                    fontFamily: 'SVN-Sofia-Regular',\n                    color: 'rgb(0, 106, 220)'\n                  },\n                  children: \"Rp\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 21\n              }, this),\n              sx: {\n                '&:before': {\n                  content: 'none'\n                },\n                input: {\n                  padding: '12px'\n                },\n                paddingLeft: '12px',\n                backgroundColor: 'rgb(241, 243, 245)',\n                borderRadius: '6px',\n                fontFamily: 'SVN-Sofia-Regular'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)]\n      }, item.text, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SalaryNWageForm, \"RvCWoL0F7sB3K/DlOiGYUNlkwI0=\", false, function () {\n  return [useDispatch];\n});\n\n_c = SalaryNWageForm;\nexport default SalaryNWageForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SalaryNWageForm\");","map":{"version":3,"sources":["C:/Users/thang/Downloads/Code structure/src/modules/auth/pages/employeeManagement/layouts/options/forms/salaryNwages/SalaryNWageForm.tsx"],"names":["Box","FormControl","Grid","Input","InputAdornment","Stack","Typography","useEffect","useState","useDispatch","setSalaryNWageForm","SalaryNWageForm","formSalary","setFormSalary","basic_salary","audit_salary","safety_insurance","health_insurance","meal_allowance","items","text","required","value","field","dispatch","console","log","paddingLeft","paddingRight","paddingBottom","gap","display","maxWidth","width","map","item","marginLeft","marginTop","paddingTop","alignItems","fontFamily","margin","fontSize","color","e","prevFormSalary","Number","target","content","input","padding","backgroundColor","borderRadius"],"mappings":"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","sourcesContent":["import { Box, FormControl, Grid, Input, InputAdornment, Stack, Typography } from '@mui/material';\r\nimport { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { ThunkDispatch } from 'redux-thunk';\r\nimport { AppState } from '../../../../../../../../redux/reducer';\r\nimport { Action } from 'typesafe-actions';\r\nimport { setSalaryNWageForm } from '../../../../../../redux/employeeReducer';\r\n\r\nfunction SalaryNWageForm() {\r\n  const [formSalary, setFormSalary] = useState({\r\n    basic_salary: '',\r\n    audit_salary: '',\r\n    safety_insurance: '',\r\n    health_insurance: '',\r\n    meal_allowance: '',\r\n  });\r\n  const items = [\r\n    {\r\n      text: 'Basic Salary',\r\n      required: '*',\r\n      value: formSalary.basic_salary,\r\n      field: 'basic_salary',\r\n    },\r\n    {\r\n      text: 'Basic Salary (Audit)',\r\n      required: '*',\r\n      value: formSalary.audit_salary,\r\n      field: 'audit_salary',\r\n    },\r\n    {\r\n      text: 'Safety Insurance Amount',\r\n      required: '*',\r\n      value: formSalary.safety_insurance,\r\n      field: 'safety_insurance',\r\n    },\r\n    {\r\n      text: 'Healthy Insurance Amount',\r\n      value: formSalary.health_insurance,\r\n      field: 'health_insurance',\r\n    },\r\n    {\r\n      text: 'Meal Allowance',\r\n      required: '*',\r\n      value: formSalary.meal_allowance,\r\n      field: 'meal_allowance',\r\n    },\r\n  ];\r\n\r\n  const dispatch = useDispatch<ThunkDispatch<AppState, null, Action<string>>>();\r\n\r\n  useEffect(() => {\r\n    dispatch(setSalaryNWageForm(formSalary));\r\n  }, [dispatch, formSalary]);\r\n\r\n  console.log(formSalary);\r\n\r\n  return (\r\n    <Box>\r\n      <Stack\r\n        component=\"form\"\r\n        direction=\"column\"\r\n        spacing={2}\r\n        sx={{\r\n          paddingLeft: '20px',\r\n          paddingRight: '20px',\r\n          paddingBottom: '20px',\r\n          gap: '4px',\r\n          display: 'flex',\r\n          maxWidth: '560px',\r\n          width: '100%',\r\n        }}\r\n      >\r\n        {items.map((item) => (\r\n          <Grid\r\n            container\r\n            spacing={'row'}\r\n            sx={{ '&:first-of-type': { marginLeft: '0', marginTop: 0 }, marginTop: '0 !important' }}\r\n            key={item.text}\r\n          >\r\n            <Grid\r\n              item\r\n              xs={5}\r\n              sx={{\r\n                paddingLeft: '0 !important',\r\n                paddingTop: '0 !important',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                marginTop: '0 !important',\r\n              }}\r\n            >\r\n              <Typography\r\n                variant=\"body2\"\r\n                gutterBottom\r\n                sx={{\r\n                  fontFamily: 'SVN-Sofia-Regular',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  margin: 0,\r\n                  fontSize: '16px',\r\n                }}\r\n              >\r\n                {item.text}\r\n                <Box component=\"span\" sx={{ color: 'rgb(229, 72, 77)', margin: 0 }}>\r\n                  {item.required}\r\n                </Box>\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={7} sx={{ paddingLeft: '0 !important', paddingTop: '0 !important' }}>\r\n              <FormControl sx={{ width: '100%' }}>\r\n                <Input\r\n                  id=\"my-input\"\r\n                  aria-describedby=\"my-helper-text\"\r\n                  type=\"number\"\r\n                  value={item.value}\r\n                  onChange={(e) =>\r\n                    setFormSalary((prevFormSalary) => ({\r\n                      ...prevFormSalary,\r\n                      [item.field]: Number(e.target.value),\r\n                    }))\r\n                  }\r\n                  startAdornment={\r\n                    <InputAdornment position=\"start\">\r\n                      <Typography component=\"p\" sx={{ fontFamily: 'SVN-Sofia-Regular', color: 'rgb(0, 106, 220)' }}>\r\n                        Rp\r\n                      </Typography>\r\n                    </InputAdornment>\r\n                  }\r\n                  sx={{\r\n                    '&:before': { content: 'none' },\r\n                    input: { padding: '12px' },\r\n                    paddingLeft: '12px',\r\n                    backgroundColor: 'rgb(241, 243, 245)',\r\n                    borderRadius: '6px',\r\n                    fontFamily: 'SVN-Sofia-Regular',\r\n                  }}\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n          </Grid>\r\n        ))}\r\n      </Stack>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default SalaryNWageForm;\r\n"]},"metadata":{},"sourceType":"module"}