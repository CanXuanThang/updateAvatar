{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thang\\\\Downloads\\\\Code structure\\\\src\\\\modules\\\\auth\\\\pages\\\\employeeManagement\\\\layouts\\\\options\\\\forms\\\\personalInfomation\\\\PersonalInformationForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Grid, InputBase, Stack, Typography } from '@mui/material';\nimport { fields1, fields2 } from './fileds';\nimport InputDateTime from '../InputDateTime';\nimport { memo, useEffect, useState } from 'react';\nimport Selected from '../../../selected/Selected';\nimport { FormattedMessage } from 'react-intl';\nimport { validAddEmployee, validateAddEmployee } from '../../../../../../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PersonalInformationForm() {\n  _s();\n\n  const [validate, setValidate] = useState();\n  const [validateForm, setValidateForm] = useState({\n    gender: '',\n    ktp: '',\n    name: '',\n    ncId: ''\n  });\n\n  const hanldeSunmit = e => {\n    e.preventDefault();\n  };\n\n  useEffect(() => {\n    const validate = validateAddEmployee(validateForm);\n    setValidate(validate);\n\n    if (!validAddEmployee(validate)) {\n      return;\n    }\n  }, [validateForm]);\n  const styles = {};\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"form\",\n    onSubmit: hanldeSunmit,\n    sx: {\n      gap: '20px',\n      display: 'flex',\n      flexWrap: 'wrap',\n      marginBottom: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"column\",\n      spacing: 2,\n      sx: {\n        flex: '1 1 0%',\n        paddingLeft: '20px',\n        paddingRight: '20px',\n        gap: '10px'\n      },\n      children: fields1.map((item, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        sx: {\n          '&:first-of-type': {\n            marginLeft: '0',\n            marginTop: 0\n          },\n          marginTop: '0 !important'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 5,\n          sx: {\n            paddingLeft: '0 !important',\n            paddingTop: '0 !important',\n            display: 'flex',\n            alignItems: 'center',\n            marginTop: '0 !important'\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            gutterBottom: true,\n            sx: {\n              fontFamily: 'SVN-Sofia-Regular',\n              display: 'flex',\n              alignItems: 'center',\n              margin: 0,\n              fontSize: '16px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: item.field\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              component: \"span\",\n              sx: {\n                color: 'rgb(229, 72, 77)',\n                margin: 0\n              },\n              children: item.required\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 7,\n          sx: {\n            paddingLeft: '0 !important',\n            paddingTop: '0 !important'\n          },\n          children: [item.field === 'dob' && /*#__PURE__*/_jsxDEV(InputDateTime, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 40\n          }, this), item.field === 'name' && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(InputBase, {\n              sx: {\n                backgroundColor: !!(validate === null || validate === void 0 ? void 0 : validate.name) ? 'rgb(255, 239, 239)' : 'rgb(241, 243, 245)',\n                input: {\n                  padding: '12px'\n                },\n                borderRadius: '6px',\n                width: '100%',\n                border: !!(validate === null || validate === void 0 ? void 0 : validate.name) ? '1px solid rgb(243, 174, 175)' : 'none'\n              },\n              value: item.field === 'name' && validateForm.name,\n              onChange: e => setValidateForm({ ...validateForm,\n                name: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }, this), !!(validate === null || validate === void 0 ? void 0 : validate.name) && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-danger\",\n              children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                id: validate === null || validate === void 0 ? void 0 : validate.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this), item.field === 'ktp' && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(InputBase, {\n              sx: {\n                backgroundColor: !!(validate === null || validate === void 0 ? void 0 : validate.ktp) ? 'rgb(255, 239, 239)' : 'rgb(241, 243, 245)',\n                input: {\n                  padding: '12px'\n                },\n                borderRadius: '6px',\n                width: '100%',\n                border: !!(validate === null || validate === void 0 ? void 0 : validate.ktp) ? '1px solid rgb(243, 174, 175)' : 'none'\n              },\n              value: item.field === 'ktp' && validateForm.ktp,\n              onChange: e => setValidateForm({ ...validateForm,\n                ktp: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 19\n            }, this), !!(validate === null || validate === void 0 ? void 0 : validate.ktp) && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-danger\",\n              children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                id: validate === null || validate === void 0 ? void 0 : validate.ktp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this), item.input === 'input' && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(InputBase, {\n              sx: {\n                backgroundColor: 'rgb(241, 243, 245)',\n                input: {\n                  padding: '12px'\n                },\n                borderRadius: '6px',\n                width: '100%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, this), item.input === 'selected' && /*#__PURE__*/_jsxDEV(Selected, {\n            defaultOption: \"Choose Gender\",\n            objectOption: ['Male', 'Female']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"column\",\n      spacing: 2,\n      sx: {\n        flex: '1 1 0%',\n        paddingLeft: '20px',\n        paddingRight: '20px',\n        gap: '10px'\n      },\n      children: fields2.map((item, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        sx: {\n          '&:first-of-type': {\n            marginLeft: '0',\n            marginTop: 0\n          },\n          marginTop: '0 !important'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 5,\n          sx: {\n            paddingLeft: '0 !important',\n            paddingTop: '0 !important',\n            display: 'flex',\n            alignItems: 'center',\n            marginTop: '0 !important'\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            gutterBottom: true,\n            sx: {\n              fontFamily: 'SVN-Sofia-Regular',\n              display: 'flex',\n              alignItems: 'center',\n              margin: 0,\n              fontSize: '16px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: item.field\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              component: \"span\",\n              sx: {\n                color: 'rgb(229, 72, 77)',\n                margin: 0\n              },\n              children: item.required\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 7,\n          sx: {\n            paddingLeft: '0 !important',\n            paddingTop: '0 !important'\n          },\n          children: [item.input === 'input' && /*#__PURE__*/_jsxDEV(InputBase, {\n            sx: {\n              backgroundColor: 'rgb(241, 243, 245)',\n              input: {\n                padding: '12px'\n              },\n              borderRadius: '6px',\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 17\n          }, this), item.input === 'selected' && /*#__PURE__*/_jsxDEV(Selected, {\n            defaultOption: \"Choose Marriage Status\",\n            objectOption: ['N/A', 'Married with 1 kid', 'Single', 'Married']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PersonalInformationForm, \"OtbyrTvmRqt9zTM46fGhPZzJXqw=\");\n\n_c = PersonalInformationForm;\nexport default _c2 = /*#__PURE__*/memo(PersonalInformationForm);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PersonalInformationForm\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/thang/Downloads/Code structure/src/modules/auth/pages/employeeManagement/layouts/options/forms/personalInfomation/PersonalInformationForm.tsx"],"names":["Box","Grid","InputBase","Stack","Typography","fields1","fields2","InputDateTime","memo","useEffect","useState","Selected","FormattedMessage","validAddEmployee","validateAddEmployee","PersonalInformationForm","validate","setValidate","validateForm","setValidateForm","gender","ktp","name","ncId","hanldeSunmit","e","preventDefault","styles","gap","display","flexWrap","marginBottom","flex","paddingLeft","paddingRight","map","item","index","marginLeft","marginTop","paddingTop","alignItems","fontFamily","margin","fontSize","field","color","required","backgroundColor","input","padding","borderRadius","width","border","target","value"],"mappings":"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","sourcesContent":["import { Box, Grid, InputBase, Stack, Typography } from '@mui/material';\r\nimport { fields1, fields2 } from './fileds';\r\nimport InputDateTime from '../InputDateTime';\r\nimport { FormEvent, memo, useEffect, useState } from 'react';\r\nimport Selected from '../../../selected/Selected';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { EmployeeParams, EmployeeValidate } from '../../../../../../../../models/employee';\r\nimport { validAddEmployee, validateAddEmployee } from '../../../../../../utils';\r\n\r\nfunction PersonalInformationForm() {\r\n  const [validate, setValidate] = useState<EmployeeValidate>();\r\n  const [validateForm, setValidateForm] = useState<EmployeeParams>({\r\n    gender: '',\r\n    ktp: '',\r\n    name: '',\r\n    ncId: '',\r\n  });\r\n  const hanldeSunmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n  };\r\n  useEffect(() => {\r\n    const validate = validateAddEmployee(validateForm);\r\n    setValidate(validate);\r\n    if (!validAddEmployee(validate)) {\r\n      return;\r\n    }\r\n  }, [validateForm]);\r\n\r\n  const styles = {};\r\n  return (\r\n    <Box\r\n      component=\"form\"\r\n      onSubmit={hanldeSunmit}\r\n      sx={{ gap: '20px', display: 'flex', flexWrap: 'wrap', marginBottom: '20px' }}\r\n    >\r\n      <Stack\r\n        direction=\"column\"\r\n        spacing={2}\r\n        sx={{ flex: '1 1 0%', paddingLeft: '20px', paddingRight: '20px', gap: '10px' }}\r\n      >\r\n        {fields1.map((item: any, index: number) => (\r\n          <Grid\r\n            container\r\n            spacing={2}\r\n            key={index}\r\n            sx={{ '&:first-of-type': { marginLeft: '0', marginTop: 0 }, marginTop: '0 !important' }}\r\n          >\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={5}\r\n              sx={{\r\n                paddingLeft: '0 !important',\r\n                paddingTop: '0 !important',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                marginTop: '0 !important',\r\n              }}\r\n            >\r\n              <Typography\r\n                variant=\"body2\"\r\n                gutterBottom\r\n                sx={{\r\n                  fontFamily: 'SVN-Sofia-Regular',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  margin: 0,\r\n                  fontSize: '16px',\r\n                }}\r\n              >\r\n                <FormattedMessage id={item.field} />\r\n                <Box component=\"span\" sx={{ color: 'rgb(229, 72, 77)', margin: 0 }}>\r\n                  {item.required}\r\n                </Box>\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} md={7} sx={{ paddingLeft: '0 !important', paddingTop: '0 !important' }}>\r\n              {item.field === 'dob' && <InputDateTime />}\r\n              {item.field === 'name' && (\r\n                <div>\r\n                  <InputBase\r\n                    sx={{\r\n                      backgroundColor: !!validate?.name ? 'rgb(255, 239, 239)' : 'rgb(241, 243, 245)',\r\n                      input: { padding: '12px' },\r\n                      borderRadius: '6px',\r\n                      width: '100%',\r\n                      border: !!validate?.name ? '1px solid rgb(243, 174, 175)' : 'none',\r\n                    }}\r\n                    value={item.field === 'name' && validateForm.name}\r\n                    onChange={(e) => setValidateForm({ ...validateForm, name: e.target.value })}\r\n                  />\r\n                  {!!validate?.name && (\r\n                    <small className=\"text-danger\">\r\n                      <FormattedMessage id={validate?.name} />\r\n                    </small>\r\n                  )}\r\n                </div>\r\n              )}\r\n              {item.field === 'ktp' && (\r\n                <div>\r\n                  <InputBase\r\n                    sx={{\r\n                      backgroundColor: !!validate?.ktp ? 'rgb(255, 239, 239)' : 'rgb(241, 243, 245)',\r\n                      input: { padding: '12px' },\r\n                      borderRadius: '6px',\r\n                      width: '100%',\r\n                      border: !!validate?.ktp ? '1px solid rgb(243, 174, 175)' : 'none',\r\n                    }}\r\n                    value={item.field === 'ktp' && validateForm.ktp}\r\n                    onChange={(e) => setValidateForm({ ...validateForm, ktp: e.target.value })}\r\n                  />\r\n                  {!!validate?.ktp && (\r\n                    <small className=\"text-danger\">\r\n                      <FormattedMessage id={validate?.ktp} />\r\n                    </small>\r\n                  )}\r\n                </div>\r\n              )}\r\n              {item.input === 'input' && (\r\n                <div>\r\n                  <InputBase\r\n                    sx={{\r\n                      backgroundColor: 'rgb(241, 243, 245)',\r\n                      input: { padding: '12px' },\r\n                      borderRadius: '6px',\r\n                      width: '100%',\r\n                    }}\r\n                  />\r\n                </div>\r\n              )}\r\n              {item.input === 'selected' && (\r\n                <Selected defaultOption=\"Choose Gender\" objectOption={['Male', 'Female']} />\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        ))}\r\n      </Stack>\r\n      <Stack\r\n        direction=\"column\"\r\n        spacing={2}\r\n        sx={{ flex: '1 1 0%', paddingLeft: '20px', paddingRight: '20px', gap: '10px' }}\r\n      >\r\n        {fields2.map((item: any, index: number) => (\r\n          <Grid\r\n            container\r\n            spacing={2}\r\n            key={index}\r\n            sx={{ '&:first-of-type': { marginLeft: '0', marginTop: 0 }, marginTop: '0 !important' }}\r\n          >\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={5}\r\n              sx={{\r\n                paddingLeft: '0 !important',\r\n                paddingTop: '0 !important',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                marginTop: '0 !important',\r\n              }}\r\n            >\r\n              <Typography\r\n                variant=\"body2\"\r\n                gutterBottom\r\n                sx={{\r\n                  fontFamily: 'SVN-Sofia-Regular',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  margin: 0,\r\n                  fontSize: '16px',\r\n                }}\r\n              >\r\n                <FormattedMessage id={item.field} />\r\n                <Box component=\"span\" sx={{ color: 'rgb(229, 72, 77)', margin: 0 }}>\r\n                  {item.required}\r\n                </Box>\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} md={7} sx={{ paddingLeft: '0 !important', paddingTop: '0 !important' }}>\r\n              {item.input === 'input' && (\r\n                <InputBase\r\n                  sx={{\r\n                    backgroundColor: 'rgb(241, 243, 245)',\r\n                    input: { padding: '12px' },\r\n                    borderRadius: '6px',\r\n                    width: '100%',\r\n                  }}\r\n                />\r\n              )}\r\n              {item.input === 'selected' && (\r\n                <Selected\r\n                  defaultOption=\"Choose Marriage Status\"\r\n                  objectOption={['N/A', 'Married with 1 kid', 'Single', 'Married']}\r\n                />\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        ))}\r\n      </Stack>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default memo(PersonalInformationForm);\r\n"]},"metadata":{},"sourceType":"module"}