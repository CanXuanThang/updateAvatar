[{"C:\\Users\\thang\\Downloads\\Code structure\\src\\index.tsx":"1","C:\\Users\\thang\\Downloads\\Code structure\\src\\reportWebVitals.ts":"2","C:\\Users\\thang\\Downloads\\Code structure\\src\\redux\\configureStore.ts":"3","C:\\Users\\thang\\Downloads\\Code structure\\src\\App.tsx":"4","C:\\Users\\thang\\Downloads\\Code structure\\src\\modules\\intl\\redux\\intlReducer.ts":"5","C:\\Users\\thang\\Downloads\\Code structure\\src\\modules\\intl\\component\\ConnectedIntlProvider.tsx":"6","C:\\Users\\thang\\Downloads\\Code structure\\src\\redux\\sagas.ts":"7","C:\\Users\\thang\\Downloads\\Code structure\\src\\redux\\reducer.ts":"8","C:\\Users\\thang\\Downloads\\Code structure\\src\\utils\\httpResponseCode.ts":"9","C:\\Users\\thang\\Downloads\\Code structure\\src\\utils\\constants.ts":"10","C:\\Users\\thang\\Downloads\\Code structure\\src\\configs\\api.ts":"11","C:\\Users\\thang\\Downloads\\Code structure\\src\\modules\\intl\\constants.ts":"12","C:\\Users\\thang\\Downloads\\Code structure\\src\\Routes.tsx":"13","C:\\Users\\thang\\Downloads\\Code structure\\src\\modules\\common\\redux\\thunk.ts":"14","C:\\Users\\thang\\Downloads\\Code structure\\src\\modules\\auth\\redux\\authReducer.ts":"15","C:\\Users\\thang\\Downloads\\Code structure\\src\\configs\\routes.ts":"16","C:\\Users\\thang\\Downloads\\Code structure\\src\\modules\\auth\\pages\\LoginPage.tsx":"17","C:\\Users\\thang\\Downloads\\Code structure\\src\\modules\\common\\components\\ProtectedRoute.tsx":"18","C:\\Users\\thang\\Downloads\\Code structure\\src\\modules\\home\\pages\\ContactPage.tsx":"19","C:\\Users\\thang\\Downloads\\Code structure\\src\\modules\\home\\pages\\HomePage.tsx":"20","C:\\Users\\thang\\Downloads\\Code structure\\src\\modules\\auth\\components\\LoginForm.tsx":"21","C:\\Users\\thang\\Downloads\\Code structure\\src\\utils\\index.ts":"22","C:\\Users\\thang\\Downloads\\Code structure\\src\\modules\\auth\\utils.ts":"23","C:\\Users\\thang\\Downloads\\Code structure\\src\\modules\\auth\\components\\LoginFormV2.tsx":"24","C:\\Users\\thang\\Downloads\\Code structure\\src\\modules\\auth\\components\\SignUpForm.tsx":"25","C:\\Users\\thang\\Downloads\\Code structure\\src\\modules\\auth\\pages\\SignUpPage.tsx":"26","C:\\Users\\thang\\Downloads\\Code structure\\src\\modules\\product\\redux\\reduce.ts":"27","C:\\Users\\thang\\Downloads\\Code structure\\src\\modules\\product\\page\\ListItemProduct.tsx":"28","C:\\Users\\thang\\Downloads\\Code structure\\src\\modules\\product\\ListItem\\Header.tsx":"29","C:\\Users\\thang\\Downloads\\Code structure\\src\\modules\\product\\ListItem\\ContainerSelector.tsx":"30","C:\\Users\\thang\\Downloads\\Code structure\\src\\modules\\product\\ListItem\\Selector.tsx":"31","C:\\Users\\thang\\Downloads\\Code structure\\src\\modules\\product\\ListItem\\Table.tsx":"32","C:\\Users\\thang\\Downloads\\Code structure\\src\\modules\\product\\ListItem\\ViewDetail.tsx":"33","C:\\Users\\thang\\Downloads\\Code structure\\src\\modules\\product\\ListItem\\ViewDetailPage.tsx":"34","C:\\Users\\thang\\Downloads\\Code structure\\src\\modules\\auth\\pages\\UserPage.tsx":"35","C:\\Users\\thang\\Downloads\\Code structure\\src\\utils\\upload.ts":"36"},{"size":1305,"mtime":1681454165509,"results":"37","hashOfConfig":"38"},{"size":425,"mtime":1681454165742,"results":"39","hashOfConfig":"38"},{"size":1325,"mtime":1681454166586,"results":"40","hashOfConfig":"38"},{"size":1279,"mtime":1681454165548,"results":"41","hashOfConfig":"38"},{"size":715,"mtime":1681806966147,"results":"42","hashOfConfig":"38"},{"size":531,"mtime":1681811322622,"results":"43","hashOfConfig":"38"},{"size":143,"mtime":1681454166634,"results":"44","hashOfConfig":"38"},{"size":725,"mtime":1682342938106,"results":"45","hashOfConfig":"38"},{"size":93,"mtime":1681454165943,"results":"46","hashOfConfig":"38"},{"size":309,"mtime":1682740126571,"results":"47","hashOfConfig":"38"},{"size":752,"mtime":1682683758467,"results":"48","hashOfConfig":"38"},{"size":31,"mtime":1681454166246,"results":"49","hashOfConfig":"38"},{"size":1494,"mtime":1682733501153,"results":"50","hashOfConfig":"38"},{"size":1192,"mtime":1681454166555,"results":"51","hashOfConfig":"38"},{"size":1079,"mtime":1682773461432,"results":"52","hashOfConfig":"38"},{"size":198,"mtime":1682733515666,"results":"53","hashOfConfig":"38"},{"size":2411,"mtime":1683038599043,"results":"54","hashOfConfig":"38"},{"size":572,"mtime":1681462193467,"results":"55","hashOfConfig":"38"},{"size":153,"mtime":1681454166150,"results":"56","hashOfConfig":"38"},{"size":558,"mtime":1682732762992,"results":"57","hashOfConfig":"38"},{"size":3456,"mtime":1681714911435,"results":"58","hashOfConfig":"38"},{"size":444,"mtime":1681454165988,"results":"59","hashOfConfig":"38"},{"size":2182,"mtime":1681803669191,"results":"60","hashOfConfig":"38"},{"size":2695,"mtime":1681714788790,"results":"61","hashOfConfig":"38"},{"size":9036,"mtime":1681813834865,"results":"62","hashOfConfig":"38"},{"size":3069,"mtime":1681803930782,"results":"63","hashOfConfig":"38"},{"size":1123,"mtime":1682687806372,"results":"64","hashOfConfig":"38"},{"size":350,"mtime":1682414458561,"results":"65","hashOfConfig":"38"},{"size":306,"mtime":1682311364967,"results":"66","hashOfConfig":"38"},{"size":1238,"mtime":1682773810584,"results":"67","hashOfConfig":"38"},{"size":3653,"mtime":1682417171608,"results":"68","hashOfConfig":"38"},{"size":6153,"mtime":1682773962115,"results":"69","hashOfConfig":"38"},{"size":2237,"mtime":1682688707615,"results":"70","hashOfConfig":"38"},{"size":2480,"mtime":1682774074381,"results":"71","hashOfConfig":"38"},{"size":6511,"mtime":1683038678734,"results":"72","hashOfConfig":"38"},{"size":513,"mtime":1682411725857,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"iws1j2",{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"76"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"76"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"76"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"76"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"C:\\Users\\thang\\Downloads\\Code structure\\src\\index.tsx",[],["151","152"],"C:\\Users\\thang\\Downloads\\Code structure\\src\\reportWebVitals.ts",[],"C:\\Users\\thang\\Downloads\\Code structure\\src\\redux\\configureStore.ts",[],"C:\\Users\\thang\\Downloads\\Code structure\\src\\App.tsx",[],"C:\\Users\\thang\\Downloads\\Code structure\\src\\modules\\intl\\redux\\intlReducer.ts",[],"C:\\Users\\thang\\Downloads\\Code structure\\src\\modules\\intl\\component\\ConnectedIntlProvider.tsx",[],"C:\\Users\\thang\\Downloads\\Code structure\\src\\redux\\sagas.ts",["153"],"import { fork } from '@redux-saga/core/effects';\n\nexport default function* rootSaga() {\n  // we need add saga here\n  //yield fork(someSaga);\n}\n","C:\\Users\\thang\\Downloads\\Code structure\\src\\redux\\reducer.ts",[],"C:\\Users\\thang\\Downloads\\Code structure\\src\\utils\\httpResponseCode.ts",[],"C:\\Users\\thang\\Downloads\\Code structure\\src\\utils\\constants.ts",[],"C:\\Users\\thang\\Downloads\\Code structure\\src\\configs\\api.ts",[],"C:\\Users\\thang\\Downloads\\Code structure\\src\\modules\\intl\\constants.ts",[],"C:\\Users\\thang\\Downloads\\Code structure\\src\\Routes.tsx",[],"C:\\Users\\thang\\Downloads\\Code structure\\src\\modules\\common\\redux\\thunk.ts",[],"C:\\Users\\thang\\Downloads\\Code structure\\src\\modules\\auth\\redux\\authReducer.ts",[],"C:\\Users\\thang\\Downloads\\Code structure\\src\\configs\\routes.ts",[],"C:\\Users\\thang\\Downloads\\Code structure\\src\\modules\\auth\\pages\\LoginPage.tsx",[],"C:\\Users\\thang\\Downloads\\Code structure\\src\\modules\\common\\components\\ProtectedRoute.tsx",[],"C:\\Users\\thang\\Downloads\\Code structure\\src\\modules\\home\\pages\\ContactPage.tsx",[],"C:\\Users\\thang\\Downloads\\Code structure\\src\\modules\\home\\pages\\HomePage.tsx",[],"C:\\Users\\thang\\Downloads\\Code structure\\src\\modules\\auth\\components\\LoginForm.tsx",[],"C:\\Users\\thang\\Downloads\\Code structure\\src\\utils\\index.ts",[],"C:\\Users\\thang\\Downloads\\Code structure\\src\\modules\\auth\\utils.ts",[],"C:\\Users\\thang\\Downloads\\Code structure\\src\\modules\\auth\\components\\LoginFormV2.tsx",[],"C:\\Users\\thang\\Downloads\\Code structure\\src\\modules\\auth\\components\\SignUpForm.tsx",["154","155","156","157"],"import { useEffect, useState } from 'react';\r\nimport { Controller, SubmitHandler, useForm } from 'react-hook-form';\r\nimport { ILocationParams, ISignUpParams } from '../../../models/singup';\r\nimport { setLocale } from '../../intl/redux/intlReducer';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { useDispatch } from 'react-redux';\r\n\r\ninterface Props {\r\n  onSignUp(values: ISignUpParams): void;\r\n  loading: boolean;\r\n  errorMessage: string;\r\n  locations: Array<ILocationParams>;\r\n  states: Array<ILocationParams>;\r\n  onChangeRegion(idRegion: string): void;\r\n}\r\n\r\nfunction SignUpForm(props: Props) {\r\n  const [passwordMatch, setPasswordMatch] = useState(true);\r\n  const { onSignUp, loading, errorMessage, locations, states, onChangeRegion } = props;\r\n  const [showCityField, setShowCityField] = useState(false);\r\n  const [tran, setTran] = useState('en');\r\n\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    watch,\r\n  } = useForm<ISignUpParams>({\r\n    defaultValues: {\r\n      email: '',\r\n      password: '',\r\n      repeatPassword: '',\r\n      name: '',\r\n      gender: '',\r\n      region: '',\r\n      state: '',\r\n    },\r\n  });\r\n\r\n  const options = [\r\n    {\r\n      label: 'Nam',\r\n      value: 'male',\r\n    },\r\n    {\r\n      label: 'Nữ',\r\n      value: 'female',\r\n    },\r\n    {\r\n      label: 'Bede',\r\n      value: 'bede',\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const password = watch('password');\r\n    const repeatPassword = watch('repeatPassword');\r\n    const region = watch('region');\r\n    if (password && repeatPassword) {\r\n      setPasswordMatch(password === repeatPassword);\r\n    }\r\n    onChangeRegion(region);\r\n\r\n    if (region) {\r\n      setShowCityField(true);\r\n    }\r\n  }, [watch('password'), watch('repeatPassword'), watch('region')]);\r\n\r\n  const onSubmit: SubmitHandler<ISignUpParams> = (data) => onSignUp(data);\r\n\r\n  const dispatch = useDispatch();\r\n  const changeLang = () => {\r\n    if (tran === 'en') {\r\n      dispatch(setLocale('vi'));\r\n      setTran('vi');\r\n    } else if (tran === 'vi') {\r\n      dispatch(setLocale('en'));\r\n      setTran('en');\r\n    }\r\n  };\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit(onSubmit)}\r\n      className=\"row g-3 needs-validation\"\r\n      style={{ display: 'flex', flexDirection: 'column' }}\r\n    >\r\n      <div onClick={changeLang} className=\"border d-flex justify-content-center\" style={{ cursor: 'pointer' }}>\r\n        Transalate\r\n      </div>\r\n      {!!errorMessage && (\r\n        <div className=\"alert alert-danger\" role=\"alert\" style={{ width: '100%' }}>\r\n          {errorMessage}\r\n        </div>\r\n      )}\r\n      <div className=\"d-flex flex-column\">\r\n        <label htmlFor=\"inputEmail\" className=\"form-label\">\r\n          <FormattedMessage id=\"email\" />\r\n        </label>\r\n        <Controller\r\n          name=\"email\"\r\n          control={control}\r\n          rules={{\r\n            required: true,\r\n            pattern: /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/,\r\n          }}\r\n          render={({ field }) => <input {...field} type=\"text\" id=\"email\" />}\r\n        />\r\n        <span className=\"text-danger mt-2 d-block \" style={{ fontSize: '14px' }}>\r\n          {errors.email?.type === 'required' && <FormattedMessage id=\"emailRequire\" />}\r\n          {errors.email?.type === 'pattern' && <FormattedMessage id=\"emailInvalid\" />}\r\n        </span>\r\n      </div>\r\n      <div className=\"d-flex flex-column\">\r\n        <label htmlFor=\"inputEmail\" className=\"form-label\">\r\n          <FormattedMessage id=\"password\" />\r\n        </label>\r\n        <Controller\r\n          name=\"password\"\r\n          control={control}\r\n          rules={{\r\n            required: true,\r\n            minLength: 4,\r\n          }}\r\n          render={({ field }) => <input {...field} type=\"password\" id=\"password\" />}\r\n        />\r\n        <span className=\"text-danger mt-2 d-block \" style={{ fontSize: '14px' }}>\r\n          {errors.password?.type === 'required' && <FormattedMessage id=\"passwordRequire\" />}\r\n          {errors.password?.type === 'minLength' && <FormattedMessage id=\"minPasswordInvalid\" />}\r\n        </span>\r\n      </div>\r\n      <div className=\"d-flex flex-column\">\r\n        <label htmlFor=\"inputEmail\" className=\"form-label\">\r\n          <FormattedMessage id=\"repeatPassword\" />\r\n        </label>\r\n        <Controller\r\n          name=\"repeatPassword\"\r\n          control={control}\r\n          rules={{\r\n            required: true,\r\n            validate: (value) => value === watch('password'),\r\n          }}\r\n          render={({ field }) => <input {...field} type=\"password\" id=\"repeatPassword\" />}\r\n        />\r\n        <span className=\"text-danger mt-2 d-block \" style={{ fontSize: '14px' }}>\r\n          {errors.repeatPassword?.type === 'required' && <FormattedMessage id=\"passwordRequire\" />}\r\n          {errors.repeatPassword?.type === 'validate' ||\r\n            (!passwordMatch && <FormattedMessage id=\"matchPasswordInvalid\" />)}\r\n        </span>\r\n      </div>\r\n      <div className=\"d-flex flex-column\">\r\n        <label htmlFor=\"inputEmail\" className=\"form-label\">\r\n          <FormattedMessage id=\"name\" />\r\n        </label>\r\n        <Controller\r\n          name=\"name\"\r\n          control={control}\r\n          rules={{\r\n            required: true,\r\n          }}\r\n          render={({ field }) => <input {...field} type=\"text \" id=\"name\" />}\r\n        />\r\n        <span className=\"text-danger mt-2 d-block \" style={{ fontSize: '14px' }}>\r\n          {errors.name?.type === 'required' && <FormattedMessage id=\"nameRequire\" />}\r\n        </span>\r\n      </div>\r\n      <div className=\"d-flex flex-column\">\r\n        <label htmlFor=\"inputEmail\" className=\"form-label\">\r\n          <FormattedMessage id=\"gender\" />\r\n        </label>\r\n        <Controller\r\n          name=\"gender\"\r\n          control={control}\r\n          rules={{ required: true }}\r\n          render={({ field: { onChange, value } }) => (\r\n            <select onChange={onChange} value={value}>\r\n              <option>-- Vui lòng chọn giới tính --</option>\r\n              {options.map((option) => (\r\n                <option key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          )}\r\n        />\r\n        <span className=\"text-danger mt-2 d-block \" style={{ fontSize: '14px' }}>\r\n          {errors.gender?.type === 'required' && <FormattedMessage id=\"genderRequire\" />}\r\n        </span>\r\n      </div>\r\n      <div className=\"d-flex flex-column\">\r\n        <label htmlFor=\"inputEmail\" className=\"form-label\">\r\n          <FormattedMessage id=\"region\" />\r\n        </label>\r\n        <Controller\r\n          name=\"region\"\r\n          control={control}\r\n          rules={{ required: true }}\r\n          render={({ field: { onChange, value } }) => (\r\n            <select onChange={onChange} value={value}>\r\n              <option>-- Vui lòng chọn quốc gia --</option>\r\n              {locations.map((location: ILocationParams, index: number) => (\r\n                <option key={location.id} value={index + 1}>\r\n                  {location.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          )}\r\n        />\r\n        <span className=\"text-danger mt-2 d-block \" style={{ fontSize: '14px' }}>\r\n          {errors.region?.type === 'required' && <FormattedMessage id=\"regionRequire\" />}\r\n        </span>\r\n      </div>\r\n      {showCityField && (\r\n        <div className=\"d-flex flex-column\">\r\n          <label htmlFor=\"inputEmail\" className=\"form-label\">\r\n            <FormattedMessage id=\"state\" />\r\n          </label>\r\n          <Controller\r\n            name=\"state\"\r\n            control={control}\r\n            rules={{ required: 'Vui lòng chọn quốc gia' }}\r\n            render={({ field: { onChange, value } }) => (\r\n              <select onChange={onChange} value={value}>\r\n                {states.map((state: ILocationParams, index: number) => (\r\n                  <option key={state.id} value={index}>\r\n                    {state.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            )}\r\n          />\r\n          <span className=\"text-danger mt-2 d-block \" style={{ fontSize: '14px' }}>\r\n            {errors.state?.type === 'required' && <FormattedMessage id=\"stateRequire\" />}\r\n          </span>\r\n        </div>\r\n      )}\r\n      <div className=\"row justify-content-md-center\" style={{ margin: '16px 0' }}>\r\n        <div className=\"col-md-auto d-flex\">\r\n          <button\r\n            className=\"btn btn-primary me-3\"\r\n            type=\"submit\"\r\n            style={{ minWidth: '160px', display: 'flex', alignItems: 'center', justifyContent: 'center' }}\r\n            disabled={loading}\r\n          >\r\n            {loading && <div className=\"spinner-border spinner-border-sm text-light mr-2\" role=\"status\" />}\r\n            <label htmlFor=\"inputEmail\" className=\"form-label\">\r\n              <FormattedMessage id=\"register\" />\r\n            </label>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SignUpForm;\r\n","C:\\Users\\thang\\Downloads\\Code structure\\src\\modules\\auth\\pages\\SignUpPage.tsx",["158"],"import SignUpForm from '../components/SignUpForm';\r\nimport logo from '../../../logo-420-x-108.png';\r\nimport { useDispatch } from 'react-redux';\r\nimport { ThunkDispatch } from 'redux-thunk';\r\nimport { AppState } from '../../../redux/reducer';\r\nimport { Action } from 'redux';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { fetchThunk } from '../../common/redux/thunk';\r\nimport { API_PATHS } from '../../../configs/api';\r\nimport { RESPONSE_STATUS_SUCCESS } from '../../../utils/httpResponseCode';\r\nimport { setUserInfo } from '../redux/authReducer';\r\nimport { replace } from 'connected-react-router';\r\nimport { ROUTES } from '../../../configs/routes';\r\nimport { ISignUpParams } from '../../../models/singup';\r\nimport { getErrorMessageResponse } from '../../../utils';\r\n\r\nfunction SignUpPage() {\r\n  const dispatch = useDispatch<ThunkDispatch<AppState, null, Action<string>>>();\r\n  const [loading, setLoading] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [locations, setLocations] = useState([]);\r\n  const [states, setStates] = useState([]);\r\n  const [idRegion, setIdRegion] = useState('');\r\n\r\n  const getLocation = useCallback(async (idRegion?: string) => {\r\n    setLoading(true);\r\n\r\n    const json = await dispatch(\r\n      fetchThunk(idRegion ? `${API_PATHS.getLocation}?pid=${idRegion}` : API_PATHS.getLocation, 'get'),\r\n    );\r\n\r\n    setLoading(false);\r\n\r\n    if (json?.code === RESPONSE_STATUS_SUCCESS) {\r\n      idRegion ? setStates(json.data) : setLocations(json.data);\r\n      return;\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getLocation(idRegion);\r\n  }, [getLocation, idRegion]);\r\n\r\n  const onSignUp = useCallback(\r\n    async (values: ISignUpParams) => {\r\n      setErrorMessage('');\r\n      setLoading(true);\r\n\r\n      console.log(values);\r\n\r\n      const json = await dispatch(fetchThunk(API_PATHS.signUp, 'post', values));\r\n\r\n      setLoading(false);\r\n\r\n      console.log(json?.code);\r\n\r\n      if (json?.code === RESPONSE_STATUS_SUCCESS) {\r\n        dispatch(setUserInfo(json.data));\r\n        alert('Chúc mừng bạn đã đăng kí tài khoản thành công');\r\n        // Cookies.set(ACCESS_TOKEN_KEY, json.data.token, { expires: values.rememberMe ? 7 : undefined });\r\n        dispatch(replace(ROUTES.home));\r\n        return;\r\n      }\r\n\r\n      setErrorMessage(getErrorMessageResponse(json));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const onChangeRegion = (idRegion: string) => {\r\n    setIdRegion(idRegion);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"container\"\r\n      style={{\r\n        height: '100vh',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        flexDirection: 'column',\r\n      }}\r\n    >\r\n      <img src={logo} alt=\"\" style={{ maxWidth: '250px', margin: '32px' }} />\r\n      <SignUpForm\r\n        onSignUp={onSignUp}\r\n        loading={loading}\r\n        errorMessage={errorMessage}\r\n        locations={locations}\r\n        states={states}\r\n        onChangeRegion={onChangeRegion}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUpPage;\r\n","C:\\Users\\thang\\Downloads\\Code structure\\src\\modules\\product\\redux\\reduce.ts",[],"C:\\Users\\thang\\Downloads\\Code structure\\src\\modules\\product\\page\\ListItemProduct.tsx",[],"C:\\Users\\thang\\Downloads\\Code structure\\src\\modules\\product\\ListItem\\Header.tsx",[],"C:\\Users\\thang\\Downloads\\Code structure\\src\\modules\\product\\ListItem\\ContainerSelector.tsx",[],"C:\\Users\\thang\\Downloads\\Code structure\\src\\modules\\product\\ListItem\\Selector.tsx",["159"],"import { Dispatch, useCallback, useState } from 'react';\r\nimport { Button, Space } from 'antd';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Product, SearchDataType } from '../../../models/product';\r\nimport { searchItemProduct } from '../redux/reduce';\r\n\r\ninterface Props {\r\n  data: any;\r\n}\r\n\r\nfunction Selector(props: Props) {\r\n  const { data } = props;\r\n  const initialDataItem: SearchDataType = {\r\n    status: 'Status',\r\n    from: '',\r\n    to: '',\r\n    client: 'Client',\r\n    invoice: '',\r\n  };\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  const [dataItem, setDataItem] = useState<SearchDataType>(initialDataItem);\r\n\r\n  const status = Array.from(\r\n    new Set(data.filter((item: Product) => item.status !== null).map((item: Product) => item.status)),\r\n  );\r\n\r\n  const clients = Array.from(\r\n    new Set(data.filter((item: Product) => item.client !== null).map((item: Product) => item.client)),\r\n  );\r\n\r\n  const handleApply = () => {\r\n    dispatch(searchItemProduct(dataItem));\r\n  };\r\n\r\n  const handleClear = useCallback(() => {\r\n    dispatch(searchItemProduct(initialDataItem));\r\n    setDataItem(initialDataItem);\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className=\"d-flex\">\r\n      <select\r\n        className=\"form-select\"\r\n        aria-label=\"Default select example\"\r\n        defaultValue=\"Status\"\r\n        onChange={(e) => setDataItem({ ...dataItem, status: e.target.value })}\r\n      >\r\n        <option value={dataItem.status}>{dataItem.status}</option>\r\n        {status &&\r\n          status.map((item: any, index: number) => (\r\n            <option value={item} key={index}>\r\n              {item}\r\n            </option>\r\n          ))}\r\n      </select>\r\n      <select\r\n        className=\"form-select mx-4\"\r\n        aria-label=\"Default select example\"\r\n        defaultValue=\"Client\"\r\n        onChange={(e) => setDataItem({ ...dataItem, client: e.target.value })}\r\n      >\r\n        <option value={dataItem.client}>{dataItem.client}</option>\r\n        {clients &&\r\n          clients.map((item: any, index: number) => (\r\n            <option value={item} key={index}>\r\n              {item}\r\n            </option>\r\n          ))}\r\n      </select>\r\n      <input\r\n        type=\"datetime-local\"\r\n        aria-label=\"Default select example\"\r\n        className=\"form-select\"\r\n        id=\"birthdaytime\"\r\n        name=\"birthdaytime\"\r\n        style={{ height: 47, margin: 0 }}\r\n        placeholder=\"From\"\r\n        onChange={(e) => setDataItem({ ...dataItem, from: e.target.value })}\r\n      ></input>\r\n      <input\r\n        type=\"datetime-local\"\r\n        aria-label=\"Default select example\"\r\n        className=\"form-select mx-4\"\r\n        id=\"birthdaytime\"\r\n        name=\"birthdaytime\"\r\n        style={{ height: 47, margin: 0 }}\r\n        onChange={(e) => setDataItem({ ...dataItem, to: e.target.value })}\r\n      ></input>\r\n      <input\r\n        type=\"text\"\r\n        style={{ height: 47, margin: 0 }}\r\n        placeholder=\"Invoice\"\r\n        aria-label=\"Default select example\"\r\n        className=\"form-select\"\r\n        onChange={(e) => setDataItem({ ...dataItem, invoice: e.target.value })}\r\n      />\r\n      <div className=\"d-flex flex-column \" style={{ padding: 0 }}>\r\n        <Space\r\n          className=\"site-button-ghost-wrapper\"\r\n          style={{\r\n            display: 'flex',\r\n            width: '100%',\r\n          }}\r\n        >\r\n          <Button type=\"primary\" className=\"mx-5\" ghost onClick={handleApply}>\r\n            Apply\r\n          </Button>\r\n          <Button type=\"primary\" danger ghost onClick={handleClear}>\r\n            Clear\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Selector;\r\n","C:\\Users\\thang\\Downloads\\Code structure\\src\\modules\\product\\ListItem\\Table.tsx",[],"C:\\Users\\thang\\Downloads\\Code structure\\src\\modules\\product\\ListItem\\ViewDetail.tsx",[],"C:\\Users\\thang\\Downloads\\Code structure\\src\\modules\\product\\ListItem\\ViewDetailPage.tsx",[],"C:\\Users\\thang\\Downloads\\Code structure\\src\\modules\\auth\\pages\\UserPage.tsx",["160","161","162"],"C:\\Users\\thang\\Downloads\\Code structure\\src\\utils\\upload.ts",[],{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","severity":1,"message":"168","line":1,"column":10,"nodeType":"169","messageId":"170","endLine":1,"endColumn":14},{"ruleId":"171","severity":1,"message":"172","line":67,"column":6,"nodeType":"173","endLine":67,"endColumn":67,"suggestions":"174"},{"ruleId":"171","severity":1,"message":"175","line":67,"column":7,"nodeType":"176","endLine":67,"endColumn":24},{"ruleId":"171","severity":1,"message":"175","line":67,"column":26,"nodeType":"176","endLine":67,"endColumn":49},{"ruleId":"171","severity":1,"message":"175","line":67,"column":51,"nodeType":"176","endLine":67,"endColumn":66},{"ruleId":"171","severity":1,"message":"177","line":38,"column":6,"nodeType":"173","endLine":38,"endColumn":8,"suggestions":"178"},{"ruleId":"171","severity":1,"message":"179","line":38,"column":6,"nodeType":"173","endLine":38,"endColumn":16,"suggestions":"180"},{"ruleId":"167","severity":1,"message":"181","line":6,"column":10,"nodeType":"169","messageId":"170","endLine":6,"endColumn":20},{"ruleId":"167","severity":1,"message":"182","line":24,"column":19,"nodeType":"169","messageId":"170","endLine":24,"endColumn":29},{"ruleId":"167","severity":1,"message":"183","line":27,"column":16,"nodeType":"169","messageId":"170","endLine":27,"endColumn":23},"no-native-reassign",["184"],"no-negated-in-lhs",["185"],"@typescript-eslint/no-unused-vars","'fork' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'onChangeRegion' and 'watch'. Either include them or remove the dependency array.","ArrayExpression",["186"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["187"],"React Hook useCallback has a missing dependency: 'initialDataItem'. Either include it or remove the dependency array.",["188"],"'fetchThunk' is defined but never used.","'setLoading' is assigned a value but never used.","'setData' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},"Update the dependencies array to be: [onChangeRegion, watch]",{"range":"195","text":"196"},"Update the dependencies array to be: [dispatch]",{"range":"197","text":"198"},"Update the dependencies array to be: [dispatch, initialDataItem]",{"range":"199","text":"200"},[1710,1771],"[onChangeRegion, watch]",[1562,1564],"[dispatch]",[1140,1150],"[dispatch, initialDataItem]"]